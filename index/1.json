{
    "https://github.com/AAA3A-AAA3A/AAA3A-cogs": {
        "author": [
            "AAA3A"
        ],
        "description": "Several cogs adding functionality to the redbot.",
        "name": "AAA3A-cogs",
        "rx_branch": "",
        "rx_category": "unapproved",
        "rx_cogs": {
            "antinuke": {
                "author": [
                    "AAA3A"
                ],
                "description": "Have you ever dreamed of preventing a nuke by automatically removing all the permissions of someone who removes a channel from your server? Then this cog is for you! Personally, I would advise you to set your permissions, rather than trusting this cog. Trust those who have them.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "A cog to remove all permissions from a person who deletes a channel.",
                "tags": [
                    "nuke",
                    "protection",
                    "anti",
                    "raid"
                ],
                "type": ""
            },
            "clearchannel": {
                "author": [
                    "AAA3A"
                ],
                "description": "Have you ever wanted to demete all messages of a channel? Then this cog is for you!",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "A cog to delete ALL messages of a channel.",
                "tags": [
                    "cleanup",
                    "channel",
                    "delete"
                ],
                "type": ""
            },
            "cmdchannel": {
                "author": [
                    "AAA3A"
                ],
                "description": "Have you ever wanted to send commands to the bot and get a result in the channel of your choice? Then this cog is for you! It allows you to hide the author of the command and to do as if you had sent the command in the specified channel, by the specified user... It is up to the owner of a server to activate the option and to choose a channel for the logs.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "A cog to send the result of a command to another channel.",
                "tags": [
                    "command",
                    "channel",
                    "hide"
                ],
                "type": ""
            },
            "ip": {
                "author": [
                    "AAA3A"
                ],
                "description": "A cog to get the ip address of the bot.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "requests"
                ],
                "short": "A cog to get the ip address of the bot.",
                "tags": [
                    "ip",
                    "host",
                    "machine"
                ],
                "type": ""
            },
            "simplesanction": {
                "author": [
                    "AAA3A"
                ],
                "description": "Have you ever wanted to have a simple message with buttons to quickly choose the right sanction for a particular user? Then this cog is for you! It allows you to use the buttons on a message to select a sanction and choose the colour, thumbnail of the embed, and many other parameters... All the possibilities can only be done with arguments, which are all falcutative.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "dislash.py"
                ],
                "short": "A cog to collect several sanction actions against a user.",
                "tags": [
                    "sanction",
                    "user",
                    "ban",
                    "quick"
                ],
                "type": ""
            },
            "transferchannel": {
                "author": [
                    "AAA3A"
                ],
                "description": "Have you ever wanted to tranfer all messages channel in a other ? Then this cog is for you!",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "A cog to transfer all messages channel in a other channel.",
                "tags": [
                    "command",
                    "channel",
                    "hide"
                ],
                "type": ""
            }
        },
        "short": "Several cogs for the redbot."
    },
    "https://github.com/Craftzman7/crafter-cogs": {
        "author": [
            "Crafter#0001"
        ],
        "description": "Random cogs that I came up with on a sunday morning",
        "name": "crafter-cogs",
        "rx_branch": "",
        "rx_category": "unapproved",
        "rx_cogs": {
            "animal": {
                "author": [
                    "Crafter#0001"
                ],
                "description": "Fetch pictures of a variety of animals",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user data of any sort",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "send_messages",
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Get animal pictures",
                "tags": [],
                "type": ""
            },
            "basic": {
                "author": [
                    "Crafter#0001"
                ],
                "description": "Very basic example cog",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user data of any sort",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "send_messages"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Basic example cog",
                "tags": [],
                "type": ""
            },
            "massdm": {
                "author": [
                    "Crafter#0001"
                ],
                "description": "Message multiple users at once",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user data of any sort",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "send_messages"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Mass DM users",
                "tags": [],
                "type": ""
            },
            "roleplay": {
                "author": [
                    "Crafter#0001"
                ],
                "description": "Cog used for rolplaying with other Discord users",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user data of any sort",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "send_messages",
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [
                    "nekos.py"
                ],
                "short": "Cog used for roleplay",
                "tags": [],
                "type": ""
            },
            "voicemaster": {
                "author": [
                    "Crafter#0001"
                ],
                "description": "Allows for administration of voice channels",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user data of any sort",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "send_messages",
                    "manage_channels",
                    "mute_members",
                    "deafen_members"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Moderation VCs",
                "tags": [],
                "type": ""
            }
        },
        "short": "Fun and utility cogs"
    },
    "https://github.com/Dav-Git/Dav-Cogs": {
        "author": [
            "Dav"
        ],
        "description": "Cogs for RED DiscordBot by Dav",
        "name": "Dav-Cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "anonreporter": {
                "author": [
                    "Dav"
                ],
                "description": "Allow for users to report things anonymously",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Anonymous reports",
                "tags": [
                    "report",
                    "anonymous",
                    "moderation",
                    "global",
                    "guild",
                    "tools"
                ],
                "type": ""
            },
            "autoroler": {
                "author": [
                    "Dav"
                ],
                "description": "Assign roles to members when they join your server.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Autoroles on join",
                "tags": [
                    "Autoroles",
                    "roles",
                    "Automation",
                    "joinroles"
                ],
                "type": ""
            },
            "botstatus": {
                "author": [
                    "Dav"
                ],
                "description": "Automattically sets a status on bot start/restart.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Custom startup status",
                "tags": [],
                "type": ""
            },
            "casereader": {
                "author": [
                    "Dav"
                ],
                "description": "A different approach to ``[p]casesfor``.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "A different approach to ``[p]casesfor``.",
                "tags": [
                    "members",
                    "mod",
                    "moderation",
                    "warnings",
                    "checks",
                    "tools",
                    "modlog",
                    "cases"
                ],
                "type": ""
            },
            "caserelayer": {
                "author": [
                    "Dav"
                ],
                "description": "Relay a modlog case to a user, without sending the ``Moderator`` field.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Relay modlog cases.",
                "tags": [
                    "members",
                    "mod",
                    "moderation",
                    "warnings",
                    "checks",
                    "tools",
                    "modlog",
                    "cases"
                ],
                "type": ""
            },
            "check": {
                "author": [
                    "Dav"
                ],
                "description": "Fuses ``[p]warnings``,``[p]listflags``,``[p]read``,``[p]userinfo`` and [p]names``",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Mod-Check a user",
                "tags": [
                    "members",
                    "mod",
                    "moderation",
                    "warnings",
                    "checks",
                    "tools"
                ],
                "type": ""
            },
            "exclusiveroles": {
                "author": [
                    "Dav"
                ],
                "description": "Removes a role from a user as soon as another role is added.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Make roles (truly) exclusive",
                "tags": [
                    "roles",
                    "exclusive",
                    "autorole",
                    "tools"
                ],
                "type": ""
            },
            "httpcat": {
                "author": [
                    "Dav"
                ],
                "description": "Get info on HTTP status codes from https://http.cat",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "HTTP but with kittens! Yeeehaw",
                "tags": [],
                "type": ""
            },
            "mcwhitelister": {
                "author": [
                    "Dav"
                ],
                "description": "Manage your minecraft server whitelist from within discord.",
                "disabled": false,
                "end_user_data_statement": "This cog stores end user data in order to allow it to whitelist players on a minecraft server. It stores minecraft player names(and user IDs) as well as discord user IDs.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "aio-mc-rcon"
                ],
                "short": "Sync Minecraft whitelist with discord.",
                "tags": [
                    "Minecraft",
                    "Whitelist",
                    "Automation"
                ],
                "type": ""
            },
            "modlogstats": {
                "author": [
                    "Dav"
                ],
                "description": "Get statistics about your modlog cases.",
                "disabled": false,
                "end_user_data_statement": "This cog stores no end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Modlog statistics",
                "tags": [
                    "stats",
                    "modlog",
                    "statistics",
                    "long-ass-command"
                ],
                "type": ""
            },
            "mover": {
                "author": [
                    "Dav"
                ],
                "description": "Massmove voice users",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Massmove voice users",
                "tags": [
                    "Voice",
                    "Move",
                    "Massmove"
                ],
                "type": ""
            },
            "nicknamer": {
                "author": [
                    "Dav"
                ],
                "description": "Multiple Nickname tools",
                "disabled": false,
                "end_user_data_statement": "This cog stores nicknames and user IDs to allow for the freezing of nicknames and the temporary changing and restoring of nicknames.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Nickname toolkit",
                "tags": [],
                "type": ""
            },
            "prunecmd": {
                "author": [
                    "Dav"
                ],
                "description": "Calls the discord built-in prune function with a command.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Cleans up the member list.",
                "tags": [
                    "members",
                    "prune",
                    "purge",
                    "kick"
                ],
                "type": ""
            },
            "rolesyncer": {
                "author": [
                    "Dav"
                ],
                "description": "Adds a role to a user when another specified role is added.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Sync roles to each other.",
                "tags": [
                    "roles",
                    "sync",
                    "autorole",
                    "tools"
                ],
                "type": ""
            },
            "roomer": {
                "author": [
                    "Dav"
                ],
                "description": "Tools for voicechannels. \n - Automated voicechannel creation \n - Private voicechannels \n - Private textchannels",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Tools for voicechannels NEW: Private Text channels",
                "tags": [
                    "members",
                    "vc",
                    "voicechannel",
                    "textchannel",
                    "automation",
                    "private",
                    "private channels",
                    "tools"
                ],
                "type": ""
            },
            "stickymember": {
                "author": [
                    "Dav",
                    "Idea: Daniel_Edits"
                ],
                "description": "Make members sticky so they keep their roles when re-joining.",
                "disabled": false,
                "end_user_data_statement": "This cog stores roles that have been assigned to a member so that these roles can be reassigned on rejoin. This data is only stored on members that have been added via command. You may delete this information by making a data deletion request.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Make members sticky. Ewww. Gross.",
                "tags": [
                    "sticky",
                    "roles",
                    "moderation",
                    "member",
                    "guild",
                    "tools"
                ],
                "type": ""
            },
            "ticketer": {
                "author": [
                    "Dav"
                ],
                "description": "Advanced ticket system with improved management functionality.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "A ticket system.",
                "tags": [],
                "type": ""
            },
            "verifyer": {
                "author": [
                    "Dav"
                ],
                "description": "Add a safety barrier to your discord server and require users to run a command before accessing the server.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Force users to verify themselves.",
                "tags": [
                    "safety",
                    "security",
                    "verification"
                ],
                "type": ""
            }
        },
        "short": "Cogs made by Dav"
    },
    "https://github.com/Flame442/FlameCogs": {
        "author": [
            "Flame442 (Flame#2941)"
        ],
        "description": "A mixture of cogs made by Flame.",
        "name": "FlameCogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "battleship": {
                "author": [
                    "Flame442 (Flame#2941)"
                ],
                "description": "Play battleship with a friend.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pillow"
                ],
                "short": "Play battleship with a friend.",
                "tags": [
                    "fun",
                    "games",
                    "battleship"
                ],
                "type": ""
            },
            "deepfry": {
                "author": [
                    "Flame442 (Flame#2941)"
                ],
                "description": "Deepfry or nuke images passively and actively.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pillow"
                ],
                "short": "Deepfry or nuke images.",
                "tags": [
                    "fun",
                    "deepfry",
                    "nuke",
                    "fry"
                ],
                "type": ""
            },
            "face": {
                "author": [
                    "Flame442 (Flame#2941)"
                ],
                "description": "Find and describe the faces in an image.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pillow"
                ],
                "short": "Find and describe the faces in an image.",
                "tags": [
                    "fun",
                    "face"
                ],
                "type": ""
            },
            "gameroles": {
                "author": [
                    "Flame442 (Flame#2941)"
                ],
                "description": "Grant roles when a user is playing a specific game.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Grant roles when a user is playing a specific game.",
                "tags": [
                    "utility",
                    "role"
                ],
                "type": ""
            },
            "giftaway": {
                "author": [
                    "Flame442 (Flame#2941)"
                ],
                "description": "Create grabbable key giveaways.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Create grabbable key giveaways.",
                "tags": [
                    "utility"
                ],
                "type": ""
            },
            "hangman": {
                "author": [
                    "Flame442 (Flame#2941)"
                ],
                "description": "Play hangman with the bot.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Play hangman with the bot.",
                "tags": [
                    "fun",
                    "games",
                    "hangman"
                ],
                "type": ""
            },
            "hider": {
                "author": [
                    "Flame442 (Flame#2941)"
                ],
                "description": "Hide commands from users in help.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Hide commands from users in help.",
                "tags": [
                    "utility"
                ],
                "type": ""
            },
            "monopoly": {
                "author": [
                    "Flame442 (Flame#2941)"
                ],
                "description": "Play a game of monopoly with members of your server.",
                "disabled": false,
                "end_user_data_statement": "This cog stores user ids in order to identify the players in saved games.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pillow"
                ],
                "short": "Play a game of monopoly.",
                "tags": [
                    "fun",
                    "games",
                    "monopoly"
                ],
                "type": ""
            },
            "onlinestats": {
                "author": [
                    "Flame442 (Flame#2941)"
                ],
                "description": "Information about what devices people are using to run discord.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Information about what devices people are using to run discord.",
                "tags": [
                    "utility",
                    "online"
                ],
                "type": ""
            },
            "partygames": {
                "author": [
                    "Flame442 (Flame#2941)"
                ],
                "description": "Chat games focused on coming up with words from 3 letters.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Chat games focused on coming up with words from 3 letters.",
                "tags": [
                    "fun",
                    "games",
                    "chat"
                ],
                "type": ""
            },
            "simpleembed": {
                "author": [
                    "Flame442 (Flame#2941)"
                ],
                "description": "Simply send embeds.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Simply send embeds.",
                "tags": [
                    "utility",
                    "embed"
                ],
                "type": ""
            },
            "stocks": {
                "author": [
                    "Flame442 (Flame#2941)"
                ],
                "description": "Buy and sell stocks with bot currency.",
                "disabled": false,
                "end_user_data_statement": "This cog stores a user id in order to know what stocks have been purchased by each user. Data is only collected when a user directly interacts with the cog and its commands.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Buy and sell stocks with bot currency.",
                "tags": [
                    "utility",
                    "stock"
                ],
                "type": ""
            },
            "wordstats": {
                "author": [
                    "Flame442 (Flame#2941)"
                ],
                "description": "Tracks the most commonly used words by every member and in every server.",
                "disabled": false,
                "end_user_data_statement": "This cog persistently stores the number of times every unique word is said per-user per-guild. Data is collected on every message the bot can see unless the guild, channel, or user have opted out. Users can request that their data is deleted using `[p]wordstatsset forgetme` and can request to opt out of data collection using `[p]wordstatsset user no`.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Tracks commonly used words.",
                "tags": [
                    "fun",
                    "utility",
                    "stats"
                ],
                "type": ""
            }
        },
        "short": "A mixture of cogs made by Flame."
    },
    "https://github.com/Injabie3/lui-cogs-v3": {
        "author": [
            "Injabie3#1660",
            "sedruk",
            "KaguneAstra#6000",
            "TheDarkBot#1677",
            "quachtridat\u30fb\u305f\u3064#8232"
        ],
        "description": "A plethora of utility cogs by the SFU Anime Club. Some cogs were ported from the v2 days of Red.",
        "name": "lui-cogs-v3",
        "rx_branch": "",
        "rx_category": "unapproved",
        "rx_cogs": {
            "afterhours": {
                "author": [
                    "Injabie3#1660",
                    "KaguneAstra#6000",
                    "TheDarkBot#1677",
                    "quachtridat\u30fb\u305f\u3064#8232"
                ],
                "description": "This cog applies cog-specific exceptions for the #after-hours channel in SAD. Its use is limited outside of the club.",
                "disabled": false,
                "end_user_data_statement": "This cog stores when a user last spoke in a configured channel.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "SAD's exception cog handling for #after-hours",
                "tags": [],
                "type": ""
            },
            "avatar": {
                "author": [
                    "Injabie3#1660"
                ],
                "description": "This cog saves avatar images of users for year-end video making purposes",
                "disabled": false,
                "end_user_data_statement": "This cog will store users' avatar images",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Save avatar images of users",
                "tags": [],
                "type": ""
            },
            "birthday": {
                "author": [
                    "Injabie3#1660",
                    "TheDarkBot#1677"
                ],
                "description": "This cog assigns and at-mentions a user on their birthday.",
                "disabled": false,
                "end_user_data_statement": "This cog will associate a user's Discord ID with the month and day of their birthday, when entered.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Assign and at-mention a user on their birthday",
                "tags": [
                    "at-mention",
                    "birthday",
                    "notifications",
                    "roles"
                ],
                "type": ""
            },
            "catgirl": {
                "author": [
                    "Injabie3#1660"
                ],
                "description": "This cog allows you to post cute, random catgirls from a local database.",
                "disabled": false,
                "end_user_data_statement": "This cog doesn't store any user specific information.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "requests"
                ],
                "short": "Display cut images of catgirls.",
                "tags": [
                    "catgirl",
                    "images"
                ],
                "type": ""
            },
            "goodsmileinfo": {
                "author": [
                    "Injabie3#1660"
                ],
                "description": "This cog checks the Good Smile Company (GSC) website for news every hour and posts it to a configurable channel.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user-specific settings.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "aiohttp",
                    "bs4"
                ],
                "short": "Post news from Good Smile Company's (GSC) website to a channel",
                "tags": [
                    "news"
                ],
                "type": ""
            },
            "heartbeat": {
                "author": [
                    "Injabie3#1660"
                ],
                "description": "This cog allows you to punch a heartbeat to an uptime checker like StatusCake.",
                "disabled": false,
                "end_user_data_statement": "This cog only stores the URL to your uptime checker.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "requests"
                ],
                "short": "Punch a heartbeat to an uptime checker",
                "tags": [
                    "heartbeat",
                    "uptime"
                ],
                "type": ""
            },
            "highlight": {
                "author": [
                    "Injabie3#1660",
                    "sedruk"
                ],
                "description": "This cog is a Slack-like feature that allows users to be notified based on specific words outside of at-mentions",
                "disabled": false,
                "end_user_data_statement": "This cog stores user-defined settings, including their Discord ID in order to associate their preferences.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "DM a user on words they care about.",
                "tags": [
                    "notifications",
                    "dm"
                ],
                "type": ""
            },
            "qrchecker": {
                "author": [
                    "Injabie3#1660",
                    "TheDarkBot#1677",
                    "quachtridat\u30fb\u305f\u3064#8232"
                ],
                "description": "This cog scans for QR codes in image attachments, and posts their contents in a reply.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user-specific settings.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pyzbar",
                    "Pillow"
                ],
                "short": "Scan image attachments for QR codes, and post its contents",
                "tags": [
                    "qrcode",
                    "image"
                ],
                "type": ""
            },
            "ranks": {
                "author": [
                    "Injabie3#1660"
                ],
                "description": "This cog allows users to collect points and level up on a per-server basis.",
                "disabled": false,
                "end_user_data_statement": "This cog associates user experience with a user's discord ID.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "mysqlclient"
                ],
                "short": "A Mee6-inspired guild rank management system.",
                "tags": [
                    "info",
                    "ranks",
                    "rankings"
                ],
                "type": ""
            },
            "respects": {
                "author": [
                    "Injabie3#1660",
                    "quachtridat\u30fb\u305f\u3064#8232"
                ],
                "description": "This cog allows users to pay respects, aggregating closely paid respects into one message. It supports replies.",
                "disabled": false,
                "end_user_data_statement": "This cog stores guild-defined settings, and a user's Discord ID for the purpose of aggregating respects into a single message.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Press f to pay respects.",
                "tags": [],
                "type": ""
            },
            "roleassigner": {
                "author": [
                    "Injabie3#1660"
                ],
                "description": "This cog allows you to assign random roles from a pool to all users or users of a particular role.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Randomly assign roles to certain users from a pool of roles.",
                "tags": [
                    "roles"
                ],
                "type": ""
            },
            "rss": {
                "author": [
                    "Injabie3#1660",
                    "KaguneAstra#6000",
                    "sedruk"
                ],
                "description": "This cog allows you to post new items from an RSS feed to a text channel of your choice.",
                "disabled": false,
                "end_user_data_statement": "This cog doesn't store any user specific information.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "aiohttp",
                    "bs4",
                    "feedparser"
                ],
                "short": "Post new entries from RSS feeds to a text channel.",
                "tags": [
                    "news",
                    "rss"
                ],
                "type": ""
            },
            "servermanage": {
                "author": [
                    "Injabie3#1660",
                    "TheDarkBot#1677"
                ],
                "description": "This cog allows server owners to automatically change server icons and banners on given days by uploading relevant images in advance. Useful for themed events. Requires level 2 Server Boosts for banners.",
                "disabled": false,
                "end_user_data_statement": "This cog stores server images and banners in order to change them on certain days.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Manage your server's collection of banners and icons",
                "tags": [
                    "server",
                    "management",
                    "banner",
                    "icon"
                ],
                "type": ""
            },
            "sfu": {
                "author": [
                    "brenfan#9943",
                    "Injabie3#1660"
                ],
                "description": "This cog allows users to query SFU's public information, such as webcams, course information, and road reports.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any user information.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "bs4",
                    "requests"
                ],
                "short": "Access Simon Fraser University (SFU) public information.",
                "tags": [
                    "sfu",
                    "info"
                ],
                "type": ""
            },
            "smartreact": {
                "author": [
                    "FlapJack#5505",
                    "Injabie3#1660",
                    "KamiCreed#7290"
                ],
                "description": "A v2 port of flapjax's SmartReact cog, with the ability to refresh custom emojis.",
                "disabled": false,
                "end_user_data_statement": "This cog doesn't store private user information.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "add_reactions"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Automatically react to messages with emojis.",
                "tags": [
                    "reactions"
                ],
                "type": ""
            },
            "spoilers": {
                "author": [
                    "Injabie3#1660"
                ],
                "description": "This is a v2 port of our legacy spoiler cog. This was done to port over reaction-based spoilers before Discord had native support for them.",
                "disabled": false,
                "end_user_data_statement": "This cog doesn't store private user information.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Legacy v2 cog to support emoji-based spoilers in v3.",
                "tags": [
                    "spoilers"
                ],
                "type": ""
            },
            "stats": {
                "author": [
                    "Injabie3#1660"
                ],
                "description": "This cog allows you to show statistics about your server",
                "disabled": false,
                "end_user_data_statement": "This cog doesn't store any user specific information.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Display stats about your server",
                "tags": [
                    "info",
                    "statistics",
                    "stats"
                ],
                "type": ""
            },
            "tags": {
                "author": [
                    "Rapptz",
                    "Injabie3#1660"
                ],
                "description": "This cog is a port of the Danny bot's tags module by Rapptz from the async branch days, with addition modifications.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user-specific settings.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Save repetitive messages in a short tag for later access.",
                "tags": [
                    "fun",
                    "tags"
                ],
                "type": ""
            },
            "tempchannels": {
                "author": [
                    "Injabie3#1660",
                    "KaguneAstra#6000"
                ],
                "description": "This cog helps create a temporary text channel for a certain duration, and is automatically deleted afterwards. Supports role locking and more",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user-related information.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Create a temporary text channel.",
                "tags": [
                    "temporary"
                ],
                "type": ""
            },
            "triggered": {
                "author": [
                    "Injabie3#1660",
                    "\u304f\u305a\u307e#0420"
                ],
                "description": "This cog is a custom rework of spoopy's triggered command, except with more :)",
                "disabled": false,
                "end_user_data_statement": "This cog stores a user's avatar to create the triggered image.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "Pillow"
                ],
                "short": "Feeling triggered? Say no more, fam.",
                "tags": [
                    "fun"
                ],
                "type": ""
            },
            "welcome": {
                "author": [
                    "Injabie3#1660"
                ],
                "description": "This cog sends a server-configurable DM message to a user when they join. It also logs when a user joins or leaves a server in a configurable channel.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user-specific settings.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "DM a user when they join the server, and log server join/leaves in a channel",
                "tags": [
                    "notifications",
                    "dm"
                ],
                "type": ""
            },
            "wordfilter": {
                "author": [
                    "Injabie3#1660",
                    "sedruk"
                ],
                "description": "This cog allows you to filter messages in text-channel. It uses regex, and allows you to disable filtering in certain text channels, among other things. For developers, it exposes a public API for other cogs to hook into to see if a text blob contains a filtered word.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Smarter word filtering",
                "tags": [],
                "type": ""
            },
            "yourlsClient": {
                "author": [
                    "Injabie3#1660"
                ],
                "description": "This cog allows you to manage a YOURLS instance on a per-guild basis. It requires the `yourls-api-delete`, `yourls-api-edit-url`, and `yourls-api-search-keywords` plugins to be installed on your YOURLS instance.",
                "disabled": false,
                "end_user_data_statement": "This cog stores the API endpoint and signature in order to connect and authenticate to your YOURLS instance.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "yourls"
                ],
                "short": "Manage your YOURLS instance from Discord!",
                "tags": [
                    "url-shortener"
                ],
                "type": ""
            }
        },
        "short": "Utility cogs maintained by the SFU Anime Club"
    },
    "https://github.com/Jintaku/Jintaku-Cogs-V3": {
        "author": [
            "Jintaku",
            "Wyn"
        ],
        "description": "Awesome cogs made by the Jintaku community",
        "name": "Jintaku-Cogs-V3",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "anisearch": {
                "author": [
                    "Jintaku",
                    "Wyn"
                ],
                "description": "You can search anime, manga, users and characters from Anilist!",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Search Anilist for anime, manga, users, characters",
                "tags": [
                    "anime",
                    "manga",
                    "anilist",
                    "list"
                ],
                "type": ""
            },
            "booru": {
                "author": [
                    "Jintaku"
                ],
                "description": "Displays a random image board entry based on your query \n This may include NSFW content (although this is not the case by default)",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "aiocache==0.10.1"
                ],
                "short": "Display image board entries",
                "tags": [
                    "booru",
                    "images",
                    "gelbooru",
                    "yandere",
                    "konachan",
                    "NSFW"
                ],
                "type": ""
            },
            "confession": {
                "author": [
                    "Jintaku"
                ],
                "description": "Confess in a confession room to repent your crimes.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Confess secretly.",
                "tags": [
                    "confession",
                    "crime",
                    "secret"
                ],
                "type": ""
            },
            "conversationgames": {
                "author": [
                    "Jintaku"
                ],
                "description": "Play with your friends with some Truth or dare, would you rather or Never have I ever.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Truth or dare, Would you rather, Never have I ever..",
                "tags": [
                    "interaction",
                    "truth",
                    "dare",
                    "would",
                    "you",
                    "rather",
                    "never",
                    "have"
                ],
                "type": ""
            },
            "dmannouncer": {
                "author": [
                    "Jintaku"
                ],
                "description": "DM all the server owners that your bot is connected to, useful to notify users.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "DM all the server owners",
                "tags": [
                    "news",
                    "DM",
                    "information"
                ],
                "type": ""
            },
            "gamesearch": {
                "author": [
                    "Jintaku"
                ],
                "description": "Displays information about games from Rawg with reaction menus",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "aiocache"
                ],
                "short": "Display game information from Rawg",
                "tags": [
                    "games",
                    "information"
                ],
                "type": ""
            },
            "imdb": {
                "author": [
                    "Jintaku"
                ],
                "description": "Displays information about movies from IMDB using reaction menus",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Display movie information from IMDB",
                "tags": [
                    "movie",
                    "information"
                ],
                "type": ""
            },
            "osu": {
                "author": [
                    "Jintaku"
                ],
                "description": "Displays user information about osu users in a simple embed",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Display user information from osu",
                "tags": [
                    "osu",
                    "information"
                ],
                "type": ""
            },
            "pokemon": {
                "author": [
                    "Jintaku"
                ],
                "description": "Displays pokemons using pokeapi",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "aiocache==0.10.1"
                ],
                "short": "Display pokemon information",
                "tags": [
                    "pokemon",
                    "information",
                    "pokeapi"
                ],
                "type": ""
            },
            "roleplay": {
                "author": [
                    "Jintaku"
                ],
                "description": "Interact with users using anime GIFs",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Interact with users",
                "tags": [
                    "interaction",
                    "roleplay",
                    "GIF"
                ],
                "type": ""
            },
            "wikia": {
                "author": [
                    "Jintaku"
                ],
                "description": "Displays article summaries from wikia websites",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Displays wikia articles",
                "tags": [
                    "wikia",
                    "information"
                ],
                "type": ""
            },
            "xkcd": {
                "author": [
                    "Jintaku"
                ],
                "description": "Displays xkcd entries such as description, title and image/comic from xkcd",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Display random xkcd",
                "tags": [
                    "xkcd",
                    "comic",
                    "jokes"
                ],
                "type": ""
            }
        },
        "short": "Cogs made by the Jintaku community"
    },
    "https://github.com/Just-Jojo/JojoCogs": {
        "author": [
            "Jojo#7791"
        ],
        "description": "Just a bunch of weird cogs developed by Jojo.",
        "name": "JojoCogs",
        "rx_branch": "",
        "rx_category": "unapproved",
        "rx_cogs": {
            "advancedblacklist": {
                "author": [
                    "Jojo#7791"
                ],
                "description": "An advanced blacklist cog allowing you to get more out of the blacklist feature.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "An advanced blacklist cog",
                "tags": [
                    "utility",
                    "blacklist"
                ],
                "type": "COG"
            },
            "advancedinvite": {
                "author": [
                    "Jojo#7791"
                ],
                "description": "Embeds the invite command if possible.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.6",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Embed the invite command",
                "tags": [
                    "Utility"
                ],
                "type": "COG"
            },
            "advancedlog": {
                "author": [
                    "Jojo#7791"
                ],
                "description": "Allow moderators to make notes about users",
                "disabled": false,
                "end_user_data_statement": "This cog stores \"notes\" on users via ids.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Log/Make notes about users",
                "tags": [
                    "utility",
                    "moderation",
                    "mod"
                ],
                "type": "COG"
            },
            "cmdlogger": {
                "author": [
                    "Jojo#7791"
                ],
                "description": "Log when certain commands get used. This will always log to the console and can optionally log to a channel.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.6",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Log command usage",
                "tags": [
                    "utility",
                    "log",
                    "command"
                ],
                "type": "COG"
            },
            "cyclestatus": {
                "author": [
                    "Jojo#7791"
                ],
                "description": "Cycle the status on your bot so you don't have to update it constantly",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.6",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Cycle your bot's status",
                "tags": [
                    "utility",
                    "status"
                ],
                "type": "COG"
            },
            "depypher": {
                "author": [
                    "Jojo#7791"
                ],
                "description": "Encript and decript text using ciphers like Caesar and Vigenere!",
                "disabled": false,
                "end_user_data_statement": "This cog does not store user data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.6",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pycipher"
                ],
                "short": "Decipher and encipher text using encriptions!",
                "tags": [
                    "fun",
                    "cipher"
                ],
                "type": "COG"
            },
            "errorblacklist": {
                "author": [
                    "Jojo#7791"
                ],
                "description": "Blacklist users if they use a command that errors too many times",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Blacklist users if they use a command that errors too many times",
                "tags": [
                    "utility,",
                    "blacklist"
                ],
                "type": "COG"
            },
            "todo": {
                "author": [
                    "Jojo#7791"
                ],
                "description": "A board designed for keeping track of your tasks.",
                "disabled": false,
                "end_user_data_statement": "This cog stores \"tasks\" via user ids.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate",
                    "emoji"
                ],
                "short": "Keep track of things todo",
                "tags": [
                    "todo",
                    "utility"
                ],
                "type": "COG"
            }
        },
        "short": "Silly (and sometimes useful) cogs by Jojo"
    },
    "https://github.com/Kowlin/Sentinel": {
        "author": [
            "Kowlin#2536"
        ],
        "description": "Moderation oriented cogs built for Red-DiscordBot",
        "name": "Sentinel",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "antirp": {
                "author": [
                    "Kowlin"
                ],
                "description": "Block any type of rich presence invites",
                "disabled": false,
                "end_user_data_statement": "This cog stores no personal data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Block any type of rich presence invites",
                "tags": [
                    "Moderation",
                    "Rich Presence"
                ],
                "type": "COG"
            },
            "freshmeat": {
                "author": [
                    "Kowlin",
                    "JennJenn",
                    "Irdumb (v2 iteration)"
                ],
                "description": "Check out the latest bunch of members with Freshmeat",
                "disabled": false,
                "end_user_data_statement": "This cog stores no personal data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Check out the latest bunch of members with Freshmeat",
                "tags": [
                    "moderation",
                    "members"
                ],
                "type": "COG"
            },
            "githubcards": {
                "author": [
                    "Kowlin (Kowlin#2536)",
                    "jack1142 (Jackenmen#6607)",
                    "mikeshardmind (Sinbad#1871)"
                ],
                "description": "Ever wanted to embed a github issue?! Well **now** you can! With GitHubCards, this sweet cog allows you to embed any issue from any public repo you like by using a unique prefix!\n*Warning: GithubCards will blow your mind!*",
                "disabled": false,
                "end_user_data_statement": "This cog stores no personal data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Embed GitHub issues on your discord chat.",
                "tags": [
                    "api",
                    "github",
                    "utility"
                ],
                "type": "COG"
            },
            "massmove": {
                "author": [
                    "Kowlin"
                ],
                "description": "Massmove members out of voice channels.",
                "disabled": false,
                "end_user_data_statement": "This cog stores no personal data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Massmove members out of voice channels.",
                "tags": [
                    "moderation",
                    "massmove",
                    "voice",
                    "voicemoderation"
                ],
                "type": "COG"
            },
            "slashinjector": {
                "author": [
                    "Kowlin"
                ],
                "description": "A quick and dirty solution for adding in a slash command parser, so everyone doesn't have to fight over injecting an parser.",
                "disabled": false,
                "end_user_data_statement": "This cog stores no personal data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "A quick and dirty solution for adding in a slash command parser, so everyone doesn't have to fight over injecting an parser.",
                "tags": [
                    "api",
                    "injector",
                    "parser"
                ],
                "type": "COG"
            }
        },
        "short": "Moderation oriented cogs built for Red-DiscordBot"
    },
    "https://github.com/Malarne/discord_cogs": {
        "author": [
            "Malarne (Malarne#1418)"
        ],
        "description": "Some cogs that i think are useful, feel free to use them !",
        "name": "discord_cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "League": {
                "author": [
                    "Malarne (Malarne#1418)"
                ],
                "description": "A League of legend cog !\nUse [p]help League for all commands !",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.0.0rc2",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "League of legend cog",
                "tags": [
                    "league",
                    "game",
                    "legend"
                ],
                "type": ""
            },
            "Leveler": {
                "author": [
                    "Malarne (Malarne#1418)"
                ],
                "description": "A leveler cog for Red V3\nInspired by Stevy's v2 leveler cog\nPlease consult the docs at ayrobot.netlify.com for setup informations.\nThanks for using my cog !\nNB:Channel whitelist is enabled by default, you can manage that under `[p]levelerset channel whitelist` command !",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.0.2",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "Pillow"
                ],
                "short": "Leveler tool, better than MEE6",
                "tags": [
                    "leveler",
                    "pillow",
                    "fun"
                ],
                "type": ""
            },
            "account": {
                "author": [
                    "NerdieTony",
                    "Malarne (Malarne#1418)"
                ],
                "description": "Just an account cog with fields like email, age, gender, and such.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.1.1",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "The Account Cog",
                "tags": [
                    "Account",
                    "Profile"
                ],
                "type": ""
            },
            "anarchy": {
                "author": [
                    "Malarne (Malarne#1418)"
                ],
                "description": "A cog that'll turn your server into anarchy !",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.1.1",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "anarchy moderation cog",
                "tags": [
                    "anarchy",
                    "moderation",
                    "kick",
                    "vote"
                ],
                "type": ""
            },
            "apex": {
                "author": [
                    "Malarne",
                    "Malarne#1418"
                ],
                "description": "An Apex Legends cog !\nUse [p]help Apex for all commands !",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Apex legend cog",
                "tags": [
                    "apex",
                    "game",
                    "legend"
                ],
                "type": ""
            },
            "heist": {
                "author": [
                    "Redjumpman",
                    "Malarne (Malarne#1418)"
                ],
                "description": "v3 version of RJM heist cog. i'm a bit lazy to write something really helpful there, i'm pretty sure you already know what this cog does ...",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate"
                ],
                "short": "Heist mini-game inspired by Twitch's deep bot",
                "tags": [
                    "heist",
                    "games",
                    "economy"
                ],
                "type": ""
            },
            "oBoobs": {
                "author": [
                    "Malarne (Malarne#1418)"
                ],
                "description": "V3 update of https://github.com/Canule/Mash-Cogs oboobs cog",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.0.0rc2",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "nsfw cog",
                "tags": [
                    "nsfw",
                    "boobs",
                    "ass"
                ],
                "type": ""
            }
        },
        "short": "Miscellaneous cogs"
    },
    "https://github.com/NeuroAssassin/Toxic-Cogs": {
        "author": [
            "Neuro Assassin"
        ],
        "description": "This repo holds the several different cogs, for Red - Discord Bot by TwentySix.",
        "name": "Toxic-Cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "authgg": {
                "author": [
                    "Neuro Assassin"
                ],
                "description": "Unlock your users' HWID locks on auth.gg straight from your bot in Discord",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Control your users on auth.gg straight from Discord.",
                "tags": [
                    "tools"
                ],
                "type": ""
            },
            "color": {
                "author": [
                    "Neuro Assassin"
                ],
                "description": "This cog will tell you the hexadecimal value, rgb value and the name of the color that is supplied to it.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "colour",
                    "pillow"
                ],
                "short": "Tells you the hexadecimal values, rgb values and names of colors",
                "tags": [
                    "tools"
                ],
                "type": ""
            },
            "commandchart": {
                "author": [
                    "Neuro Assassin"
                ],
                "description": "This cog tells a Discord User the commands used, and the usage of them, in the last so and so messages.  Based off of aikaterna's chatchart cog.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "matplotlib"
                ],
                "short": "Tells the used and usages of commands!  Based off of aikaterna's chatchart cog.",
                "tags": [
                    "tools"
                ],
                "type": ""
            },
            "cooldown": {
                "author": [
                    "Neuro Assassin"
                ],
                "description": "Allows a bot owner to set cooldowns for commands",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Allows bot owner to set cooldowns for commands",
                "tags": [
                    "tools"
                ],
                "type": ""
            },
            "dashboard": {
                "author": [
                    "Neuro Assassin"
                ],
                "description": "Control your bot through a web dashboard, allowing people to run commands (with permissions checked) straight from an easy-to-use dashboard.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "markdown2"
                ],
                "short": "Interact with your bot through a web dashboard.",
                "tags": [
                    "tools"
                ],
                "type": ""
            },
            "deleter": {
                "author": [
                    "Neuro Assassin"
                ],
                "description": "Allows moderators to make messages be auto-deleted after a certain amount of time in a certain channel.  WARNING: This cog has potential API abuse AND SHOULD BE USED CAREFULLY!  If you see any issues arise due to this, please report to Neuro Assassin or bot owner ASAP!",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Allows for the auto-deletion of messages in a channel after a specified wait time.",
                "tags": [
                    "tools"
                ],
                "type": ""
            },
            "editor": {
                "author": [
                    "Neuro Assassin"
                ],
                "description": "Allows an administrator to change the text of one of the bot's messages, by either specifying the new content or by taking the content (and embed, if applicable) of another message.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Edit one of the bot's messages easily.",
                "tags": [
                    "tools"
                ],
                "type": ""
            },
            "esolang": {
                "author": [
                    "Neuro Assassin"
                ],
                "description": "Run code in some of the more popular esoteric languages for fun.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Run code in esoteric languages.",
                "tags": [
                    "fun"
                ],
                "type": ""
            },
            "evolution": {
                "author": [
                    "Neuro Assassin"
                ],
                "description": "Buy animals using economy credits or get them every 10 minutes, and gain a certain amount of credits every minute!",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Buy and get animals to get more economy credits!",
                "tags": [
                    "fun"
                ],
                "type": ""
            },
            "listpermissions": {
                "author": [
                    "Neuro Assassin"
                ],
                "description": "This cog will allow you to see all permissions, available permissions or denied permissions or a role or member across the guild or in a channel.  Do note however that the `[p](groupcommand) channel role` only provides basic permissions, and will only tell what is different for the channel compared to the guild permissions for a role.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "prettytable",
                    "fuzzywuzzy"
                ],
                "short": "Gives you the permissions of a role/member guild wide or in a channel",
                "tags": [
                    "tools"
                ],
                "type": ""
            },
            "maintenance": {
                "author": [
                    "Neuro Assassin"
                ],
                "description": "Allows the owner to put the bot on maintenance, and specify when the maintenance will be over (but does not have to).  The bot owner can also whitelist users from the maintenance.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Allows the bot owner to put the bot on maintenance.",
                "tags": [
                    "tools"
                ],
                "type": ""
            },
            "minesweeper": {
                "author": [
                    "Neuro Assassin"
                ],
                "description": "This cog allows a Discord User to play the game Minesweeper inside of a text channel.\nSmall warning: this cog can sometimes you up rate limits (depending how fast you play), so be careful while playing.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Allows you to play Minesweeper inside of Discord!\nSmall warning: this cog can sometimes you up rate limits (depending how fast you play), so be careful while playing.",
                "tags": [
                    "fun"
                ],
                "type": ""
            },
            "reacticket": {
                "author": [
                    "Neuro Assassin"
                ],
                "description": "Allow users to create ticket channels by clicking on a set reaction on a set message.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Create a reaction-based ticketing system.",
                "tags": [
                    "tools",
                    "utility"
                ],
                "type": ""
            },
            "scanner": {
                "author": [
                    "Neuro Assassin"
                ],
                "description": "This cog will send a report to a channel with details of an image violating the set conditions, and will auto delete the message if set to.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Detects images being sent and checks whether they are inappropriate based on the set filters.",
                "tags": [
                    "tools"
                ],
                "type": ""
            },
            "simon": {
                "author": [
                    "Neuro Assassin"
                ],
                "description": "This cog allows a Discord User to play the game Simon inside of a text channel.\nWarning!  This cog uses a major portion of the bot's rate limits.  This may prevent the bot from sending messages, adding emojis or deleting messages in specific peroids of time.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Allows you to play Simon inside of Discord!\nWarning!  This cog uses a major portion of the bot's rate limits.",
                "tags": [
                    "fun"
                ],
                "type": ""
            },
            "sw": {
                "author": [
                    "Neuro Assassin"
                ],
                "description": "Get information about a bunch of different things in Star Wars.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Get information about a bunch of different things in Star Wars.",
                "tags": [
                    "info",
                    "fun"
                ],
                "type": ""
            },
            "targeter": {
                "author": [
                    "Neuro Assassin"
                ],
                "description": "Returns a list of members in the current guild that meet the passed arguments.  Commands can take long times based upon the amount of members in the guild.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Targets users based upon the passed arguments",
                "tags": [
                    "tools"
                ],
                "type": ""
            },
            "twenty": {
                "author": [
                    "Neuro Assassin"
                ],
                "description": "This cog allows a Discord User to play 2048 inside of a text channel.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Allows you to play 2048 inside of Discord!",
                "tags": [
                    "fun"
                ],
                "type": ""
            },
            "updatechecker": {
                "author": [
                    "Neuro Assassin"
                ],
                "description": "This cog will tell when there is an update available for a repository you have added for your bot, and, depending on settings, will auto update or will just notify you.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "feedparser"
                ],
                "short": "Notifies you when an update for a repo is available.",
                "tags": [
                    "tools"
                ],
                "type": ""
            }
        },
        "short": "Holds cogs made by Neuro Assassin."
    },
    "https://github.com/NoPlagiarism/PlusyCogs": {
        "author": [
            "Albrt#3043"
        ],
        "description": "Some cogs for fun from NoPlagiarism",
        "name": "PlusyCogs",
        "rx_branch": "",
        "rx_category": "unapproved",
        "rx_cogs": {
            "exists": {
                "author": [
                    "Albrt#3043"
                ],
                "description": "Compilation of generators a-like this {sth} does not exists. ",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    9,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "This x does not exists",
                "tags": [
                    "generator",
                    "thisdoesnotexists"
                ],
                "type": "COG"
            }
        },
        "short": "Exists and Va-11 Hall-a"
    },
    "https://github.com/Obi-Wan3/OB13-Cogs": {
        "author": [
            "Obi-Wan3"
        ],
        "description": "Assorted utility cogs for Red v3: custom emoji management, website status monitoring, public/private VC system creation, custom bot mentionhelp, and more!",
        "name": "OB13-Cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "announcements": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Send an announcement message with a role ping in a particular channel.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Announcement with Role Ping",
                "tags": [
                    "utility",
                    "announcement",
                    "message",
                    "role ping"
                ],
                "type": "COG"
            },
            "botaccess": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Allow users with the Server Booster, Patreon, etc. roles to invite the bot to a (few) server(s) of their choice.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided global settings, as well as the current BotAccess servers and their inviters.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Allow Special Roles Access to Bot",
                "tags": [
                    "bot",
                    "invite",
                    "access",
                    "boost",
                    "supporter",
                    "servers"
                ],
                "type": "COG"
            },
            "brainshop": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "An artificial intelligence chatbot using BrainShop (https://brainshop.ai/).",
                "disabled": false,
                "end_user_data_statement": "This cog uses the BrainShop API (https://brainshop.ai/), sending the contents of a message and its author's user ID to BrainShop in order to receive a response. Please see BrainShop's ToS at https://brainshop.ai/terms. The cog itself only stores settings data (i.e. global/guild toggles and guild auto-reply channels).",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "AI Chatbot Using BrainShop (https://brainshop.ai/)",
                "tags": [
                    "fun",
                    "brainshop",
                    "ai",
                    "chatbot",
                    "cleverbot"
                ],
                "type": "COG"
            },
            "counting": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Create a counting channel for your server, with various additional management options!",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server settings (e.g. toggle, channel, role, etc.), as well as the amount of times a user (identified by their Discord ID) has counted wrong, for the purpose of a wrong-count penalty.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.1",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "manage_messages",
                    "manage_roles",
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Multifeatured Counting Channel",
                "tags": [
                    "fun",
                    "counting",
                    "channel",
                    "role",
                    "mute"
                ],
                "type": "COG"
            },
            "createchannels": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Allow users to create voice and text channels via commands.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server settings, as well as the current channels created through the cog.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "embed_links",
                    "manage_channels"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Create Text & Voice Channels Using Commands",
                "tags": [
                    "utility",
                    "create",
                    "channels",
                    "text",
                    "voice"
                ],
                "type": "COG"
            },
            "directmessage": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Easily send direct messages to other users as the bot.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Easily Send DMs as the Bot",
                "tags": [
                    "utility",
                    "DM",
                    "direct message"
                ],
                "type": "COG"
            },
            "embedreact": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Automatically add reactions to messages with embedded content.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server settings (toggles, channels to listen for, and the reactions to add).",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "embed_links",
                    "add_reactions"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Auto-Reactions to Embeds",
                "tags": [
                    "utility",
                    "embeds",
                    "reactions",
                    "automatic"
                ],
                "type": "COG"
            },
            "emojitools": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Various tools for managing custom emojis in servers.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users. If enabled, the `[p]emojitools save` command group saves to folders in the cog data path image files of emojis that server administrators select.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "manage_emojis",
                    "attach_files"
                ],
                "required_cogs": {},
                "requirements": [
                    "aiofiles>=0.7.0",
                    "aiozipstream"
                ],
                "short": "Tools for Managing Custom Emojis",
                "tags": [
                    "utility",
                    "emojis",
                    "management",
                    "tools",
                    "zip",
                    "save",
                    "add",
                    "delete",
                    "info"
                ],
                "type": "COG"
            },
            "fah": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Various Folding@Home team & donor statistics (https://foldingathome.org/).",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Various Folding@Home Stats (https://foldingathome.org/).",
                "tags": [
                    "fun",
                    "Folding@Home",
                    "stats"
                ],
                "type": "COG"
            },
            "github": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Customizable system for GitHub commit updates similar to the webhook.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server settings, as well as the GitHub commit feed links provided by users (to fetch new commit updates).",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.1",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [
                    "feedparser",
                    "html2text"
                ],
                "short": "GitHub RSS Commit Feeds",
                "tags": [
                    "utility",
                    "github",
                    "rss",
                    "feed",
                    "commits",
                    "embed"
                ],
                "type": "COG"
            },
            "improvtime": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Story improv, one word at a time.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server settings (e.g. toggles, word limits, whether to allow repeats, etc.).",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "manage_messages"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "One Word Story Channel",
                "tags": [
                    "fun",
                    "improv",
                    "story",
                    "channel"
                ],
                "type": "COG"
            },
            "lfg": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "An LFG cog with customizable fields, VC renaming, and invitations.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server settings (e.g. toggle, fields, etc.), as well as the current active VCs.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "embed_links",
                    "create_instant_invite",
                    "manage_channels",
                    "manage_messages"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "VC LFG System w/ Custom Fields",
                "tags": [
                    "fun",
                    "lfg",
                    "VC",
                    "custom fields",
                    "invite"
                ],
                "type": "COG"
            },
            "mentionhelp": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Set a custom message to be sent on bot mention.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server and global settings.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Customizable MentionHelp Message",
                "tags": [
                    "utility",
                    "mentionhelp",
                    "custom",
                    "message"
                ],
                "type": "COG"
            },
            "messagenotifier": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Notify you of new messages in certain channels within time intervals.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided settings (i.e. channels to watch, users to alert, etc.).",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Notify You of Messages in Certain Channels",
                "tags": [
                    "utility",
                    "message",
                    "notify",
                    "channels"
                ],
                "type": "COG"
            },
            "nodms": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Disallow any commands in DMs from others, with adjustable settings.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Disallow DM Commands",
                "tags": [
                    "utility",
                    "disallow",
                    "commands",
                    "DMs"
                ],
                "type": "COG"
            },
            "privaterooms": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Private VCs that are created automatically, with permission overrides for a lobby channel.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server settings, as well as information about the active VCs (and their owners) created through this cog, identified by Discord IDs.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "manage_channels"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Automatic Private VCs with Lobby",
                "tags": [
                    "utility",
                    "privaterooms",
                    "voice channels",
                    "automatic",
                    "creation",
                    "lobby"
                ],
                "type": "COG"
            },
            "publicrooms": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Public VCs that are created automatically, with customizable channel naming templates and support for multiple systems.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server settings, as well as information about the active VCs (and their creators) created through this cog, identified by Discord IDs.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "manage_channels"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Automatic Public VC Creation",
                "tags": [
                    "utility",
                    "publicrooms",
                    "voice channels",
                    "automatic",
                    "creation",
                    "templates"
                ],
                "type": "COG"
            },
            "quizrole": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Automatically assign roles to users who have taken and successfully passed a quiz through DMs.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server settings, as well as the last time a member (identified by UserID) has taken a quiz.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "manage_roles",
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Take a Quiz to Gain a Role",
                "tags": [
                    "utility",
                    "quiz",
                    "role",
                    "auto",
                    "DM"
                ],
                "type": "COG"
            },
            "reactionpolls": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Set up poll channels in which reactions with emojis contained in messages are automatically added.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server settings (i.e. poll channels & respective default reactions).",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "add_reactions"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Poll Channels w/ Auto-Reactions",
                "tags": [
                    "utility",
                    "reaction",
                    "polls",
                    "channel",
                    "survey"
                ],
                "type": "COG"
            },
            "referrals": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Allows users who refer others to the server to gain credits.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server settings, as well as users who have already redeemed their credits (identified by UserIDs).",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Invite Referral -> Credits",
                "tags": [
                    "fun",
                    "referrals",
                    "reward",
                    "invite",
                    "credits",
                    "economy"
                ],
                "type": "COG"
            },
            "reply": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Reply to a message using the Discord reply feature.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.6",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Bot Replies to Messages",
                "tags": [
                    "utility",
                    "reply"
                ],
                "type": "COG"
            },
            "restrictedroleperms": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Gives restricted permissions to certain roles to mention/assign other roles.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server settings (e.g. toggles, rules, custom success messages, etc.).",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Give Certain Roles Restricted Permissions",
                "tags": [
                    "utility",
                    "restricted",
                    "role",
                    "permissions",
                    "assign",
                    "mention"
                ],
                "type": "COG"
            },
            "rolesync": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Add roles to new members if they have a certain role in another server.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided settings (i.e. roles/servers to sync, toggles, etc.).",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.8",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "embed_links",
                    "manage_roles"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Cross-Server Role Sync on Join",
                "tags": [
                    "utility",
                    "roles",
                    "sync",
                    "join",
                    "cross-server"
                ],
                "type": "COG"
            },
            "roletiers": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Set roles to be assigned based on the activity and time since join for members.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server settings and the activity of members (# messages sent and time in server).",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "manage_roles",
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Tiered Roles for Active Members",
                "tags": [
                    "utility",
                    "roles",
                    "tier",
                    "activity",
                    "messages",
                    "time"
                ],
                "type": "COG"
            },
            "sitestatus": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Monitor the statuses of websites and receive down alerts.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server settings about sites to monitor, as well as their downtime info.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "manage_channels",
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Monitor Website Statuses",
                "tags": [
                    "utility",
                    "website",
                    "status",
                    "downtime",
                    "alerts"
                ],
                "type": "COG"
            },
            "statusrole": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Assign roles to users for the duration in which they have certain custom statuses.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server settings (i.e. custom status to watch for, the respective roles to assign, and an optional log channel).",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "manage_roles"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Roles for Certain Custom Statuses",
                "tags": [
                    "utility",
                    "custom status",
                    "roles"
                ],
                "type": "COG"
            },
            "streamrole": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Automatically give roles to users going live in Discord.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server settings (i.e. toggle and role-VC pairs).",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "manage_roles"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Roles for Discord Streamers",
                "tags": [
                    "utility",
                    "stream",
                    "role",
                    "discord",
                    "live",
                    "screenshare"
                ],
                "type": "COG"
            },
            "templateposts": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Requires any messages in a channel which a template is set to follow that template (or be auto-removed).",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server settings (e.g. toggles, channels and their templates, etc.).",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "manage_messages",
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Posts w/ Template Requirements",
                "tags": [
                    "utility",
                    "required",
                    "template",
                    "message",
                    "channel"
                ],
                "type": "COG"
            },
            "temprole": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Assign temporary roles to users, expiring after a set time.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server settings, as well as the active TempRoles (role and user IDs) and time remaining for each.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "manage_roles"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Assign Temporary Roles",
                "tags": [
                    "utility",
                    "temporary",
                    "role",
                    "timed",
                    "expire"
                ],
                "type": "COG"
            },
            "translate": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "Translate text and messages using Google Translate for free.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server settings (e.g. auto-translation channels & their destination languages).",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.6",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [
                    "googletrans==3.1.0a0"
                ],
                "short": "Free Google Translations",
                "tags": [
                    "utility",
                    "translation",
                    "google translate",
                    "language",
                    "auto-translate",
                    "channels"
                ],
                "type": "COG"
            },
            "uploadstreaks": {
                "author": [
                    "Obi-Wan3"
                ],
                "description": "A leaderboard with points and streaks for uploading attachments in specific channels per interval of time.",
                "disabled": false,
                "end_user_data_statement": "This cog stores provided server settings, as well as each participating user's streak, points, and time of last entry.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Streaks & Points for Uploads",
                "tags": [
                    "fun",
                    "upload",
                    "economy",
                    "streak",
                    "points",
                    "leaderboard"
                ],
                "type": "COG"
            }
        },
        "short": "Utility Cogs for Red by Obi-Wan3"
    },
    "https://github.com/Onii-Chan-Discord/onii-cogs": {
        "author": [
            "Onii-chan#3920"
        ],
        "description": "A list of fun oriented cogs by Onii",
        "name": "onii-cogs",
        "rx_branch": "",
        "rx_category": "unapproved",
        "rx_cogs": {
            "animal": {
                "author": [
                    "Onii-chan#3920",
                    "GhOsT#0001"
                ],
                "description": "Wallpaper commands!",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "",
                "tags": [],
                "type": ""
            },
            "game": {
                "author": [
                    "Onii-Chan"
                ],
                "description": "A game cog, which has games like, akinato, 2048, minesweeper, tictactoe and wumpus.",
                "disabled": false,
                "end_user_data_statement": "This cog does not save data about users persistently.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "A game cog with multiple games.",
                "tags": [
                    "2048",
                    "miesweeper",
                    "tictactoe",
                    "wumpus",
                    "games"
                ],
                "type": ""
            },
            "image": {
                "author": [
                    "Onii-chan#3920",
                    "GhOsT#0001"
                ],
                "description": "Image commands!",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "",
                "tags": [],
                "type": ""
            },
            "nsfw": {
                "author": [
                    "Ari (Onii-chan#3920)"
                ],
                "description": "NSFW commands.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "",
                "tags": [],
                "type": ""
            },
            "oniitools": {
                "author": [
                    "Onii-chan#3920"
                ],
                "description": "A random assortment of fun commands!",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "",
                "tags": [],
                "type": ""
            },
            "perform": {
                "author": [
                    "Ari (Onii-chan#3920), sravan (sravan#0001)"
                ],
                "description": "Perform Actions like kiss, cuddle etc.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "",
                "tags": [],
                "type": ""
            }
        },
        "short": "A list of fun cogs by Onii"
    },
    "https://github.com/OofChair/OofCogs": {
        "author": [
            "OofChair#0001"
        ],
        "description": "Cogs created by a beginner Python coder that don't have a lot of meaning",
        "name": "OofCogs",
        "rx_branch": "",
        "rx_category": "unapproved",
        "rx_cogs": {
            "advancedeconomy": {
                "author": [
                    "OofChair"
                ],
                "description": "advancedeconomy",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "An advanced economy cog.",
                "tags": [
                    "economy",
                    "advanced",
                    "advancedeconomy",
                    "oofcogs"
                ],
                "type": "COG"
            },
            "diaccents": {
                "author": [
                    "OofChair",
                    ""
                ],
                "description": "Diacritic cog for Red",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "dcl"
                ],
                "short": "Diaccents = Diacritic + accents",
                "tags": [
                    "diacritic",
                    "accent",
                    "oofcogs",
                    "dcl"
                ],
                "type": "COG"
            },
            "invitetracker": {
                "author": [
                    "OofChair",
                    "GregTCLTK (Skidder#8515)"
                ],
                "description": "An invite tracker cog for Red, converted from discord.py to work with Red",
                "disabled": true,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "An invite tracker cog for Red.",
                "tags": [
                    "invite",
                    "invitetracker",
                    "oofcogs",
                    "invites",
                    "track",
                    "tracker"
                ],
                "type": "COG"
            },
            "redditpic": {
                "author": [
                    "OofChair"
                ],
                "description": "Get a random picture from Reddit and see stats of that post.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Get a random picture from Reddit.",
                "tags": [
                    "meme",
                    "reddit",
                    "fun"
                ],
                "type": "COG"
            },
            "serverping": {
                "author": [
                    "OofChair"
                ],
                "description": "Ping a domain or an IP.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "git+https://github.com/OofChair/simple-ping"
                ],
                "short": "Ping a server.",
                "tags": [
                    "ping",
                    "fun"
                ],
                "type": "COG"
            },
            "sql": {
                "author": [
                    "OofChair"
                ],
                "description": "A cog that interacts with different databases.\nCurrent databases: MySQL\n\nPlanned databases: MongoDB, PostgreSQL",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.6",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "mysql-connector-python"
                ],
                "short": "A cog that interacts with different databases.",
                "tags": [
                    "mysql",
                    "dev"
                ],
                "type": "COG"
            },
            "sxcu": {
                "author": [
                    "Predeactor",
                    "OofChair"
                ],
                "description": "Send your image and shorten your URL with your own subdomain.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Shorten your link and send your image through a link.",
                "tags": [
                    "utility",
                    "upload",
                    "tools",
                    "dev",
                    "shorten",
                    "link",
                    "image"
                ],
                "type": ""
            }
        },
        "short": "Cogs made by OofChair#0001 that can do random things."
    },
    "https://github.com/PhasecoreX/PCXCogs": {
        "author": [
            "PhasecoreX (PhasecoreX#0635)"
        ],
        "description": "My cogs focus on automation, where the bot will automatically respond or perform actions when needed, even if commands are not used. There's also other stuff thrown in there for fun.",
        "name": "PCXCogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "autoroom": {
                "author": [
                    "PhasecoreX (PhasecoreX#0635)"
                ],
                "description": "This cog facilitates automatic voice channel creation. When a member joins an AutoRoom Source (voice channel), this cog will move them to a brand new AutoRoom that they have control over. Once everyone leaves the AutoRoom, it is automatically deleted.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.8",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pyparsing"
                ],
                "short": "Automatic voice channel management.",
                "tags": [
                    "audio",
                    "auto",
                    "automatic",
                    "channel",
                    "room",
                    "voice"
                ],
                "type": ""
            },
            "bancheck": {
                "author": [
                    "PhasecoreX (PhasecoreX#0635)"
                ],
                "description": "This cog allows server admins to check their members against multiple external ban lists. It can also automatically check new members that join the server, and optionally ban them if they appear in a list.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.8",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Automatically check users against multiple global ban lists.",
                "tags": [
                    "ban",
                    "moderation",
                    "utility"
                ],
                "type": ""
            },
            "decodebinary": {
                "author": [
                    "PhasecoreX (PhasecoreX#0635)"
                ],
                "description": "Automatically decodes binary strings to human readable ones when detected in chat.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Automatically decode binary strings in chat.",
                "tags": [
                    "binary",
                    "decode"
                ],
                "type": ""
            },
            "dice": {
                "author": [
                    "PhasecoreX (PhasecoreX#0635)"
                ],
                "description": "This cog allows for rolling complex dice, such as 3d8+4 or (4d6+3)*2.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pyhedrals"
                ],
                "short": "Perform complex dice rolling.",
                "tags": [
                    "random",
                    "utility"
                ],
                "type": ""
            },
            "heartbeat": {
                "author": [
                    "PhasecoreX (PhasecoreX#0635)"
                ],
                "description": "Monitor the uptime of your bot by having it send heartbeat pings to a configurable URL (healthchecks.io for instance).",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "A heartbeat uptime client.",
                "tags": [
                    "health",
                    "healthcheck",
                    "ping",
                    "schedule",
                    "uptime",
                    "utility"
                ],
                "type": ""
            },
            "netspeed": {
                "author": [
                    "PhasecoreX (PhasecoreX#0635)"
                ],
                "description": "Runs an internet speedtest and prints the results. Only the owner can run this.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "speedtest-cli>=2.1.3"
                ],
                "short": "Test your servers internet speed.",
                "tags": [
                    "utility",
                    "system"
                ],
                "type": ""
            },
            "reactchannel": {
                "author": [
                    "PhasecoreX (PhasecoreX#0635)"
                ],
                "description": "Allows for channels to be set up to have reactions automatically added to messages. This can facilitate things such as an upvote/downvote system (with user karma), a checklist system (checked messages are deleted), or any custom emoji reaction systems (no actions performed).",
                "disabled": false,
                "end_user_data_statement": "This cog stores Discord IDs along with a karma value based on total upvotes and downvotes on the users messages. Users may reset/remove their own karma total by making a data removal request.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Per-channel automatic reaction tools.",
                "tags": [
                    "checklist",
                    "downvote",
                    "karma",
                    "starboard",
                    "upvote",
                    "utility",
                    "vote"
                ],
                "type": ""
            },
            "remindme": {
                "author": [
                    "PhasecoreX (PhasecoreX#0635)"
                ],
                "description": "Allows for users to set reminders for themselves.",
                "disabled": false,
                "end_user_data_statement": "This cog stores data provided by users for the express purpose of re-displaying. It does not store user data which was not provided through a command. Users may delete their own data with or without making a data request.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.13",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pyparsing",
                    "python-dateutil"
                ],
                "short": "Set reminders for yourself.",
                "tags": [
                    "reminder",
                    "schedule",
                    "utility"
                ],
                "type": ""
            },
            "updatenotify": {
                "author": [
                    "PhasecoreX (PhasecoreX#0635)"
                ],
                "description": "This cog will periodically check if there are updates to the Red-Discordbot code. If you are using the phasecorex/red-discordbot Docker image, it will check for any updates to that as well.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Automatically check for updates to Red-Discordbot.",
                "tags": [
                    "update",
                    "utility"
                ],
                "type": ""
            },
            "uwu": {
                "author": [
                    "PhasecoreX (PhasecoreX#0635)"
                ],
                "description": "Takes the pwevious mwessage and uwuizes it. Sowwy.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Uwuize messages.",
                "tags": [
                    "utility"
                ],
                "type": ""
            },
            "wikipedia": {
                "author": [
                    "PhasecoreX (PhasecoreX#0635)"
                ],
                "description": "Allows for looking up terms on Wikipedia, and having the results displayed in chat.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "python-dateutil"
                ],
                "short": "Look up articles on Wikipedia.",
                "tags": [
                    "utility",
                    "wiki"
                ],
                "type": ""
            }
        },
        "short": "PhasecoreX's Cogs for Red-DiscordBot."
    },
    "https://github.com/PredaaA/predacogs": {
        "author": [
            "Pred\u00e4"
        ],
        "description": "Various cogs, for utility purposes, like Converters, WhoPlays, DblTools and ServerInfo, but also informational like SpaceX cog, and to finish, image purposes with my Nsfw cog.",
        "name": "predacogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "converters": {
                "author": [
                    "Pred\u00e4"
                ],
                "description": "Some utility converters, for temperatures, mass, but also dates to timestamps.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Some utility converters.",
                "tags": [
                    "convert",
                    "converters",
                    "utility",
                    "information"
                ],
                "type": ""
            },
            "dbltools": {
                "author": [
                    "Pred\u00e4"
                ],
                "description": "Tools to get bots information from top.gg, post stats, set a daily reward for votes, or give a role to new users who voted.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "dblpy",
                    "tabulate"
                ],
                "short": "Tools to get bots information from top.gg.",
                "tags": [
                    "top.gg",
                    "botlist",
                    "stats"
                ],
                "type": ""
            },
            "dbltoolslite": {
                "author": [
                    "Pred\u00e4"
                ],
                "description": "Tools to get bots information from top.gg, like description, votes, published server count and more.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "dblpy",
                    "tabulate"
                ],
                "short": "Tools to get bots information from top.gg.",
                "tags": [
                    "top.gg",
                    "botlist",
                    "stats"
                ],
                "type": ""
            },
            "fivem": {
                "author": [
                    "Pred\u00e4"
                ],
                "description": "Tools for FiveM servers.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Tools for FiveM servers.",
                "tags": [
                    "tools",
                    "fivem",
                    "status"
                ],
                "type": ""
            },
            "grafana": {
                "author": [
                    "Pred\u00e4",
                    "Fixator10"
                ],
                "description": "Grafana graphs in your Discord!",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate"
                ],
                "short": "Grafana graphs in your Discord!",
                "tags": [
                    "graphs",
                    "grafana",
                    "stats",
                    "statistics"
                ],
                "type": ""
            },
            "martools": {
                "author": [
                    "Pred\u00e4",
                    "Draper"
                ],
                "description": "Multiple tools that are originally used on Martine (https://martinebot.com).",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "databases",
                    "databases[sqlite]",
                    "babel"
                ],
                "short": "Multiple tools that are originally used on Martine (https://martinebot.com).",
                "tags": [
                    "tools",
                    "utility",
                    "information",
                    "counters",
                    "statistics"
                ],
                "type": ""
            },
            "nsfw": {
                "author": [
                    "Pred\u00e4",
                    "aikaterna"
                ],
                "description": "Send random NSFW images from random subreddits and Nekobot API in NSFW only channels.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Send random NSFW images from random subreddits and Nekobot API.",
                "tags": [
                    "nsfw",
                    "reddit",
                    "images"
                ],
                "type": ""
            },
            "randimages": {
                "author": [
                    "Pred\u00e4"
                ],
                "description": "Send random images from different APIs. There's animals images, art, and more. There is also a `[p]subreddit` command with which you can send an images from a subreddit of your choice. (All commands using subreddits are checking for nsfw content, so if there's nsfw content and the invoked channel is not NSFW you will receive a message that say you to invoke it in a NSFW channel instead of the image)",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Send random images (animals, art ...) from different APIs.",
                "tags": [
                    "animals",
                    "reddit",
                    "images",
                    "art"
                ],
                "type": ""
            },
            "spacex": {
                "author": [
                    "Pred\u00e4"
                ],
                "description": "Get multiple information about SpaceX using SpaceX-API. You can also use Space cog from kennnyshiwa (https://github.com/kennnyshiwa/kennnyshiwa-cogs) for more about space in general, space pics, Astronomy Picture of the Day from Nasa, ISS location ...",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Get multiple information about SpaceX using SpaceX-API.",
                "tags": [
                    "spacex",
                    "space",
                    "information"
                ],
                "type": ""
            },
            "whoplays": {
                "author": [
                    "Stevy",
                    "Pred\u00e4"
                ],
                "description": "V3 Rewrite of: https://github.com/AznStevy/Maybe-Useful-Cogs/blob/master/whoplays/whoplays.py\nCheck who's playing certain games or who's playing what on your server.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "See who's playing what!",
                "tags": [
                    "info",
                    "utility",
                    "stats"
                ],
                "type": ""
            }
        },
        "short": "Various cogs."
    },
    "https://github.com/Redjumpman/Jumper-Plugins": {
        "author": [
            "Redjumpman (Redjumpman#1337)"
        ],
        "description": "Contains several games for the community such has Casino, Heist, and Race. Also contains community tools like lottery and shop.",
        "name": "Jumper-Plugins",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "casino": {
                "author": [
                    "Redjumpman (Redjumpman#1337)"
                ],
                "description": "Play up to 7 unique games and earn currency.",
                "disabled": false,
                "end_user_data_statement": "This cog stores discord IDs as needed for operation.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.2.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "Manage Messages",
                    "Embed Links"
                ],
                "required_cogs": {},
                "requirements": [
                    "tabulate"
                ],
                "short": "Casino style mini games.",
                "tags": [
                    "Games",
                    "Economy",
                    "Fun",
                    "Casino"
                ],
                "type": ""
            },
            "coupon": {
                "author": [
                    "Redjumpman",
                    "aikaterna"
                ],
                "description": "Admins can generate a unique coupon id that can be redeemed for a set number of points only once. DM the code to the user of your choice.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Creates coupons redeemable for credits",
                "tags": [
                    "coupon",
                    "economy",
                    "credits"
                ],
                "type": ""
            },
            "dicetable": {
                "author": [
                    "Redjumpman (Redjumpman#1337)"
                ],
                "description": "Outputs several dice rolls into a table. Can do several different types of rolls such as 1d6, 3d20, 4d4, etc.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Outputs multiple dice rolls into a table.",
                "tags": [
                    "Dice",
                    "DnD"
                ],
                "type": ""
            },
            "jisho": {
                "author": [
                    "Redjumpman (Redjumpman#1337)"
                ],
                "description": "Romaji, Hiragana, Kanji, and Katakana",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Translate English to Japanese",
                "tags": [
                    "Translation",
                    "Japanese",
                    "Utility"
                ],
                "type": ""
            },
            "pokedex": {
                "author": [
                    "Redjumpman (Redjumpman#1337)"
                ],
                "description": "View standard pokemon information, Movesets, TM learn-sets, search items, and pokemon locations.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [
                    "Manage Messages",
                    "Embed Links",
                    "Add Reactions"
                ],
                "required_cogs": {},
                "requirements": [
                    "tabulate"
                ],
                "short": "Look-up info on Pokemon",
                "tags": [
                    "Pokemon",
                    "Information"
                ],
                "type": ""
            },
            "race": {
                "author": [
                    "Redjumpman (Redjumpman#1337)"
                ],
                "description": "Race turtles and other animals against your friends. Allows for currency prizes, betting, and stat tracking.",
                "disabled": false,
                "end_user_data_statement": "This cog stores discord IDs as needed for operation.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Race turtles and other animals against your friends and the bot.",
                "tags": [
                    "Games",
                    "Race",
                    "Turtles",
                    "Economy"
                ],
                "type": ""
            },
            "raffle": {
                "author": [
                    "Redjumpman (Redjumpman#1337)"
                ],
                "description": "Create reaction based raffles with timers that persist through restarts and shutdowns.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [
                    "Manage Messages",
                    "Embed Links",
                    "Add Reactions"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Reaction based raffles",
                "tags": [
                    "Raffle",
                    "Giveaway",
                    "Lottery"
                ],
                "type": ""
            },
            "russianroulette": {
                "author": [
                    "Redjumpman (Redjumpman#1337)"
                ],
                "description": "Play a game of russian roulette where the winner takes all. You can change the chamber size of the weapon, the wait time before starting the game, and the cost to play.",
                "disabled": false,
                "end_user_data_statement": "This cog stores Discord IDs as needed for operation temporarily during the game which are automatically deleted when it ends.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Play a game of Russian Roulette!",
                "tags": [
                    "Games",
                    "Economy",
                    "Fun",
                    "Russian"
                ],
                "type": ""
            },
            "shop": {
                "author": [
                    "Redjumpman (Redjumpman#1337)"
                ],
                "description": "Shop system that allows for multiple shops with their own list of items for sale. Players can purchase these items with economy currency and redeem them for roles, or other server defined value.",
                "disabled": false,
                "end_user_data_statement": "This cog stores discord IDs as needed for operation.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [
                    "Manage Messages",
                    "Embed Links",
                    "Add Reactions",
                    "Manage Roles"
                ],
                "required_cogs": {},
                "requirements": [
                    "tabulate"
                ],
                "short": "Create, buy, trade, and redeem items.",
                "tags": [
                    "Economy",
                    "Fun",
                    "Shop"
                ],
                "type": ""
            }
        },
        "short": "Games and community development plugins."
    },
    "https://github.com/SharkyTheKing/Sharky": {
        "author": [
            "Sharky The King"
        ],
        "description": "Tools and codes that I've made that I wanted on the repo.",
        "name": "Sharky",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "charlimit": {
                "author": [
                    "Sharky The King"
                ],
                "description": "v3 version of Kowlin's v2 character limit",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "charlimit",
                "tags": [],
                "type": "COG"
            },
            "lockdown": {
                "author": [
                    "Sharky The King"
                ],
                "description": "Guild Lockdown System",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Locking System",
                "tags": [
                    "Admin",
                    "Mod",
                    "Guild Lockdown"
                ],
                "type": "COG"
            },
            "mailsystem": {
                "author": [
                    "Sharky The King",
                    "Kreusada"
                ],
                "description": "**This is currently in testing.** A Mail System (ModMail) for multiple guilds.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Pre-released MailSystem",
                "tags": [
                    "ModMail",
                    "Mail",
                    "Mod"
                ],
                "type": "COG"
            },
            "morseshark": {
                "author": [
                    "Sharky The King"
                ],
                "description": "Morse code decoder and encoder for people who want to be fancy with text.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Morse code decoder and encoder.",
                "tags": [
                    "tools",
                    "utils",
                    "encode"
                ],
                "type": "COG"
            },
            "msgtracker": {
                "author": [
                    "Sharky The King"
                ],
                "description": "Message tracker counter, count how many people have messaged in your server and display it in a leaderboard.",
                "disabled": false,
                "end_user_data_statement": "This cog stores User IDs and how many messages you have sent to a server that has this enabled. It does NOT store the message contents, only counting how many you've sent.\n\nYou can disable this function by going into the server of your choosing and type `[p]trackignore`, assuming the bot owner hasn't disabled this function.\n\nThis cog will support data removal requests.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Message Tracker",
                "tags": [
                    "Message Tracker",
                    "Message Leaderboard",
                    "Leaderboard"
                ],
                "type": "COG"
            },
            "namegen": {
                "author": [
                    "Sharky The King"
                ],
                "description": "Name Generator, gives you a random first and last name from your own list!",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Name Generator",
                "tags": [],
                "type": "COG"
            },
            "newspublish": {
                "author": [
                    "Sharky The King"
                ],
                "description": "Automatic publishing in Discord's news channels",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "publish",
                "tags": [],
                "type": "COG"
            },
            "reports": {
                "author": [
                    "Sharky The King"
                ],
                "description": "Report system for moderators",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Reports",
                "tags": [],
                "type": "COG"
            },
            "sharkytools": {
                "author": [
                    "Sharky The King"
                ],
                "description": "Tools that Sharky built",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "sharkytools",
                "tags": [],
                "type": "COG"
            },
            "strawpoll": {
                "author": [
                    "Sharky The King"
                ],
                "description": "Polling system through Strawpoll's API",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Poll System",
                "tags": [],
                "type": "COG"
            },
            "verify": {
                "author": [
                    "Sharky The King",
                    "Predeactor"
                ],
                "description": "Verification System",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Verify system",
                "tags": [],
                "type": "COG"
            }
        },
        "short": "Cogs from Sharky"
    },
    "https://github.com/TheF1ng3r/finger-cogs": {
        "author": [
            "TheF1ng3r"
        ],
        "description": "Set of cogs that will bring more fun and utility to your bot.",
        "name": "finger-cogs",
        "rx_branch": "",
        "rx_category": "unapproved",
        "rx_cogs": {
            "clashofclans": {
                "author": [
                    "TheF1ng3r"
                ],
                "description": "Get info about users army, level, trophies and clans war, members and donations!",
                "disabled": false,
                "end_user_data_statement": "This cog stores data only if set by the user. Your clan and account tags are the only data saved.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Get info about users and clans in Clash of Clans!",
                "tags": [
                    "clashofclans",
                    "coc",
                    "utility"
                ],
                "type": ""
            },
            "statusroles": {
                "author": [
                    "TheF1ng3r"
                ],
                "description": "This cog allows you to gain roles based on certain text in members statuses.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Gain roles based on text in members status.",
                "tags": [
                    "status",
                    "roles",
                    "utility"
                ],
                "type": ""
            },
            "wordcounting": {
                "author": [
                    "TheF1ng3r"
                ],
                "description": "Create a word counting channel, where people can count using words!",
                "disabled": false,
                "end_user_data_statement": "This cog stores your data only if you were the last to count. This data is to check if you double count.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Count using words.",
                "tags": [
                    "counting",
                    "words"
                ],
                "type": ""
            }
        },
        "short": "Fun and helpful cogs"
    },
    "https://github.com/TheWyn/Wyn-RedV3Cogs": {
        "author": [
            "Wyn"
        ],
        "description": "Cogs I've created or ported for personal use.  Look up song lyrics, search anime torrents and more.",
        "name": "Wyn-RedV3Cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "anisearch": {
                "author": [
                    "Jintaku, Wyn"
                ],
                "description": "You can search anime, manga, users and characters!",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "add_reactions",
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "A cog to search the anilist API",
                "tags": [
                    "anime",
                    "manga",
                    "anilist",
                    "list"
                ],
                "type": ""
            },
            "lyrics": {
                "author": [
                    "Wyn"
                ],
                "description": "Obtain song lyrics",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [
                    "add_reactions",
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [
                    "bs4",
                    "requests-futures"
                ],
                "short": "Obtains song lyrics",
                "tags": [
                    "lyrics"
                ],
                "type": ""
            },
            "nyaa": {
                "author": [
                    "Wyn"
                ],
                "description": "Obtains torrent info from nyaa.si",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [
                    "add_reactions",
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [
                    "bs4",
                    "requests-futures"
                ],
                "short": "Obtains torrent info",
                "tags": [
                    "nyaa"
                ],
                "type": ""
            },
            "sysinfo": {
                "author": [
                    "kagami#6142, Wyn"
                ],
                "description": "Uses psutil to show various system information for the machine running the bot",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "psutil"
                ],
                "short": "Display system information",
                "tags": [
                    "utility",
                    "tools",
                    "system",
                    "info"
                ],
                "type": ""
            }
        },
        "short": "Cogs by/edited Wyn"
    },
    "https://github.com/Tobotimus/Tobo-Cogs": {
        "author": [
            "Tobotimus"
        ],
        "description": "Various cogs for bot management and customisation, server administration and moderation, and some fun stuff for users too. All cogs are made to be easy for anyone to use!",
        "name": "Tobo-Cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "docref": {
                "author": [
                    "Tobotimus"
                ],
                "description": "DocRef allows you to look up references on documentation webpages by their sphinx object names - this includes any documented python object! The documentation webpages must be added to the bot with a site name (of your own choice) and URL. The documentation webpages must be generated by sphinx (this includes almost every documentation page on ReadTheDocs).",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "sphinx"
                ],
                "short": "Search for references on documentation webpages.",
                "tags": [
                    "docs",
                    "dev",
                    "coding",
                    "sphinx",
                    "rtd",
                    "rtfd",
                    "rtfm",
                    "readthedocs"
                ],
                "type": "COG"
            },
            "errorlogs": {
                "author": [
                    "Tobotimus"
                ],
                "description": "ErrorLogs automatically outputs tracebacks of command errors in any text channel(s) you specify. It includes per-channel settings to determine whether global or server-wide errors should be posted.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Log error tracebacks in text channels.",
                "tags": [
                    "error",
                    "debug",
                    "log"
                ],
                "type": "COG"
            },
            "filterhelp": {
                "author": [
                    "Tobotimus"
                ],
                "description": "FilterHelp allows you to control what commands are shown on the help menu. This includes showing or hiding specific commands or cogs, showing commands regardless of the user's permissions, and showing commands which are hidden by default.",
                "disabled": true,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Control what commands are shown on the help menu.",
                "tags": [
                    "help",
                    "hidehelp"
                ],
                "type": "COG"
            },
            "reactkarma": {
                "author": [
                    "Tobotimus"
                ],
                "description": "ReactKarma is a cog for counting upvotes and downvotes of everyone the bot sees. The karma leaderboard is global, however the cog can be effectively enabled and disabled per-server.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Like Reddit Karma, but with discord reactions!",
                "tags": [
                    "karma",
                    "upvote",
                    "downvote"
                ],
                "type": "COG"
            },
            "register": {
                "author": [
                    "Tobotimus"
                ],
                "description": "Register adds a single command, which is effectively an alias for the commands `[p]selfrole` and `[p]selfrole remove`. The point is to have one command which does both adding and removing of selfroles, depending on whether or not the role is already applied to the user.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "admin": "https://github.com/Cog-Creators/Red-DiscordBot"
                },
                "requirements": [],
                "short": "Simplifies two SelfRole commands into one.",
                "tags": [
                    "selfrole",
                    "roles"
                ],
                "type": "COG"
            },
            "sticky": {
                "author": [
                    "Tobotimus"
                ],
                "description": "Sticky is a cog for sticking a message at the bottom of a channel. When a user sends a message in that channel, the bot will delete its old message and repost it, so it 'sticks' to the bottom.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Sticky messages for your channels!",
                "tags": [
                    "moderation",
                    "channeltools"
                ],
                "type": "COG"
            },
            "streamroles": {
                "author": [
                    "Tobotimus"
                ],
                "description": "StreamRoles is a cog for automatically assigning roles to users streaming on Twitch. The cog is also able to only assign a streaming role to users of a particular game. Specific users can also be blacklisted and whitelisted.\n\nDisclaimer: The first streamrole cog was made by tmerc, as some of you may know. This cog was written completely from the ground up by myself, and although I was unaware he had written a similar cog already, he should be given credit for coming up with the idea first.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Hoist users streaming on Twitch.",
                "tags": [
                    "streamers",
                    "hoist",
                    "twitch"
                ],
                "type": "COG"
            },
            "strikes": {
                "author": [
                    "Tobotimus"
                ],
                "description": "Strikes is a cog for helping moderation teams warn and keep track of misbehaving users. Strikes are filed with a reason and timestamp, and the cog is helpful for knowing how many times the user has misbehaved *recently*. ModLog integration is also available.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate[widechars]"
                ],
                "short": "Strike misbehaving users.",
                "tags": [
                    "warnings",
                    "strikes",
                    "reports",
                    "mod"
                ],
                "type": "COG"
            },
            "updatered": {
                "author": [
                    "Tobotimus"
                ],
                "description": "UpdateRed is a cog for updating your bot from within discord. When combined with the ability to restart the bot, updating Red becomes a easier than ever!\n\nYou can choose from multiple automatic versions, or specify a particular version you'd like to install.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "A command to update Red!",
                "tags": [
                    "update"
                ],
                "type": "COG"
            },
            "welcomecount": {
                "author": [
                    "Tobotimus"
                ],
                "description": "WelcomeCount is a cog for sending customisable and context-based welcome messages to new users. It's named after it's main feature - it counts how many members have joined each day, and this can be included in the welcome message.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Customisable welcome messages.",
                "tags": [
                    "welcome",
                    "joinmessage"
                ],
                "type": "COG"
            }
        },
        "short": "Cogs made by Tobotimus."
    },
    "https://github.com/TrustyJAID/Trusty-cogs": {
        "author": [
            "TrustyJAID"
        ],
        "description": "A plethora of potentially useful commands and functions for your bot. Create a starboard, trigger automatic responses, or even create your own fun badges.",
        "name": "Trusty-cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "addimage": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Add image for the bot to directly upload similar to alias.",
                "disabled": false,
                "end_user_data_statement": "This cog stores attachements uploaded by users for the purposes of creating custom commands to send uploaded attachments.\nUsers may delete their own data with or without making a data request.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "attach_files"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Add images for direct upload per guild and globally.",
                "tags": [],
                "type": "COG"
            },
            "adventurealert": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Receive notifications from adventure activities!",
                "disabled": false,
                "end_user_data_statement": "This cog stores discord User ID's for the purposes of mentioning the user on certain events.\nUsers may delete their own data with or without making a data request.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [],
                "required_cogs": {
                    "adventure": "https://github.com/aikaterna/gobcog/"
                },
                "requirements": [],
                "short": "Receive notifications from adventure activities!",
                "tags": [
                    "fun",
                    "adventure"
                ],
                "type": "COG"
            },
            "apngfilter": {
                "author": [
                    "TrustyJAID",
                    "Sinbad",
                    "Soulrift"
                ],
                "description": "Automatically filter animated PNG's.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "manage_messages"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Automatically filter animated PNG's.",
                "tags": [
                    "utility"
                ],
                "type": "COG"
            },
            "autorole": {
                "author": [
                    "Lunar Dust",
                    "TrustyJAID"
                ],
                "description": "Automatically apply roles when a user joins the server.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": true,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "manage_roles"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Automatically apply a role to new users",
                "tags": [],
                "type": "COG"
            },
            "backup": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Backup all channel messages on a server. Ensure all saved messages are stored on an encrypted drive!",
                "disabled": false,
                "end_user_data_statement": "This cog extracts messages including user data and saves locally on the bots harddrive. This data is meant for personal use only and not recommended to be stored indefinitely.",
                "hidden": true,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "read_message_history"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Backup all channel messages on a server.",
                "tags": [],
                "type": "COG"
            },
            "badges": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Create your own badge with your discord info.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "attach_files"
                ],
                "required_cogs": {},
                "requirements": [
                    "pillow"
                ],
                "short": "Create your own badge!",
                "tags": [],
                "type": "COG"
            },
            "chatter": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Talk to your bot and build a unique dataset for conversations!",
                "disabled": true,
                "end_user_data_statement": "This cog extracts user messages for the purposes of training the chat response algorithm.",
                "hidden": true,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "chatterbot"
                ],
                "short": "chatterbot",
                "tags": [],
                "type": "COG"
            },
            "cleverbot": {
                "author": [
                    "Twentysix",
                    "TrustyJAID"
                ],
                "description": "Have your bot respond with cleverbot responses. Supports tweaks to customize the responses!",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users. However, this cog does pass user data to an external API for the purposes of simulated conversation responses.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Talk with Cleverbot!",
                "tags": [
                    "cleverbot"
                ],
                "type": "COG"
            },
            "compliment": {
                "author": [
                    "Airen",
                    "JennJenn",
                    "TrustyJAID"
                ],
                "description": "Compliment people in a creative way",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Compliment people in a creative way",
                "tags": [],
                "type": "COG"
            },
            "conversions": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Conversions for currencies, crypto-currencies, and stocks.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Conversions for currencies, crypto-currencies, and stocks.",
                "tags": [],
                "type": "COG"
            },
            "covfefe": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Covfefeify almost any word!",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Despite the negative press, covfefe",
                "tags": [],
                "type": "COG"
            },
            "crabrave": {
                "author": [
                    "DankMemer Team",
                    "TrustyJAID",
                    "thisisjvgrace"
                ],
                "description": "Create your very own Crab Rave videos with custom text! This cog requires FFMPEG, moviepy (https://github.com/Zulko/moviepy), and imagemagick to work. This cog downloads a template video and font file which is then saved locally and generates crab rave videos from the template. Old videos are deleted after uploading. This cog may consume heavy resources rendering videos.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.3.0",
                "min_python_version": [
                    3,
                    8,
                    0
                ],
                "permissions": [
                    "attach_files"
                ],
                "required_cogs": {},
                "requirements": [
                    "moviepy",
                    "youtube-dl"
                ],
                "short": "Make Crab rave videos, in discord!",
                "tags": [
                    "fun"
                ],
                "type": "COG"
            },
            "destiny": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Show Information from the Destiny 2 API. Note: This cog requires downloading a ~160 MB manifest. You must acquire an API key from https://www.bungie.net/en/Application. Select **Create New App**. Choose **Confidential** OAuth client type. Select the scope you would like the bot to have access to. Set the redirect URL to https://localhost/. Users wishing to access commands after you have supplied the tokens will be asked to authorize their account on your app. Once they have approved it they will be granted access to use commands.",
                "disabled": false,
                "end_user_data_statement": "This cog stores User IDs linked to an external API token for the purposes of granting OAuth access and information about the external API for the user.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [
                    "tabulate",
                    "pytz"
                ],
                "short": "Destiny 2 information",
                "tags": [
                    "destiny",
                    "gaming",
                    "games"
                ],
                "type": "COG"
            },
            "elements": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Get a plethora of information about elements on the periodic table.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [
                    "mendeleev"
                ],
                "short": "Periodic table of elements",
                "tags": [
                    "science",
                    "elements"
                ],
                "type": "COG"
            },
            "emojireact": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "React to messages containing any emojis!",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "add_reactions"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Emoji Reaction",
                "tags": [
                    "fun"
                ],
                "type": "COG"
            },
            "encoding": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Encode messages into various types of encoding. Encoding types include: DNA, binary, Caeser cipher, hex, base 64, character, and braille.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Encode messages into various types of encoding.",
                "tags": [
                    "encoding",
                    "rot",
                    "caeser cipher"
                ],
                "type": "COG"
            },
            "eventposter": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Allow users to setup and host events to be approved by admins.",
                "disabled": false,
                "end_user_data_statement": "This cog stores User ID's for the purposes of tracking user created events.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "embed_links",
                    "add_reactions"
                ],
                "required_cogs": {},
                "requirements": [
                    "python-dateutil",
                    "pytz"
                ],
                "short": "Admin approved announcments/events",
                "tags": [
                    "events"
                ],
                "type": "COG"
            },
            "extendedmodlog": {
                "author": [
                    "RePulsR",
                    "TrustyJAID"
                ],
                "description": "Log changes within the server using extended modlogs, an extension of RedBot cores modlog.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "ExtendedModLog, track changes made in the server.",
                "tags": [
                    "mod",
                    "logs",
                    "modlogs"
                ],
                "type": "COG"
            },
            "faces": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Japanese faces courtesy of the CIA",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "General commands",
                "tags": [],
                "type": "COG"
            },
            "fenrir": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Create reaction messages to kick or ban users! https://tenor.com/view/order66-gif-9116581",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "ban_members",
                    "kick_members"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Give users the option to kick, ban, or insult themselves via reactions.",
                "tags": [],
                "type": "COG"
            },
            "fun": {
                "author": [
                    "Appu",
                    "TrustyJAID"
                ],
                "description": "All sorts of commands that users may find fun or useful",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "add_reactions"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Various fun commands like react, textflip, and regional",
                "tags": [],
                "type": "COG"
            },
            "gabai": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Get information from gab.ai's API and display in discord.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": true,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Gab.ai information",
                "tags": [
                    "gab"
                ],
                "type": "COG"
            },
            "halo": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Gathers information from the Halo API and posts it on discord.",
                "disabled": true,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": true,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "halo",
                "tags": [
                    "halo"
                ],
                "type": "COG"
            },
            "hockey": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "A cog to gather hockey scores, schedules, player data and more!",
                "disabled": false,
                "end_user_data_statement": "This cog stores User ID's for the purposes of tracking votes in pickems.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "embed_links",
                    "manage_messages",
                    "manage_channels"
                ],
                "required_cogs": {},
                "requirements": [
                    "pytz",
                    "tabulate"
                ],
                "short": "Hockey commands",
                "tags": [
                    "hockey",
                    "nhl"
                ],
                "type": "COG"
            },
            "hue": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Lets you control your philips hue lights with redbot.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Control your philips hue lights with redbot!",
                "tags": [],
                "type": "COG"
            },
            "imagemaker": {
                "author": [
                    "TrustyJAID",
                    "Ivan Seidel (isnowillegal.com)",
                    "Bruno Lemos (isnowillegal.com)",
                    "Jo\u00e3o Pedro (isnowillegal.com)"
                ],
                "description": "Show how you really feel. Make someone beautiful. Make something illegal.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "attach_files"
                ],
                "required_cogs": {},
                "requirements": [
                    "pillow",
                    "opencv-python",
                    "numpy",
                    "Unidecode"
                ],
                "short": "Create your own feels!",
                "tags": [
                    "fun",
                    "memes",
                    "meme"
                ],
                "type": "COG"
            },
            "imgflip": {
                "author": [
                    "Twentysix",
                    "TrustyJAID"
                ],
                "description": "Recreation of Red v1 meme generator",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Recreation of Red v1 meme generator",
                "tags": [
                    "meme",
                    "memes",
                    "fun"
                ],
                "type": "COG"
            },
            "insult": {
                "author": [
                    "Airen",
                    "JennJenn",
                    "TrustyJAID"
                ],
                "description": "Insult people in a creative way ![goteem](https://cdn.discordapp.com/emojis/350653489044652052.png?v=1)",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Insult people in a creative way",
                "tags": [
                    "fun",
                    "insults"
                ],
                "type": "COG"
            },
            "inviteblocklist": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Automatically delete discord invite links from specific guilds or allow only specified guild invites to be posted.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.3.0",
                "min_python_version": [
                    3,
                    8,
                    0
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Block or Allow invite links based on guild ID. Accepts invite links to extract guild ID's.",
                "tags": [],
                "type": "COG"
            },
            "loaddev": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Allow for cores dev module to be loaded after bot startup. Also allows replacing `[p]mock` with another alternative.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": true,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Developer commands",
                "tags": [],
                "type": "COG"
            },
            "mentionprefix": {
                "author": [
                    "Draper",
                    "TrustyJAID"
                ],
                "description": "This cog allows ping the bot to see the prefixes available.",
                "disabled": false,
                "end_user_data_statement": "This cog allows ping the bot to see the prefixes available.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "This cog allows ping the bot to see the prefixes available.",
                "tags": [
                    "help"
                ],
                "type": "COG"
            },
            "mock": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Mock another user! If you need the core dev commands start the bot without the `--dev` flag and install the loaddev cog in my repo that allows you to replace `mock` with whatever you choose.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Mock another user!",
                "tags": [
                    "fun",
                    "memes"
                ],
                "type": "COG"
            },
            "notsobot": {
                "author": [
                    "NotSoSuper",
                    "TrustyJAID"
                ],
                "description": "Magick, trigger and manipulate images with many commands from NotSoSuper's NotSoBot. This cog has a lot of requirements, view the [cog README.md](https://github.com/TrustyJAID/Trusty-cogs/blob/master/notsobot/README.md) for details. ",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "attach_files"
                ],
                "required_cogs": {},
                "requirements": [
                    "pyfiglet",
                    "numpy",
                    "pillow",
                    "git+https://github.com/Kareeeeem/jpglitch",
                    "wand",
                    "unidecode"
                ],
                "short": "Some working commands from NotSoBot",
                "tags": [
                    "fun",
                    "memes",
                    "images"
                ],
                "type": "COG"
            },
            "reddit": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Reddit commands for getting updates on specified subreddits.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "reactivepy>=1.9.0.dev0",
                    "git+https://github.com/TrustyJAID/aPRAW@setup-fix"
                ],
                "short": "A cog to post updates from reddit.",
                "tags": [
                    "reddit",
                    "news"
                ],
                "type": "COG"
            },
            "rekt": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Are you REKT?",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Get REKT",
                "tags": [
                    "rekt"
                ],
                "type": "COG"
            },
            "reportspin": {
                "author": [
                    "Eslyium",
                    "tekulvw",
                    "mikeshardmind(Sinbad)",
                    "Tobotimus"
                ],
                "description": "Reports cog but pins new reports",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": true,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "manage_messages"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Pin all new reports",
                "tags": [
                    "reports"
                ],
                "type": "COG"
            },
            "retrigger": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Trigger events based on regex! Check out <https://regex101.com/> and <https://github.com/TrustyJAID/Trusty-cogs/blob/master/retrigger/README.md> for help setting up the cog. Note: This cog can become quite resource heavy. Optional features are available if the requirements are present such as pillow for image resizing and pytesseract to scan images for text (OCR).",
                "disabled": false,
                "end_user_data_statement": "This cog may store attachments and command information provided by Users for the purposes of performing actions.\nSome User ID's may be stored in the bots logging information.\nUsers may delete their own data with or without making a data request.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Trigger events via Regular Expressions!",
                "tags": [
                    "trigger",
                    "reactions"
                ],
                "type": "COG"
            },
            "roletools": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Various role utility commands. Including Reaction roles, Sticky roles, and Auto role.",
                "disabled": false,
                "end_user_data_statement": "This cog stores User ID's for the purposes of re-assigning roles when the user re-joins a server.\nUser ID's may be stored in the bots log information.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    0,
                    0
                ],
                "permissions": [
                    "manage_roles"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Various role related tools.",
                "tags": [
                    "utility",
                    "mod"
                ],
                "type": "COG"
            },
            "runescape": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "A cog to grab Runescape and OSRS stats and profile information.",
                "disabled": false,
                "end_user_data_statement": "This cog may store User ID's linked with an external API name for the purposes of simplifying command usage.\nUsers may clear this saved information at any time by command.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [
                    "tabulate",
                    "pytz"
                ],
                "short": "Show your Runescape stats in discord!",
                "tags": [
                    "runescape",
                    "games",
                    "osrs"
                ],
                "type": "COG"
            },
            "serverstats": {
                "author": [
                    "TrustyJAID",
                    "Preda"
                ],
                "description": "A plethora of potentially useful commands for any bot owner. Includes a way to track the bot joining new servers, find cheaters on global economies, get user avatars and even larger emojis.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "read_message_history",
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [
                    "unidecode",
                    "pytz",
                    "python-dateutil",
                    "rapidfuzz"
                ],
                "short": "A plethora of potentially useful commands for any bot owner.",
                "tags": [
                    "stats"
                ],
                "type": "COG"
            },
            "spotify": {
                "author": [
                    "TrustyJAID",
                    "NeuroAssassin"
                ],
                "description": "This cog allows you to control Spotify via OAuth through the bot on discord. Use `[p]spotify` to see available commands.",
                "disabled": false,
                "end_user_data_statement": "This cog stores OAuth tokens and refresh tokens for the purposes of interacting with the Spotify API with discord commands and reactions. This data can be deleted at any time either via revoking the authorization token on Spotify or through the `[p]mydata forgetme` command.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.3.0",
                "min_python_version": [
                    3,
                    8,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tekore",
                    "tabulate"
                ],
                "short": "Control Spotify through Discord!",
                "tags": [
                    "spotify"
                ],
                "type": "COG"
            },
            "starboard": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Create a starboard channel to save those amazing posts!",
                "disabled": false,
                "end_user_data_statement": "This stores message information from Users for the purposes of tracking reactions to the message.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.3.12",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Starboard",
                "tags": [
                    "starboard",
                    "star"
                ],
                "type": "COG"
            },
            "stickyroles": {
                "author": [
                    "Twentysix",
                    "TrustyJAID"
                ],
                "description": "With this cog you can specify which roles you want to be reapplied on join. This is particularly useful to fight \"role evasion\".",
                "disabled": false,
                "end_user_data_statement": "This cog stores User ID's for the purposes of re-assigning roles when the user re-joins a server.\nUser ID's may be stored in the bots log information.",
                "hidden": true,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "manage_roles"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Reapplies specific roles on join",
                "tags": [
                    "utility",
                    "mod"
                ],
                "type": "COG"
            },
            "tarot": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Find your tarot reading, your life reading, or pull a random tarot card!",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "General commands",
                "tags": [
                    "fun",
                    "mystery"
                ],
                "type": "COG"
            },
            "translate": {
                "author": [
                    "Aziz",
                    "TrustyJAID"
                ],
                "description": "Add flag emojis to messages to translate to that language or translate messages by command.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users. However, this cog does pass user data to an external API for the purposes of analyzing and translating languages.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Translate messages using google translate!",
                "tags": [
                    "utility",
                    "translation"
                ],
                "type": "COG"
            },
            "trustyavatar": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Hardcoded custom avatar and statuses for TrustyBot",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": true,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pillow"
                ],
                "short": "",
                "tags": [],
                "type": "COG"
            },
            "trustybot": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Hardcoded custom commands for TrustyBot",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": true,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "",
                "tags": [],
                "type": "COG"
            },
            "tweets": {
                "author": [
                    "palmtree5",
                    "TrustyJAID"
                ],
                "description": "Gets the latest Tweet from twitter accounts and posts them in the specified channels",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [
                    "tweepy>=4.0.0,<=4.4.0"
                ],
                "short": "Cog for getting info from Twitter",
                "tags": [
                    "twitter",
                    "tweets"
                ],
                "type": "COG"
            },
            "twitch": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Get notified of new twitch followers and get basic profile info.",
                "disabled": false,
                "end_user_data_statement": "This cog stores User ID's linked to an external API name for the purposes of tracking information from the external API.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Get basic twitch account information.",
                "tags": [
                    "twitch",
                    "streaming",
                    "utility"
                ],
                "type": "COG"
            },
            "weather": {
                "author": [
                    "TrustyJAID"
                ],
                "description": "Check the current weather in many cities around the world including in Kelvin.",
                "disabled": false,
                "end_user_data_statement": "This cog may store User ID's for the purposes of setting default preferred temperature units.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Show the current weather in specified locations!",
                "tags": [
                    "weather",
                    "utility"
                ],
                "type": "COG"
            },
            "welcome": {
                "author": [
                    "irdumb",
                    "TrustyJAID"
                ],
                "description": "Welcome new users to the server or say goodbye when they leave.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": [
                    3,
                    7,
                    2
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Welcome new users to the server",
                "tags": [
                    "welcome",
                    "utility"
                ],
                "type": "COG"
            }
        },
        "short": "Cogs by TrustyJAID inspired by many."
    },
    "https://github.com/Twentysix26/x26-Cogs": {
        "author": [
            "Twentysix (Twentysix#5252)"
        ],
        "description": "General purpose cogs by Twentysix (Twentysix#5252)",
        "name": "x26-Cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "defender": {
                "author": [
                    "Twentysix (Twentysix#5252)"
                ],
                "description": "Protects your community with automod features and empowers the staff and users you trust with advanced moderation tools",
                "disabled": false,
                "end_user_data_statement": "This cog stores user IDs for the purpose of counting the messages a user sends and/or send the DM notifications the user has subscribed to.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pyyaml~=5.4.1",
                    "emoji~=1.2",
                    "pydantic~=1.8",
                    "regex==2021.11.10"
                ],
                "short": "Protects your community with automod features and empowers the staff and users you trust with advanced moderation tools",
                "tags": [
                    "automod",
                    "antiraid",
                    "moderation",
                    "monitoring"
                ],
                "type": "COG"
            },
            "index": {
                "author": [
                    "Twentysix (Twentysix#5252)",
                    "jack1142 (Jackenmen#6607)"
                ],
                "description": "Browse, search and install repos / cogs from a Red-Index",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Easy cog discoverability with Red-Index",
                "tags": [
                    "index",
                    "discoverability",
                    "cogs",
                    "finder"
                ],
                "type": "COG"
            },
            "sbansync": {
                "author": [
                    "Twentysix (Twentysix#5252)"
                ],
                "description": "A simple, no frills bansync cog.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "A simple, no frills bansync cog.",
                "tags": [
                    "bansync",
                    "moderation",
                    "admin"
                ],
                "type": "COG"
            }
        },
        "short": "General purpose cogs by Twentysix (Twentysix#5252)"
    },
    "https://github.com/Vexed01/Vex-Cogs": {
        "author": [
            "Vexed (Vexed#9000)"
        ],
        "description": "These cogs are stuff typically utility stuff that I wanted myself that might be useful to others.\nIt's mainly cogs for bot or server owners.\n\nIf you find anything that's wrong, feel free to make a GH issue or find me in the main Red server or the cog support server (https://discord.gg/GET4DVk). I'm Vexed#9000",
        "name": "Vex-Cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "aliases": {
                "author": [
                    "Vexed (Vexed#9000)"
                ],
                "description": "Get all the information you could ever need about a command's aliases. IF YOU ARE TRYING TO *MAKE* ALIASES, JUST USE THE CORE 'alias` COG.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate",
                    "cachetools",
                    "asyncache"
                ],
                "short": "Get all the information you could ever need about a command's aliases. IF YOU ARE TRYING TO *MAKE* ALIASES, JUST USE THE CORE 'alias` COG.",
                "tags": [
                    "utility",
                    "alias"
                ],
                "type": ""
            },
            "anotherpingcog": {
                "author": [
                    "Vexed (Vexed#9000)"
                ],
                "description": "Replace the ping command with a rich embed that shows ping time and message time. It is colour coded: red, orange and green, and the bot owner can customise the colours and emojis for different latency levels, as well as force an embed.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate",
                    "cachetools",
                    "asyncache"
                ],
                "short": "Just another ping cog... But this one has fancy colours in an embed the bot owner can customise!",
                "tags": [
                    "utility",
                    "ping",
                    "pingtime"
                ],
                "type": ""
            },
            "beautify": {
                "author": [
                    "Vexed (Vexed#9000)"
                ],
                "description": "Beautify and minify JSON. Supports attachments, codeblocks and replies.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate",
                    "cachetools",
                    "asyncache"
                ],
                "short": "Beautify and minify JSON. Supports attachments, codeblocks and replies.",
                "tags": [
                    "utility",
                    "json"
                ],
                "type": ""
            },
            "betteruptime": {
                "author": [
                    "Vexed (Vexed#9000)"
                ],
                "description": "Replace the uptime command with a rich embed that shows the bot's percentage uptime (both time of the bot being on and time connected to Discord). There is also a new `downtime` command which shows when downtime happened. This cog writes to config every 60 seconds to prevent data loss. It is also very storage efficient, using under 150 bytes each day the cog runs.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pandas",
                    "plotly",
                    "kaleido",
                    "tabulate",
                    "cachetools",
                    "asyncache"
                ],
                "short": "A better uptime command that tracks the bot's uptime as a percentage over the last 30 days, and has a new `downtime` command that shows when downtime happened.",
                "tags": [
                    "utility",
                    "uptime",
                    "meta"
                ],
                "type": ""
            },
            "caseinsensitive": {
                "author": [
                    "Vexed (Vexed#9000)"
                ],
                "description": "Make all prefixes and commands case insensitive (so that something like !Ping works). This will have a negative performance impact.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "3.5.0.dev1",
                "min_bot_version": "3.4.11",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate",
                    "cachetools",
                    "asyncache"
                ],
                "short": "Make all commands case insensitive.",
                "tags": [
                    "utility",
                    "case",
                    "commands",
                    "case-insensitive",
                    "caseinsensitive"
                ],
                "type": ""
            },
            "cmdlog": {
                "author": [
                    "Vexed (Vexed#9000)"
                ],
                "description": "Track who used what commands. All command usage is logged to the bot's console/log and also internally cached. You can view the activity of an individual user, server or command.",
                "disabled": false,
                "end_user_data_statement": "This cog may persistently store data or metadata about users. Operational data is temporarily collected and cached whenever a command is used and may be stored.\n\nWhen a command is used, the following data is collected: the message invoking the command, the user that invoked it, the server it was invoked in, and the channel it was invoked in. This includes application commands, as well as old-style text commands.\n\nThis cog does not support data deletion requests, as it handles operational data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate",
                    "cachetools",
                    "asyncache"
                ],
                "short": "Track who uses what commands, with the ability to search for a specific user, server command.",
                "tags": [
                    "utility",
                    "log",
                    "logging"
                ],
                "type": ""
            },
            "covidgraph": {
                "author": [
                    "Vexed (Vexed#9000)"
                ],
                "description": "Get graphs of COVID-19 data.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "plotly",
                    "kaleido",
                    "tabulate",
                    "cachetools",
                    "asyncache"
                ],
                "short": "Get graphs of COVID-19 data.",
                "tags": [
                    "utility",
                    "data",
                    "graph",
                    "covid"
                ],
                "type": ""
            },
            "ghissues": {
                "author": [
                    "Vexed (Vexed#9000)"
                ],
                "description": "Create, comment, labelify and close GitHub issues, with partial PR support.\n\n\u26a0 This cog requires discord.py 2 which is currently incompatible with Red and most other cogs \u26a0",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "gidgethub>=5.0.0",
                    "tabulate",
                    "cachetools",
                    "asyncache"
                ],
                "short": "[DPY 2 ONLY] Create, comment, labelify and close GitHub issues.",
                "tags": [
                    "utility",
                    "github",
                    "issues"
                ],
                "type": ""
            },
            "github": {
                "author": [
                    "Vexed (Vexed#9000)"
                ],
                "description": "Create, comment, labelify and close GitHub issues, with partial PR support.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "gidgethub>=5.0.0",
                    "tabulate",
                    "cachetools",
                    "asyncache"
                ],
                "short": "Create, comment, labelify and close GitHub issues.",
                "tags": [
                    "utility",
                    "github",
                    "issues"
                ],
                "type": ""
            },
            "googletrends": {
                "author": [
                    "Vexed (Vexed#9000)"
                ],
                "description": "Find out what the world is searching, right from Discord. Includes charts.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "plotly",
                    "kaleido",
                    "pytrends",
                    "tabulate",
                    "cachetools",
                    "asyncache"
                ],
                "short": "Find out what the world is searching, right from Discord. Includes charts.",
                "tags": [
                    "utility",
                    "data",
                    "google",
                    "pytrends"
                ],
                "type": ""
            },
            "madtranslate": {
                "author": [
                    "Vexed (Vexed#9000)"
                ],
                "description": "Translate something from English into a gazillion different languages then back to English. Uses an undocumented Google Translate API.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate",
                    "cachetools",
                    "asyncache"
                ],
                "short": "Translate something from English into a gazillion different languages then back to English. You'll get some funny responses! Uses an undocumented Google Translate API.",
                "tags": [
                    "madtranslate",
                    "translate",
                    "google",
                    "fun"
                ],
                "type": ""
            },
            "stattrack": {
                "author": [
                    "Vexed (Vexed#9000)"
                ],
                "description": "Track your bot's statistics over time, including ping, members, guild and message/command counts.\n\nThis has a background process which could be intensive.\n\nThis stores data in Red's config which is not especially built for this cog's usage.",
                "disabled": false,
                "end_user_data_statement": "This cog permanently stores anonymised and aggregated data about users' statuses and counts messages sent, not including their content. This data cannot be traced back to individual users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pandas>=1.1.0",
                    "psutil",
                    "plotly",
                    "kaleido",
                    "tabulate",
                    "cachetools",
                    "asyncache"
                ],
                "short": "Stat tracking cog including ping, member counts and counts of commands/messages. View the data in Discord.",
                "tags": [
                    "utility",
                    "timeseries",
                    "tracking",
                    "stats"
                ],
                "type": ""
            },
            "status": {
                "author": [
                    "Vexed (Vexed#9000)"
                ],
                "description": "This cog can automatically send updates form various services including Discord, Cloudflare and GitHub. Members can also use a command to check incidents on-demand. Support all Statuspage.io which I have added.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.6",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "markdownify",
                    "tabulate",
                    "cachetools",
                    "asyncache"
                ],
                "short": "Get automatic status updates from various services, and check the latest incidents on-demand. Includes Discord, GitHub and Cloudflare.",
                "tags": [
                    "utility",
                    "statuspage",
                    "trust"
                ],
                "type": ""
            },
            "system": {
                "author": [
                    "Vexed (Vexed#9000)"
                ],
                "description": "Check system metrics on the host device, such as CPU or  RAM usage",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "psutil>=5.8.0",
                    "tabulate",
                    "cachetools",
                    "asyncache"
                ],
                "short": "Check system metrics on the host device.",
                "tags": [
                    "utility",
                    "system",
                    "metrics",
                    "top"
                ],
                "type": ""
            },
            "tests": {
                "author": [],
                "description": "",
                "disabled": true,
                "end_user_data_statement": "",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Contrary to what downloader thinks, this isn't a cog!",
                "tags": [],
                "type": ""
            },
            "timechannel": {
                "author": [
                    "Vexed (Vexed#9000)"
                ],
                "description": "Get the time in different timezones in voice channels.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "rapidfuzz",
                    "tabulate",
                    "cachetools",
                    "asyncache"
                ],
                "short": "Get the time in different timezones in voice channels.",
                "tags": [
                    "utility",
                    "channel",
                    "time",
                    "timezone"
                ],
                "type": ""
            },
            "wol": {
                "author": [
                    "Vexed (Vexed#9000)"
                ],
                "description": "Use Wake on LAN from Discord! This cog sends magic packets on the local network. You'll need to have set up teh computer beforehand to listen to these - just search how to set it up for your operating system.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "wakeonlan",
                    "tabulate",
                    "cachetools",
                    "asyncache"
                ],
                "short": "Use Wake on LAN from Discord! This cog sends magic packets on the local network.",
                "tags": [
                    "utility",
                    "wakeonlan",
                    "local"
                ],
                "type": ""
            }
        },
        "short": "Mainly utility cogs."
    },
    "https://github.com/WildStriker/WildCogs": {
        "author": [
            "WildStriker (WildStriker#6222)"
        ],
        "description": "Play chess with your friends in discord, if thats your thing. Other Cogs comming soon?",
        "name": "WildCogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "chessgame": {
                "author": [
                    "WildStriker (WildStriker#6222)"
                ],
                "description": "Play chess in discord using python-chess!",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "python-chess",
                    "CairoSVG==1.0.22",
                    "lxml",
                    "tinycss",
                    "cssselect",
                    "jsonpickle"
                ],
                "short": "Chess in discord",
                "tags": [
                    "games"
                ],
                "type": ""
            }
        },
        "short": "Whatever I can think of, as long as its fun"
    },
    "https://github.com/aikaterna/aikaterna-cogs": {
        "author": [
            "aikaterna (aikaterna#1393)"
        ],
        "description": "Cogs requested by others, personal cogs, or orphaned cogs.",
        "name": "aikaterna-cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "antiphoneclapper": {
                "author": [
                    "sitryk",
                    "aikaterna"
                ],
                "description": "Deletes messages with malformed GIFs.",
                "disabled": true,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "manage_messages"
                ],
                "required_cogs": {},
                "requirements": [
                    "pillow"
                ],
                "short": "Deletes messages with malformed GIFs.",
                "tags": [],
                "type": "COG"
            },
            "away": {
                "author": [
                    "aikaterna",
                    "Axas",
                    "TrustyJAID"
                ],
                "description": "Set and unset a user as being away. Originally by Paddo.",
                "disabled": false,
                "end_user_data_statement": "This cog stores data provided by users for the express purpose of redisplaying. It does not store user data which was not provided through a command. Users may remove their own content without making a data removal request. This cog does not support data requests, but will respect deletion requests.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Away message toggle for users",
                "tags": [
                    "away",
                    "afk"
                ],
                "type": "COG"
            },
            "blurplefy": {
                "author": [
                    "aikaterna"
                ],
                "description": "Blurplefy a user profile picture or image. Admins can configure an awardable role if a user's profile pic has more than a certain percentage of blurple in it.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "embed_links",
                    "manage_roles"
                ],
                "required_cogs": {},
                "requirements": [
                    "pillow",
                    "python-resize-image"
                ],
                "short": "Blurplefy a user profile picture or image.",
                "tags": [
                    "blurple",
                    "discord",
                    "avatar"
                ],
                "type": "COG"
            },
            "cah": {
                "author": [
                    "aikaterna"
                ],
                "description": "Cards Against Humanity, played in DMs.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Cards Against Humanity.",
                "tags": [
                    "CAH",
                    "cards",
                    "game"
                ],
                "type": "COG"
            },
            "chatchart": {
                "author": [
                    "aikaterna",
                    "Redjumpman"
                ],
                "description": "Generate a pie chart from the last 5000 messages in a channel to see who's been talking the most.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "matplotlib"
                ],
                "short": "Generate a pie chart from the last 5000 messages",
                "tags": [
                    "messages",
                    "chart",
                    "count",
                    "activity"
                ],
                "type": "COG"
            },
            "dadjokes": {
                "author": [
                    "UltimatePancake"
                ],
                "description": "Gets a random dad joke from icanhazdadjoke.com",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Random dad jokes",
                "tags": [
                    "jokes",
                    "dad",
                    "dadjokes"
                ],
                "type": "COG"
            },
            "dictionary": {
                "author": [
                    "UltimatePancake",
                    "aikaterna"
                ],
                "description": "Gets definitions, antonyms, or synonyms for given words",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "beautifulsoup4"
                ],
                "short": "Gets definitions, antonyms, or synonyms for given words",
                "tags": [
                    "dictionary",
                    "synonym",
                    "antonym"
                ],
                "type": "COG"
            },
            "discordexperiments": {
                "author": [
                    "aikaterna"
                ],
                "description": "Create voice invites for experimental Discord applications.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Create voice invites for experimental Discord applications.",
                "tags": [
                    "discord"
                ],
                "type": ""
            },
            "dungeon": {
                "author": [
                    "aikaterna"
                ],
                "description": "Provides additional raid protection for servers utilizing a welcome/rules join channel.",
                "disabled": true,
                "end_user_data_statement": "This cog does not persistently store end user data. This cog does store discord IDs as needed for operation. ",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "ban_members",
                    "manage_channels",
                    "manage_roles"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Specialized raid protection.",
                "tags": [
                    "dungeon",
                    "autoban"
                ],
                "type": "COG"
            },
            "embedpeek": {
                "author": [
                    "aikaterna"
                ],
                "description": "Dev tool to display the content of an embed.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Dev tool to display the content of an embed.",
                "tags": [
                    "embed"
                ],
                "type": "COG"
            },
            "hunting": {
                "author": [
                    "aikaterna",
                    "Paddo"
                ],
                "description": "Hunting, it hunts birds and things that fly.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store end user data. This cog does store discord IDs as needed for operation. This cog does store user stats for the cog such as their score. Users may remove their own content without making a data removal request. This cog does not support data requests, but will respect deletion requests.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "A bird hunting game.",
                "tags": [
                    "hunting",
                    "hunt",
                    "game"
                ],
                "type": "COG"
            },
            "icyparser": {
                "author": [
                    "aikaterna"
                ],
                "description": "Audio addon cog for dislaying icecast/shoutcast info.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Audio addon cog for dislaying icecast/shoutcast info",
                "tags": [
                    "audio",
                    "icecast",
                    "shoutcast"
                ],
                "type": "COG"
            },
            "inspirobot": {
                "author": [
                    "aikaterna"
                ],
                "description": "Fetch a random 'inspiring' message from http://inspirobot.me",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Fetch 'inspiring' messages.",
                "tags": [
                    "inspire",
                    "inspirobot"
                ],
                "type": "COG"
            },
            "invites": {
                "author": [
                    "aikaterna"
                ],
                "description": "Invite count display and leaderboard.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "administrator",
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Invite count display and leaderboard.",
                "tags": [
                    "invites"
                ],
                "type": "COG"
            },
            "latex": {
                "author": [
                    "aikaterna",
                    "Stevy"
                ],
                "description": "Generates an image for a LaTeX expression.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pillow"
                ],
                "short": "Generates an image for a LaTeX expression.",
                "tags": [
                    "latex"
                ],
                "type": "COG"
            },
            "luigipoker": {
                "author": [
                    "aikaterna",
                    "themario30"
                ],
                "description": "Play the Luigi Poker minigame from New Super Mario Brothers.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "A Luigi poker minigame.",
                "tags": [
                    "poker",
                    "game"
                ],
                "type": "COG"
            },
            "massunban": {
                "author": [
                    "aikaterna"
                ],
                "description": "Mass unban users by the ban reason used.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Mass unban users.",
                "tags": [
                    "unban"
                ],
                "type": ""
            },
            "noflippedtables": {
                "author": [
                    "irdumb",
                    "aikaterna"
                ],
                "description": "Unflip all the flipped tables.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Unflip some tables.",
                "tags": [
                    "noflippedtables",
                    "no flip",
                    "tables"
                ],
                "type": ""
            },
            "nolinks": {
                "author": [
                    "aikaterna"
                ],
                "description": "Removes all links in specified channels, with the ability to whitelist roles.",
                "disabled": true,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "manage_messages"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "No links allowed.",
                "tags": [
                    "links",
                    "automod"
                ],
                "type": "COG"
            },
            "otherbot": {
                "author": [
                    "aikaterna",
                    "Pred\u00e4"
                ],
                "description": "Alerts a role when bot(s) go offline.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store end user data. This cog does store discord IDs as needed for operation. ",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "manage_roles"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Alerts a role when bot(s) go offline.",
                "tags": [
                    "bot",
                    "offline",
                    "uptime"
                ],
                "type": "COG"
            },
            "partycrash": {
                "author": [
                    "aikaterna",
                    "Will (tekulvw)"
                ],
                "description": "Posts invites to servers, if the bot is allowed to view them. Does not generate new invites.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "manage_guild"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Post server invites.",
                "tags": [
                    "invite"
                ],
                "type": "COG"
            },
            "pingtime": {
                "author": [
                    "aikaterna"
                ],
                "description": "It's ping... with latency. Shows all shards.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Ping pong.",
                "tags": [
                    "ping",
                    "pingtime",
                    "latency"
                ],
                "type": "COG"
            },
            "pressf": {
                "author": [
                    "aikaterna"
                ],
                "description": "Pay respects to a thing or user by pressing f.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Press f to pay respects.",
                "tags": [
                    "f",
                    "pressf",
                    "respects"
                ],
                "type": "COG"
            },
            "pupper": {
                "author": [
                    "aikaterna"
                ],
                "description": "Pupper is a configurable pet that can hand out credits.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Pet the dog.",
                "tags": [
                    "pets"
                ],
                "type": "COG"
            },
            "quiz": {
                "author": [
                    "Keane",
                    "aikaterna"
                ],
                "description": "Play a kahoot-like trivia game.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Play a kahoot-like trivia game.",
                "tags": [
                    "trivia",
                    "quiz"
                ],
                "type": "COG"
            },
            "region": {
                "author": [
                    "aikaterna"
                ],
                "description": "Change the Discord server's region with a command.",
                "disabled": true,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Change the Discord server's region.",
                "tags": [
                    "voice region",
                    "region"
                ],
                "type": ""
            },
            "rndstatus": {
                "author": [
                    "aikaterna",
                    "Twentysix"
                ],
                "description": "Random statuses with an optional bot stats mode. Ported from Twentysix's v2 cog.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Random bot statuses",
                "tags": [
                    "status"
                ],
                "type": "COG"
            },
            "rss": {
                "author": [
                    "aikaterna"
                ],
                "description": "Read RSS feeds.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [
                    "bs4",
                    "feedparser>=6.0.0",
                    "webcolors==1.3"
                ],
                "short": "Read RSS feeds.",
                "tags": [
                    "rss"
                ],
                "type": ""
            },
            "seen": {
                "author": [
                    "aikaterna"
                ],
                "description": "Check when the user was last active on a server. Originally made by Paddo.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store end user data. This cog does store discord IDs and last seen timestamp as needed for operation. ",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Check when the user was last active on a server.",
                "tags": [
                    "seen",
                    "activity"
                ],
                "type": "COG"
            },
            "snacktime": {
                "author": [
                    "irdumb",
                    "aikaterna"
                ],
                "description": "snackburr will come around every-so-often if you've asked him to.\nI hear snackburr likes to come around more often when people are partyin.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "\u0295 \u2022\u1d25\u2022\u0294 < It's snacktime, who wants snacks?",
                "tags": [
                    "snack",
                    "snacktime",
                    "snackburr",
                    "party",
                    "party time"
                ],
                "type": ""
            },
            "timezone": {
                "author": [
                    "aikaterna",
                    "fishyfing"
                ],
                "description": "Check timezones, user times, or times in specific places. Originally made by Fishyfing.",
                "disabled": false,
                "end_user_data_statement": "This cog stores data provided by users for the express purpose of redisplaying. It does not store user data which was not provided through a command. Users may remove their own content without making a data removal request. This cog does not support data requests, but will respect deletion requests.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pytz"
                ],
                "short": "Check times for users and places.",
                "tags": [
                    "time",
                    "timezone"
                ],
                "type": "COG"
            },
            "tools": {
                "author": [
                    "aikaterna",
                    "sitryk"
                ],
                "description": "Mod and admin tools.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "ban_members",
                    "manage_channels"
                ],
                "required_cogs": {},
                "requirements": [
                    "tabulate",
                    "unidecode"
                ],
                "short": "Mod and admin tools.",
                "tags": [
                    "tools"
                ],
                "type": "COG"
            },
            "trackdecoder": {
                "author": [
                    "aikaterna",
                    "devoxin#0001"
                ],
                "description": "Utility cog for decoding b64 encoded Lavalink Track strings.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Utility cog for decoding b64 encoded Lavalink Track strings.",
                "tags": [
                    "lavalink"
                ],
                "type": "COG"
            },
            "trickortreat": {
                "author": [
                    "aikaterna"
                ],
                "description": "Trick or treating for your server.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store end user data. This cog does store discord IDs as needed for operation. This cog does store user stats for the cog such as their score. Users may remove their own content without making a data removal request. This cog does not support data requests, but will respect deletion requests.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Trick or treat.",
                "tags": [
                    "trick or treat",
                    "candy",
                    "pick",
                    "halloween"
                ],
                "type": "COG"
            },
            "ttt": {
                "author": [
                    "aikaterna",
                    "HizkiFW"
                ],
                "description": "Tic Tac Toe",
                "disabled": false,
                "end_user_data_statement": "This cog does store temporarily (in memory) data about users, which is cleared after the game is done.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "add_reactions"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Tic Tac Toe",
                "tags": [
                    "game",
                    "games",
                    "tic tac toe",
                    "ttt"
                ],
                "type": "COG"
            },
            "urlfetch": {
                "author": [
                    "aikaterna"
                ],
                "description": "Fetch text from a URL.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Fetch text from a URL.",
                "tags": [
                    "api"
                ],
                "type": ""
            },
            "voicelogs": {
                "author": [
                    "ZeLarpMaster#0818",
                    "aikaterna"
                ],
                "description": "Allows moderators to access users' and channels' voice activity with timestamps and duration.",
                "disabled": false,
                "end_user_data_statement": "This cog stores discord IDs as needed for operation. This cog stores voice channel connection time per-user when toggled on in a server. This cog does not support data requests, but will respect deletion requests.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Voice activity logs",
                "tags": [
                    "voice",
                    "activity",
                    "logs"
                ],
                "type": "COG"
            },
            "warcraftlogs": {
                "author": [
                    "aikaterna",
                    "Kowlin"
                ],
                "description": "Check WarcraftLogs for data on players of World of Warcraft Classic.",
                "disabled": true,
                "end_user_data_statement": "This cog stores data provided by users for the express purpose of redisplaying. It does not store user data which was not provided through a command. Users may remove their own content without making a data removal request. This cog does not support data requests, but will respect deletion requests.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [
                    "pillow",
                    "beautifultable"
                ],
                "short": "WarcraftLogs data for World of Warcraft Classic players.",
                "tags": [
                    "warcraft"
                ],
                "type": "COG"
            },
            "wolfram": {
                "author": [
                    "aikaterna"
                ],
                "description": "Query Wolfram|Alpha for answers. Requires a free API key. Originally by Paddo.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pillow"
                ],
                "short": "Query Wolfram|Alpha for answers.",
                "tags": [
                    "wolfram"
                ],
                "type": "COG"
            },
            "youtube": {
                "author": [
                    "aikaterna",
                    "Paddo"
                ],
                "description": "Search youtube for videos, originally by Paddo. This version also includes a ytsearch command to look through multiple results.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Search youtube for videos.",
                "tags": [
                    "youtube"
                ],
                "type": "COG"
            }
        },
        "short": "Utility and fun cogs"
    },
    "https://github.com/baiumbg/baiumbg-Cogs": {
        "author": [
            "baiumbg"
        ],
        "description": "A bunch of useless cogs (and some questionably useful ones).",
        "name": "baiumbg-Cogs",
        "rx_branch": "",
        "rx_category": "unapproved",
        "rx_cogs": {
            "duel": {
                "author": [
                    "CalebJ",
                    "baiumbg"
                ],
                "description": "Makes two users duel each other, with randomized moves and score tracking. Ported to V3 by baiumbg.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Makes two users duel each other, with randomized moves and score tracking.",
                "tags": [
                    "duel",
                    "fun",
                    "fight",
                    "combat"
                ],
                "type": ""
            },
            "mxl": {
                "author": [
                    "baiumbg"
                ],
                "description": "",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "beautifulsoup4",
                    "requests",
                    "flickrapi",
                    "imgkit"
                ],
                "short": "Some utility stuff for the Median XL Diablo II mod.",
                "tags": [
                    "fun",
                    "utility"
                ],
                "type": ""
            },
            "nickometer": {
                "author": [
                    "Will/tekulvw",
                    "baiumbg"
                ],
                "description": "Measures the lameness of names. Ported to V3 by baiumbg.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Measures the lameness of names",
                "tags": [],
                "type": ""
            },
            "penis": {
                "author": [
                    "Twentysix",
                    "baiumbg"
                ],
                "description": "Usage: [p]penis <user>\nThis is 100% accurate.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Detects users' penis size with maximum accuracy. Ported to V3 by baiumbg.",
                "tags": [
                    "fun"
                ],
                "type": ""
            },
            "rpg": {
                "author": [
                    "baiumbg"
                ],
                "description": "Equipment, stats, levels, monsters, adventuring, PVP, you name it.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate"
                ],
                "short": "RPG implementation with adventuring and PVP duels.",
                "tags": [
                    "duel",
                    "fun",
                    "fight",
                    "combat",
                    "rpg",
                    "adventure",
                    "pvp"
                ],
                "type": ""
            },
            "sfx": {
                "author": [
                    "baiumbg"
                ],
                "description": "",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "gTTS",
                    "red-lavalink",
                    "pydub",
                    "aiohttp"
                ],
                "short": "Allow users to play TTS audio.",
                "tags": [
                    "tts",
                    "audio"
                ],
                "type": ""
            },
            "zalgo": {
                "author": [
                    "CalebJ",
                    "baiumbg"
                ],
                "description": "Zalgoifies text. Put a number before the text to adjust intensity from 0-10. Ported to V3 by baiumbg.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "HE COMES",
                "tags": [
                    "zalgo",
                    "fun"
                ],
                "type": ""
            }
        },
        "short": "A bunch of useless cogs"
    },
    "https://github.com/bobloy/Fox-V3": {
        "author": [
            "Bobloy"
        ],
        "description": "Cogs for RED Discord Bot by Bobloy",
        "name": "Fox-V3",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "announcedaily": {
                "author": [
                    "Bobloy"
                ],
                "description": "Send daily announcements to all servers at a specified times",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Send daily announcements",
                "tags": [
                    "bobloy"
                ],
                "type": ""
            },
            "audiotrivia": {
                "author": [
                    "Bobloy"
                ],
                "description": "Start an Audio Trivia game",
                "disabled": false,
                "end_user_data_statement": "This cog expands the core Audio and Trivia cogs without collecting any additional End User Data.\nSee the core End User Data storage for more information",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Start an Audio Trivia game",
                "tags": [
                    "fox",
                    "bobloy",
                    "games",
                    "audio"
                ],
                "type": ""
            },
            "ccrole": {
                "author": [
                    "Bobloy"
                ],
                "description": "Creates custom commands to adjust roles and send custom messages",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Creates commands that adjust roles",
                "tags": [
                    "fox",
                    "bobloy",
                    "utility",
                    "tools",
                    "roles"
                ],
                "type": ""
            },
            "chatter": {
                "author": [
                    "Bobloy"
                ],
                "description": "Create an offline chatbot that talks like your average member using Machine Learning. See setup instructions at https://github.com/bobloy/Fox-V3/tree/master/chatter",
                "disabled": false,
                "end_user_data_statement": "This cog only stores anonymous conversations data; no End User Data is stored.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.6",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "git+git://github.com/bobloy/ChatterBot@fox#egg=ChatterBot>=1.1.0.dev4",
                    "kaggle",
                    "https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-3.1.0/en_core_web_sm-3.1.0.tar.gz#egg=en_core_web_sm",
                    "https://github.com/explosion/spacy-models/releases/download/en_core_web_md-3.1.0/en_core_web_md-3.1.0.tar.gz#egg=en_core_web_md"
                ],
                "short": "Local Chatbot run on machine learning",
                "tags": [
                    "chat",
                    "chatbot",
                    "chatterbot",
                    "cleverbot",
                    "clever",
                    "machinelearning",
                    "nlp",
                    "language",
                    "bobloy"
                ],
                "type": ""
            },
            "coglint": {
                "author": [
                    "Bobloy"
                ],
                "description": "Lint python code posted in chat",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "3.3.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pylint"
                ],
                "short": "Python cog linter",
                "tags": [
                    "bobloy",
                    "utils",
                    "tools"
                ],
                "type": ""
            },
            "conquest": {
                "author": [
                    "Bobloy"
                ],
                "description": "Handle war games by filling in specified territories with colors",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "Pillow"
                ],
                "short": "War Game Map",
                "tags": [
                    "bobloy",
                    "games",
                    "game",
                    "war",
                    "map",
                    "axisandallies",
                    "heartsofiron",
                    "conquest",
                    "rpg"
                ],
                "type": ""
            },
            "dad": {
                "author": [
                    "Bobloy"
                ],
                "description": "Tell dad jokes and give out bad nicknames",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Dad joke bot",
                "tags": [
                    "bobloy",
                    "utils",
                    "tools"
                ],
                "type": ""
            },
            "exclusiverole": {
                "author": [
                    "Bobloy"
                ],
                "description": "Assign roles to be exclusive, preventing other roles from being added",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Set roles to be exclusive",
                "tags": [
                    "fox",
                    "bobloy",
                    "utility",
                    "tools",
                    "roles"
                ],
                "type": ""
            },
            "fifo": {
                "author": [
                    "Bobloy"
                ],
                "description": "[BETA] Schedule commands to be run at certain times or intervals",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "apscheduler",
                    "pytz",
                    "python-dateutil"
                ],
                "short": "[BETA] Schedule commands to be run at certain times or intervals",
                "tags": [
                    "bobloy",
                    "utilities",
                    "tool",
                    "tools",
                    "roles",
                    "schedule",
                    "cron",
                    "interval",
                    "date",
                    "datetime",
                    "time",
                    "calendar",
                    "timezone"
                ],
                "type": ""
            },
            "firstmessage": {
                "author": [
                    "Bobloy"
                ],
                "description": "Simple cog to jump to the first message of a channel easily",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Simple cog to jump to first message of a channel",
                "tags": [
                    "bobloy",
                    "utilities",
                    "tool",
                    "tools"
                ],
                "type": ""
            },
            "flag": {
                "author": [
                    "Bobloy"
                ],
                "description": "Add expiring flags on members to track warnings or incidents",
                "disabled": false,
                "end_user_data_statement": "This cog stores user IDs listed along with a provided explanation for being flagged",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Add expiring flags to members",
                "tags": [
                    "bobloy",
                    "warning",
                    "warn",
                    "temp",
                    "tools",
                    "warning"
                ],
                "type": ""
            },
            "forcemention": {
                "author": [
                    "Bobloy"
                ],
                "description": "Mentions roles that are unmentionable",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Mention unmentionables",
                "tags": [
                    "bobloy",
                    "utils"
                ],
                "type": ""
            },
            "hangman": {
                "author": [
                    "Bobloy"
                ],
                "description": "Play Hangman with your friends",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Play Hangman",
                "tags": [
                    "game",
                    "fun",
                    "bobloy"
                ],
                "type": ""
            },
            "infochannel": {
                "author": [
                    "Bobloy"
                ],
                "description": "Create a channel with updating server info",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Updating server info channel",
                "tags": [
                    "bobloy",
                    "utils"
                ],
                "type": ""
            },
            "isitdown": {
                "author": [
                    "Bobloy"
                ],
                "description": "Check if a website/url is down using the https://isitdown.site/ api",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Check if a website/url is down",
                "tags": [
                    "bobloy",
                    "utilities",
                    "tool",
                    "tools"
                ],
                "type": ""
            },
            "launchlib": {
                "author": [
                    "Bobloy"
                ],
                "description": "Pull information from the Launch Library API for space flights",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "python-launch-library>=2.0.3"
                ],
                "short": "Access launch data for space flights",
                "tags": [
                    "bobloy",
                    "utils",
                    "launch",
                    "space",
                    "api",
                    "library"
                ],
                "type": ""
            },
            "leaver": {
                "author": [
                    "Bobloy"
                ],
                "description": "Keeps track of when people leave the server, and posts a message notifying",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Send message on leave",
                "tags": [
                    "bobloy",
                    "utils",
                    "tools"
                ],
                "type": ""
            },
            "lovecalculator": {
                "author": [
                    "Bobloy",
                    "SnappyDragon"
                ],
                "description": "Calculate the love percentage for two users. Shows gif result and description of their love",
                "disabled": false,
                "end_user_data_statement": "This cog uses the core Bank cog. It store no End User Data otherwise.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "beautifulsoup4"
                ],
                "short": "Calculate love percentage for two users.",
                "tags": [
                    "bobloy",
                    "fun",
                    "love"
                ],
                "type": ""
            },
            "lseen": {
                "author": [
                    "Bobloy"
                ],
                "description": "Keep track of when users were last seen online",
                "disabled": false,
                "end_user_data_statement": "This cog stores user IDs along with a time they were last online per guild",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "python-dateutil"
                ],
                "short": "Last seen tracker",
                "tags": [
                    "bobloy",
                    "utils",
                    "tools"
                ],
                "type": ""
            },
            "planttycoon": {
                "author": [
                    "Bobloy",
                    "SnappyDragon",
                    "PaddoInWonderland"
                ],
                "description": "Grow your own plants! Be sure to take care of it. Do `[p]gardening` to get started",
                "disabled": false,
                "end_user_data_statement": "This cog stores user IDs along with their progress in the PlantTycoon game",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Grow your own plants! Do `[p]gardening` to get started.",
                "tags": [
                    "bobloy",
                    "games",
                    "environment"
                ],
                "type": ""
            },
            "qrinvite": {
                "author": [
                    "Bobloy"
                ],
                "description": "Create a QR code invite for the server",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "MyQR"
                ],
                "short": "Create a QR code invite",
                "tags": [
                    "bobloy",
                    "tools",
                    "qr",
                    "code"
                ],
                "type": ""
            },
            "reactrestrict": {
                "author": [
                    "Bobloy"
                ],
                "description": "Cog to prevent reactions on specific messages from certain users",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Prevent reactions to messages",
                "tags": [
                    "react",
                    "reaction",
                    "restrict",
                    "tools",
                    "utils",
                    "bobloy"
                ],
                "type": ""
            },
            "recyclingplant": {
                "author": [
                    "Bobloy",
                    "SnappyDragon"
                ],
                "description": "Apply for a job at the recycling plant! Sort out the garbage!",
                "disabled": false,
                "end_user_data_statement": "This cog used the core",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Apply for a job at the recycling plant!",
                "tags": [
                    "bobloy",
                    "environment",
                    "games"
                ],
                "type": ""
            },
            "rpsls": {
                "author": [
                    "Bobloy",
                    "SnappyDragon"
                ],
                "description": "Play Rock Papers Scissor Lizard Spock by Sam Kass in Discord!",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Play Rock Papers Scissor Lizard Spock in Discord!",
                "tags": [
                    "bobloy",
                    "star trek",
                    "games"
                ],
                "type": ""
            },
            "sayurl": {
                "author": [
                    "Bobloy"
                ],
                "description": "Convert any website into text and post it in chat",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "3.3.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "html2text"
                ],
                "short": "Convert URL to text",
                "tags": [
                    "bobloy",
                    "tools"
                ],
                "type": ""
            },
            "scp": {
                "author": [
                    "Bobloy",
                    "SnappyDragon"
                ],
                "description": "Look up SCP articles. Warning: Some of them may be too creepy or gruesome.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Look up SCP articles.",
                "tags": [
                    "bobloy",
                    "gruesom"
                ],
                "type": ""
            },
            "stealemoji": {
                "author": [
                    "Bobloy"
                ],
                "description": "Steals custom emojis the bot sees and moves them to an emoji server",
                "disabled": false,
                "end_user_data_statement": "This cog gathers custom emojis from all sources, but stores no End User Data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Steals custom emojis",
                "tags": [
                    "bobloy",
                    "utils",
                    "emoji"
                ],
                "type": ""
            },
            "timerole": {
                "author": [
                    "Bobloy"
                ],
                "description": "Apply roles based on the # of hours or days on server",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Apply roles after # of hours or days",
                "tags": [
                    "bobloy",
                    "utilities",
                    "tools",
                    "tool",
                    "roles"
                ],
                "type": ""
            },
            "tts": {
                "author": [
                    "Bobloy"
                ],
                "description": "Send Text2Speech messages as an uploaded mp3",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "gTTS"
                ],
                "short": "Send TTS messages as uploaded mp3",
                "tags": [
                    "bobloy",
                    "utils",
                    "audio"
                ],
                "type": ""
            },
            "unicode": {
                "author": [
                    "Bobloy",
                    "SnappyDragon"
                ],
                "description": "Encode/Decode Unicode characters!",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Encode/Decode Unicode characters!",
                "tags": [
                    "bobloy",
                    "utility",
                    "tools"
                ],
                "type": ""
            },
            "werewolf": {
                "author": [
                    "Bobloy"
                ],
                "description": "Customizable Werewolf Game",
                "disabled": false,
                "end_user_data_statement": "This stores user IDs in memory while they're actively using the cog, and stores no persistent End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "[ALPHA] Play Werewolf (Mafia) Game in discord",
                "tags": [
                    "mafia",
                    "werewolf",
                    "party",
                    "fun",
                    "game",
                    "bobloy"
                ],
                "type": ""
            }
        },
        "short": "Cogs by Bobloy"
    },
    "https://github.com/coffeebank/coffee-cogs": {
        "author": [
            "coffeebank"
        ],
        "description": "Special cogs offering deeper Discord integration with features and services",
        "name": "coffee-cogs",
        "rx_branch": "",
        "rx_category": "unapproved",
        "rx_cogs": {
            "bartender": {
                "author": [
                    "coffeebank"
                ],
                "description": "Serve some yummy drinks to your fellow server members!",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Serve some yummy drinks!",
                "tags": [
                    "bar",
                    "drinks",
                    "soda",
                    "cocktail",
                    "cafe",
                    "coffee"
                ],
                "type": ""
            },
            "coffeetime": {
                "author": [
                    "coffeebank",
                    "aikaterna",
                    "fishyfing"
                ],
                "description": "Check timezones, user times, or times in specific places. Forked from aikaterna's improvements, cog originally by Fishyfing.",
                "disabled": false,
                "end_user_data_statement": "This cog stores data provided by users for the express purpose of redisplaying. It does not store user data which was not provided through a command. Users may remove their own content without making a data removal request. This cog does not support data requests, but will respect deletion requests.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pytz"
                ],
                "short": "Check times for users and places.",
                "tags": [
                    "time",
                    "timezone"
                ],
                "type": "COG"
            },
            "coffeetools": {
                "author": [
                    "coffeebank"
                ],
                "description": "Replacement for 'General' cog, since it needs to be disabled to override certain commands. Changes 'choose' to use | divider.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Replacement for 'General' cog, with some common tools",
                "tags": [
                    "tools",
                    "choose",
                    "choice"
                ],
                "type": ""
            },
            "dmreply": {
                "author": [
                    "coffeebank"
                ],
                "description": "Replacing the built-in DM feature to be more customizable. Allows users specified as mods to send a customized DM embed to users via a User ID. Made with the goal of helping support teams responding to queries via DM, when used in conjunction with a cog that forwards received DMs to a server channel. Uses global settings, so only use this feature on bots hosted for a single server.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Replacing the built-in DM feature to be more customizable",
                "tags": [
                    "dm",
                    "reply",
                    "direct",
                    "message",
                    "autoreply",
                    "autorespond"
                ],
                "type": ""
            },
            "emotes": {
                "author": [
                    "coffeebank"
                ],
                "description": "Custom emote solution for non-nitro users. Use animated emotes in your server, even without Nitro. Make your own emote storage spreadsheet and generate emote-like image links for use in DMs and elsewhere.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Custom emote solution for non-nitro users",
                "tags": [
                    "emoji",
                    "emote",
                    "animated",
                    "nitro",
                    "info",
                    "google sheets",
                    "api"
                ],
                "type": ""
            },
            "hellohook": {
                "author": [
                    "coffeebank"
                ],
                "description": "Create your own welcome bot with a custom profile picture! Choose between a regular message or an embed welcome, with a ping option.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Create your own welcome bot with a custom profile picture!",
                "tags": [
                    "welcome",
                    "webhook"
                ],
                "type": ""
            },
            "jsonrequest": {
                "author": [
                    "coffeebank"
                ],
                "description": "Send and receive a json request from Discord. Includes domain whitelisting by server.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Send and receive a json request from Discord",
                "tags": [
                    "json"
                ],
                "type": ""
            },
            "loveplay": {
                "author": [
                    "coffeebank"
                ],
                "description": "Send love to other members of the server with reaction gifs from Purrbot API. Does not require a user @mention (say '=hug server' all you like!). Includes: blush, cuddle, dance, hug, kiss, lick, neko, nom, pat, poke, slap. Also includes a custom reaction gif builder that works for any gif type from the Purrbot API.\n\nTo replace built-in hug command, unload 'General' cog and install 'coffeetools' cog.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "requests"
                ],
                "short": "Send love to other members of the server with hugs, kisses, etc.",
                "tags": [
                    "love",
                    "hug",
                    "kiss",
                    "catgirls"
                ],
                "type": ""
            },
            "msgmover": {
                "author": [
                    "coffeebank"
                ],
                "description": "Make moving messages between channels/servers easy and integrated, using webhooks.\n\nmsgcopy: Copy messages from one channel to another. Move whole conversations, or merge channels easily with re-uploaded attachments, bot messages, and usernames/profiles replicated in full. Includes timestamp spacers.\n\nmsgrelay: Relay messages from one channel to another channel/server. Supports usernames/profile pics, replies, attachments (files/images/video), and embeds (bot command replies). Supports edited/deleted messages. Supports forwarding to multiple webhooks/channels. Forward messages between different servers to bridge communities and share content.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "aiohttp",
                    "requests"
                ],
                "short": "Move messages across channels and servers",
                "tags": [
                    "relays",
                    "move",
                    "messages",
                    "forwarding",
                    "link",
                    "channels",
                    "server",
                    "pictures"
                ],
                "type": ""
            },
            "pinboard": {
                "author": [
                    "coffeebank"
                ],
                "description": "Make a bulletin board pinned message! Users can add/remove their own content to/from a shared, \"bulletin board\" style pinned message.",
                "disabled": false,
                "end_user_data_statement": "This cog stores the data you submit into a pinned message, in order to keep pinned messages updated.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Make bulletin board style pinned messages! Let people add/remove their own blurbs in a pinned message.",
                "tags": [
                    "pins",
                    "pinned",
                    "messages",
                    "board"
                ],
                "type": ""
            },
            "quarantine": {
                "author": [
                    "coffeebank"
                ],
                "description": "Quarantine a user easily. Set a muterole and mod log channel, and any users specified will have their roles removed and replaced with the muterole.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Quarantine a user",
                "tags": [
                    "moderation",
                    "roles",
                    "mute",
                    "mod"
                ],
                "type": ""
            },
            "sendhook": {
                "author": [
                    "coffeebank"
                ],
                "description": "The comprehensive webhooks cog, with sending, listing, and creating of webhooks. Comes with support for webhook aliases and sending messages as your username/avatar. Perfect for users stuck on mobile Discord.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "The comprehensive webhooks cog, with sending, listing, and creating of webhooks",
                "tags": [
                    "webhook"
                ],
                "type": ""
            },
            "spotifyembed": {
                "author": [
                    "coffeebank"
                ],
                "description": "Automatically send a reply to Spotify links with a link to the embed preview. Convenient for mobile users who can finally listen to music samples from Discord, without needing an account.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Automatically send replies to Spotify links with the embed preview, for mobile users",
                "tags": [
                    "spotify",
                    "music",
                    "preview",
                    "embed"
                ],
                "type": ""
            },
            "websearch": {
                "author": [
                    "coffeebank"
                ],
                "description": "A simple Discord bot feature that returns links to search engines like Google without needing to copy-paste a search term into a website/app separately. Comes preset with search strings for Google, Bing, Ecosia, and DuckDuckGo. Custom search strings can be added. Works similarly to LMGTFY, but without the passive aggressiveness.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Search for stuff on the web",
                "tags": [
                    "search",
                    "search engine"
                ],
                "type": ""
            }
        },
        "short": "Special cogs offering deeper Discord integration with features and services"
    },
    "https://github.com/crossedfall/crossed-cogs": {
        "author": [
            "Crossedfall (Crossedfall#1001)"
        ],
        "description": "Notes and Status cogs for SS13 servers",
        "name": "crossed-cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "cclookup": {
                "author": [
                    "Crossedfall (Crossedfall#1001)"
                ],
                "description": "Checks through the CentCom ban database for any entries relating to a given user",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "Manage Messages",
                    "Embed Links"
                ],
                "required_cogs": {},
                "requirements": [
                    "httpx>=0.14.1"
                ],
                "short": "References the CentCom ban database for any entries for a given user",
                "tags": [
                    "Space Station 13",
                    "Game",
                    "Administration",
                    "Utility",
                    "SS13"
                ],
                "type": ""
            },
            "dmcompile": {
                "author": [
                    "Crossedfall (Crossedfall#1001)"
                ],
                "description": "Compile and test DM code from Discord!",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "Manage Messages",
                    "Embed Links"
                ],
                "required_cogs": {},
                "requirements": [
                    "httpx"
                ],
                "short": "",
                "tags": [],
                "type": ""
            },
            "getnotes": {
                "author": [
                    "Crossedfall (Crossedfall#1001)"
                ],
                "description": "Pulls player notes from your database. TG Scheme required",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "Manage Messages",
                    "Embed Links"
                ],
                "required_cogs": {},
                "requirements": [
                    "aiomysql>=0.0.20"
                ],
                "short": "Obtains player notes and posts them into discord on command!",
                "tags": [
                    "Space Station 13",
                    "Game",
                    "Administration",
                    "Utility",
                    "SS13"
                ],
                "type": ""
            },
            "status": {
                "author": [
                    "Crossedfall (Crossedfall#1001)"
                ],
                "description": "Checks the current status of an SS13 round and pulls information about the number of players, the game-mode, and round duration.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "Manage Messages",
                    "Embed Links",
                    "Mention Everyone"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Pulls information from the current SS13 round",
                "tags": [
                    "Space Station 13",
                    "Game",
                    "Administration",
                    "Utility",
                    "SS13"
                ],
                "type": ""
            },
            "verifyckey": {
                "author": [
                    "Crossedfall (Crossedfall#1001)"
                ],
                "description": "Allows users to link their CKEY to their Discord account and obtain roles for doing so. Used as a form of Discord user verification.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "Manage Messages",
                    "Embed Links",
                    "Manage Roles"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Verify ckeys in discord!",
                "tags": [
                    "Space Station 13",
                    "Game",
                    "Administration",
                    "Utility",
                    "SS13"
                ],
                "type": ""
            }
        },
        "short": "SS13 cogs"
    },
    "https://github.com/designbyadrian/CogsByAdrian": {
        "author": [
            "ThinkAdrian"
        ],
        "description": "A few fun cogs for your repo and your general desire to abuse your moderator powers",
        "name": "CogsByAdrian",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "crier": {
                "author": [
                    "DesignByAdrian (ThinkAdrian#1186)"
                ],
                "description": "Have the bot say or shout in a target channel",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Announce messages in different channels",
                "tags": [
                    "say",
                    "shout",
                    "message",
                    "announcements"
                ],
                "type": ""
            },
            "insult": {
                "author": [
                    "DesignByAdrian (ThinkAdrian#1186)"
                ],
                "description": "Usage: [p]insult <user>\n",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Insult a user creatively.",
                "tags": [
                    "fun"
                ],
                "type": ""
            },
            "killer": {
                "author": [
                    "DesignByAdrian (ThinkAdrian#1186)"
                ],
                "description": "Slap, punch, stab unsuspecting neighbours!",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Do bad things to other users",
                "tags": [
                    "fun"
                ],
                "type": ""
            },
            "penis": {
                "author": [
                    "Twentysix",
                    "DesignByAdrian (ThinkAdrian#1186)"
                ],
                "description": "",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "",
                "tags": [],
                "type": ""
            }
        },
        "short": "Cogs by ThinkAdrian inspired by many."
    },
    "https://github.com/dualmoon/Cogs.v3": {
        "author": [
            "luna"
        ],
        "description": "Cogs for RED Discord Bot by luna",
        "name": "Cogs.v3",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "bandname": {
                "author": [
                    "luna"
                ],
                "description": "Randomly creates names for made up bands by scanning messages 2-5 words in length and applying them to bands of a randomly chosen genre.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    7,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Randomly creates names for made up bands.",
                "tags": [],
                "type": ""
            },
            "feedback": {
                "author": [
                    "luna"
                ],
                "description": "Allows users to submit anonymous feedback to the moderation team of any server that they share with the bot.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    7,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Allows users to submit anonymous feedback.",
                "tags": [],
                "type": ""
            },
            "selfassign": {
                "author": [
                    "luna"
                ],
                "description": "Allows users to self-assign chosen roles without the help of a moderator",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    7,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Allows users to self-assign roles",
                "tags": [],
                "type": ""
            },
            "webthing": {
                "author": [
                    "luna"
                ],
                "description": "Testing running a web server as a cog",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    7,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Testing running a web server as a cog",
                "tags": [],
                "type": ""
            },
            "weeedcog": {
                "author": [
                    "luna"
                ],
                "description": "Creates comics with random characters using a string of messages from a channel.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    7,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pillow"
                ],
                "short": "Create comics from channel messages",
                "tags": [],
                "type": ""
            }
        },
        "short": "Cogs by luna"
    },
    "https://github.com/elijabesu/SauriCogs": {
        "author": [
            "saurichable"
        ],
        "description": "Just some cogs that I was searching for but couldn't find so I made my own.",
        "name": "SauriCogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "advancedlock": {
                "author": [
                    "saurichable"
                ],
                "description": "Lock `@everyone` from sending messages in channels or the entire guild, and only allow Moderators to talk. This version has some advanced settings.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Lock `@everyone` from sending messages.",
                "tags": [
                    "lockdown",
                    "lock"
                ],
                "type": ""
            },
            "application": {
                "author": [
                    "saurichable"
                ],
                "description": "Receive and moderate staff applications with customizable questions.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Applications with custom questions.",
                "tags": [
                    "application",
                    "app"
                ],
                "type": ""
            },
            "cookies": {
                "author": [
                    "saurichable"
                ],
                "description": "Collect cookies and steal from others.",
                "disabled": false,
                "end_user_data_statement": "This cog stores the amount of cookies users have.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Collect cookies.",
                "tags": [
                    "cookies",
                    "currency"
                ],
                "type": ""
            },
            "cookiestore": {
                "author": [
                    "saurichable"
                ],
                "description": "Additional store with redeemable items to my Cookies cog.",
                "disabled": false,
                "end_user_data_statement": "This cog stores items users buy.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "Cookies": "https://github.com/elijabesu/SauriCogs"
                },
                "requirements": [],
                "short": "Additional store to Cookies cog.",
                "tags": [
                    "cookies",
                    "shop",
                    "store"
                ],
                "type": ""
            },
            "counting": {
                "author": [
                    "saurichable"
                ],
                "description": "Make a counting channel with goals.",
                "disabled": false,
                "end_user_data_statement": "This cog stores user IDs if they are the last one to count.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Counting channel.",
                "tags": [
                    "counting",
                    "count"
                ],
                "type": ""
            },
            "economyraffle": {
                "author": [
                    "saurichable"
                ],
                "description": "Simple cog that gives a pre-specified amount of credits to a randomly picked user.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Simple economy raffle cog.",
                "tags": [
                    "giveaway",
                    "economy",
                    "raffle"
                ],
                "type": ""
            },
            "forwarding": {
                "author": [
                    "saurichable",
                    "flare",
                    "aikaterna"
                ],
                "description": "Forward all DMs sent to the bot to the bot owner (or a specified channel), including messages with attachments.",
                "disabled": false,
                "end_user_data_statement": "This cog stores user ID if they are set as a ping user.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Forward messages to the owner.",
                "tags": [
                    "forwarding",
                    "forward"
                ],
                "type": ""
            },
            "gallery": {
                "author": [
                    "saurichable"
                ],
                "description": "Set channels as galleries, deleting all messages that don't contain any attachments.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Gallery channels.",
                "tags": [
                    "gallery"
                ],
                "type": ""
            },
            "lock": {
                "author": [
                    "saurichable"
                ],
                "description": "Lock `@everyone` from sending messages in channels or the entire guild, and only allow Moderators to talk.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Lock `@everyone` from sending messages.",
                "tags": [
                    "lockdown",
                    "lock"
                ],
                "type": ""
            },
            "lvlupcookies": {
                "author": [
                    "saurichable"
                ],
                "description": "Set cookie rewards for users that level up!",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "Cookies": "https://github.com/elijabesu/SauriCogs",
                    "Leveler": "https://github.com/fixator10/Fixator10-Cogs/"
                },
                "requirements": [],
                "short": "Set cookie rewards for users that level up!",
                "tags": [
                    "cookies",
                    "rewards"
                ],
                "type": ""
            },
            "marriage": {
                "author": [
                    "saurichable"
                ],
                "description": "Marry, divorce, and give gifts to other members.",
                "disabled": false,
                "end_user_data_statement": "This cog stores user IDs upon marrying and divorcing.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Marry, divorce, and give gifts to other members.",
                "tags": [
                    "marriage",
                    "marry",
                    "waifu"
                ],
                "type": ""
            },
            "mentionable": {
                "author": [
                    "saurichable",
                    "bobloy"
                ],
                "description": "Very simple way to make unmentionable roles mentionable.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Makes unmentionable roles mentionable.",
                "tags": [
                    "mentionable"
                ],
                "type": ""
            },
            "pick": {
                "author": [
                    "saurichable"
                ],
                "description": "Pick a random user, or a user with a specified role.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Pick a random user, or a user with a specified role.",
                "tags": [
                    "pick"
                ],
                "type": ""
            },
            "pingable": {
                "author": [
                    "saurichable"
                ],
                "description": "Make unpingable roles pingable by regular users with commands.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Make unpingable roles pingable by regular users.",
                "tags": [
                    "mentionable",
                    "pingable"
                ],
                "type": ""
            },
            "reacttickets": {
                "author": [
                    "saurichable",
                    "Dav"
                ],
                "description": "Reaction based assignable support tickets with custom cases (reasons).",
                "disabled": false,
                "end_user_data_statement": "This cog stores user IDs for the duration of their support ticket being open.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Reaction based support tickets.",
                "tags": [
                    "tickets",
                    "support",
                    "reaction",
                    "ticket"
                ],
                "type": ""
            },
            "suggestion": {
                "author": [
                    "saurichable"
                ],
                "description": "Per guild, as well as global, suggestion box voting system.",
                "disabled": false,
                "end_user_data_statement": "This cog stores user names, discriminators, and IDs upon sending a suggestion. This data is used solely to display and contact the user about any change to their suggestion.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Simple suggestion box.",
                "tags": [
                    "suggestion"
                ],
                "type": ""
            },
            "uniquename": {
                "author": [
                    "saurichable"
                ],
                "description": "Deny members' names to be the same as your Moderators'.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Deny members' names to be the same as your Moderators'.",
                "tags": [
                    "unique",
                    "impersonate"
                ],
                "type": ""
            },
            "userlog": {
                "author": [
                    "saurichable"
                ],
                "description": "Log when users join/leave into a specified channel.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Log when users join/leave.",
                "tags": [
                    "userlog",
                    "log",
                    "memberlog"
                ],
                "type": ""
            }
        },
        "short": "Just some cogs for Red Discord Bot"
    },
    "https://github.com/fixator10/Fixator10-Cogs": {
        "author": [
            "Fixator10"
        ],
        "description": "Cogs for Red-DiscordBot. Including port of V2 leveler by Stevy.",
        "name": "Fixator10-Cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "adminutils": {
                "author": [
                    "Fixator10",
                    "DiNitride",
                    "kablekompany",
                    "Predeactor"
                ],
                "description": "Useful commands for server administrators.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Useful commands for server administrators.",
                "tags": [
                    "admin",
                    "emoji",
                    "purge"
                ],
                "type": ""
            },
            "datautils": {
                "author": [
                    "Fixator10",
                    "DiNitride"
                ],
                "description": "Commands for getting information about users or servers.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.8",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate",
                    "wcwidth",
                    "git+https://github.com/fixator10/F10-Cogs-Utils"
                ],
                "short": "Commands for getting information about users or servers.",
                "tags": [
                    "data",
                    "info",
                    "channel",
                    "rolemembers",
                    "server",
                    "permissions"
                ],
                "type": ""
            },
            "generalchannel": {
                "author": [
                    "Fixator10"
                ],
                "description": "Allow users to manage #general channel's name and topic",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Allow users to manage #general channel's name and topic",
                "tags": [
                    "#general",
                    "channel",
                    "name",
                    "topic"
                ],
                "type": ""
            },
            "godvilledata": {
                "author": [
                    "Fixator10"
                ],
                "description": "Get data about godville.net (russian) and godvillegame.com profiles",
                "disabled": false,
                "end_user_data_statement": "This cog stores https://godville.net API-tokens if provided by user.\nUsers may delete their tokens by either via `[p]godville apikey remove` or via data removal request.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "python-dateutil"
                ],
                "short": "Get data about Godville profiles",
                "tags": [
                    "godville",
                    "ZPG"
                ],
                "type": ""
            },
            "leveler": {
                "author": [
                    "Fixator10",
                    "Stevy"
                ],
                "description": "Level/Experience tracker\nIncrease activity (or not) on your server with chat exp!",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.6",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pymongo>=3.10",
                    "motor",
                    "fonttools",
                    "pillow>=6.2.1",
                    "tabulate"
                ],
                "short": "Level/Experience tracker",
                "tags": [
                    "leveler",
                    "v2 cog"
                ],
                "type": ""
            },
            "massthings": {
                "author": [
                    "Fixator10"
                ],
                "description": "\u26a0Cog for doing things in bulk.\u26a0\n\u26a0\ufe0f This cog may contain commands that may (or may not) be against Discord API terms. Use this at your own risk, cog author is not responsible for anything that happens during usage of this cog.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "3.0.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate"
                ],
                "short": "\u26a0Cog for doing things in bulk.\u26a0",
                "tags": [],
                "type": ""
            },
            "messageslog": {
                "author": [
                    "Fixator10"
                ],
                "description": "Log deleted and redacted messages in defined channel",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Log deleted and redacted messages in defined channel",
                "tags": [
                    "messages",
                    "logs"
                ],
                "type": ""
            },
            "minecraftdata": {
                "author": [
                    "Fixator10"
                ],
                "description": "This cog show minecraft-related data\nIncluding:\n  Player's nicks history\n  Get skin by nickname\n  Get status of minecraft data-servers",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    8,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate",
                    "wcwidth",
                    "mcstatus>=5.1.1"
                ],
                "short": "This cog show minecraft-related data",
                "tags": [
                    "minecraft",
                    "game"
                ],
                "type": ""
            },
            "moreutils": {
                "author": [
                    "Fixator10",
                    "DiNitride"
                ],
                "description": "Some (maybe) useful utils.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate"
                ],
                "short": "Some (maybe) useful utils.",
                "tags": [
                    "utils",
                    "time",
                    "someone",
                    "color"
                ],
                "type": ""
            },
            "personalroles": {
                "author": [
                    "Fixator10"
                ],
                "description": "Personal roles for members",
                "disabled": false,
                "end_user_data_statement": "This cog stores users data in form of \u00abmember : role\u00bb Discord IDs pairings.\nThis cog supports data removal requests.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate"
                ],
                "short": "Personal roles for members",
                "tags": [
                    "myrole",
                    "personal role",
                    "roles"
                ],
                "type": ""
            },
            "reverseimagesearch": {
                "author": [
                    "Fixator10"
                ],
                "description": "This cog allows users to reverse search images",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.2.1",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "python-dateutil",
                    "pillow>=6"
                ],
                "short": "This cog allows users to reverse search images",
                "tags": [
                    "reverse",
                    "image",
                    "search",
                    "saucenao",
                    "tracemoe"
                ],
                "type": ""
            },
            "smmdata": {
                "author": [
                    "Fixator10"
                ],
                "description": "This cog shows Super Mario Maker-related data. You can check levels and level designers",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "beautifulsoup4"
                ],
                "short": "This cog shows SMM-related data",
                "tags": [
                    "mario",
                    "smm",
                    "super mario maker"
                ],
                "type": ""
            },
            "steamcommunity": {
                "author": [
                    "Fixator10"
                ],
                "description": "Get steamcommunity data for steam users",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.2.1",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "python-valve",
                    "git+https://github.com/fixator10/F10-Cogs-Utils"
                ],
                "short": "Get steamcommunity data",
                "tags": [
                    "steam",
                    "steamcommunity"
                ],
                "type": ""
            },
            "translators": {
                "author": [
                    "Fixator10"
                ],
                "description": "Useful (and not) translators",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.1",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pybase64"
                ],
                "short": "Useful (and not) translators",
                "tags": [
                    "translation",
                    "translate",
                    "encode",
                    "decode",
                    "encoding"
                ],
                "type": ""
            },
            "weather": {
                "author": [
                    "Romashkoo",
                    "Fixator10"
                ],
                "description": "Weather forecast. Requires \"semi-private\" DarkSky API key. For more info: https://blog.darksky.net",
                "disabled": false,
                "end_user_data_statement": "This cog may store data about user's preferred measuring units.\nThis data can be remove by either via `[p]forecastunits reset` or via data removal request.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.2.1",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "python-forecastio"
                ],
                "short": "Weather forecast",
                "tags": [
                    "weather",
                    "forecast"
                ],
                "type": ""
            }
        },
        "short": "Cogs for Red-DiscordBot."
    },
    "https://github.com/flapjax/FlapJack-Cogs": {
        "author": [
            "FlapJack"
        ],
        "description": "Thanks for using FlapJack Cogs. If you have any issues, please join the Cog Support server and post in the support_flapjack-cogs channel: <https://discord.gg/k5xbRqG> or open an issue on the repo.",
        "name": "FlapJack-Cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "bigmoji": {
                "author": [
                    "FlapJack"
                ],
                "description": "Uploads a large .png image of an emoji. If cairosvg is not installed, standard emojis will be limited to a 72x72 png.\n\nDependencies:\ncairosvg :: http://cairosvg.org/ \n\nWindows users take note, cairosvg is difficult to install properly. Some people have had success following the Windows instructions for installing WeasyPrint (http://weasyprint.readthedocs.io/en/stable/install.html#windows), which has cairosvg as a dependency.\nTODO: wand is now supported. Include instructions for installing wand / ImageMagick on windows.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "attach_files"
                ],
                "required_cogs": {},
                "requirements": [
                    "cairosvg"
                ],
                "short": "Uploads a large version of an emoji",
                "tags": [
                    "emoji",
                    "big",
                    "huge"
                ],
                "type": ""
            },
            "blizzard": {
                "author": [
                    "FlapJack"
                ],
                "description": "Player information and latest Blizzard game patch notes in chat. Now with cool paginated patch notes you can navigate with reactions! And, Pandoc is no longer required!\n\nGames supported:\nOverwatch - Stats, patch notes\nDiablo3 - Stats, patch notes\nHearthstone - patch notes\nHeroes of the Storm - patch notes\nStarcraft2 - patch notes\nWorld of Warcraft - patch notes, token prices\n\nDependencies:\nBeautifulSoup4 :: https://www.crummy.com/software/BeautifulSoup/bs4/doc/\nBleach :: https://pypi.python.org/pypi/bleach",
                "disabled": true,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "beautifulsoup4",
                    "bleach"
                ],
                "short": "Utilities for Blizzard games",
                "tags": [
                    "blizzard",
                    "patch",
                    "notes",
                    "games",
                    "overwatch",
                    "starcraft",
                    "diablo",
                    "warcraft",
                    "hearthstone"
                ],
                "type": ""
            },
            "colorme": {
                "author": [
                    "FlapJack"
                ],
                "description": "Creates a custom, permissionless role for each user and allows them to manage the color of their own name.\nFor this cog to work, please ensure your bot has permission to edit roles, and is placed higher on the role hierarchy than the roles of the members you want to allow to change their color. Be advised that Discord limits the number of roles per server, so this cog may not work well on larger servers.\n\nDependencies: None",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "manage_roles"
                ],
                "required_cogs": {},
                "requirements": [
                    "webcolors==1.3"
                ],
                "short": "Allow users to manage the color of their own name.",
                "tags": [
                    "color",
                    "name",
                    "role",
                    "custom"
                ],
                "type": ""
            },
            "comics": {
                "author": [
                    "FlapJack"
                ],
                "description": "Fetches a random comic from a number of popular online comic sources, including:\n\nWebcomic Name (ohno)\nSaturday Morning Breakfast Cereal\nThe Perry Bible Fellowship\nCyanide and Happiness\nxkcd\nMr. Lovenstein\nChainsawsuit\nSarah's Scribbles\n\n\nDependencies:\nBeautifulSoup4 :: https://www.crummy.com/software/BeautifulSoup/bs4/doc/",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "attach_files"
                ],
                "required_cogs": {},
                "requirements": [
                    "bs4"
                ],
                "short": "Print random comics from popular sources",
                "tags": [
                    "comics",
                    "ohno",
                    "cah",
                    "pbf",
                    "smbc",
                    "xkcd"
                ],
                "type": ""
            },
            "cryptoprice": {
                "author": [
                    "FlapJack"
                ],
                "description": "Fetches cryptocurrency price data.\n\nDependencies:\nBeautifulSoup4 :: https://www.crummy.com/software/BeautifulSoup/bs4/doc/\nTabulate :: https://github.com/gregbanks/python-tabulate",
                "disabled": true,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "bs4",
                    "tabulate"
                ],
                "short": "Fetches cryptocurrency price data",
                "tags": [
                    "crypto",
                    "currency",
                    "price",
                    "bitcoin"
                ],
                "type": ""
            },
            "defcon": {
                "author": [
                    "FlapJack"
                ],
                "description": "Creates embeds in response to DEFCON level changes. This cog is purely cosmetic. No server settings are altered.\n\nDependencies: None",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Implement the DEFCON scale on your server, like in the movie War Games!",
                "tags": [
                    "defcon",
                    "war"
                ],
                "type": ""
            },
            "dongers": {
                "author": [
                    "FlapJack"
                ],
                "description": "Retreives random dongers from dongerlist.com and prints them in text channels.\n\nDependencies:\nBeautifulSoup4 :: https://www.crummy.com/software/BeautifulSoup/bs4/doc/",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "bs4"
                ],
                "short": "Prints donger faces in a chat channel.",
                "tags": [
                    "dongers"
                ],
                "type": ""
            },
            "msgvote": {
                "author": [
                    "FlapJack"
                ],
                "description": "Adds upvote and downvote reactions to every message in a channel. Messages receiving excessive downvotes can be deleted automatically.\n\nDependencies: None",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "add_reactions"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Turn Discord channels into Reddit-like threads",
                "tags": [
                    "reaction",
                    "vote",
                    "upvote",
                    "downvote"
                ],
                "type": ""
            },
            "reactpoll": {
                "author": [
                    "FlapJack",
                    "aikaterna",
                    "TrustyJAID"
                ],
                "description": "Create polls using reactions as the responses. Even works for mobile users because you do not need to add reactions to participate. Poll duration can also be customized.\n\nDependencies: None",
                "disabled": false,
                "end_user_data_statement": "This cog stores Discord IDs as needed for operation temporary during a poll which are automatically deleted when it ends.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "add_reactions",
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Create polls using reactions as the responses",
                "tags": [
                    "poll",
                    "reaction",
                    "react"
                ],
                "type": ""
            },
            "smartreact": {
                "author": [
                    "FlapJack"
                ],
                "description": "Create automatic reactions when trigger words are typed in chat.\n\nDependencies: None",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [
                    "add_reactions"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Create automatic reactions when trigger words are typed in chat",
                "tags": [
                    "reaction",
                    "smart",
                    "react"
                ],
                "type": ""
            },
            "smite": {
                "author": [
                    "FlapJack"
                ],
                "description": "Displays Smite player statistics in chat.\n\nYou must obtain a HiRez API key at https://fs12.formsite.com/HiRez/form48/secure_index.html to use the API functions in this cog.\n\nDependencies:\nNone",
                "disabled": false,
                "end_user_data_statement": "This cog stores discord IDs as needed for operation.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Smite game utilities",
                "tags": [
                    "smite",
                    "stats",
                    "games",
                    "hirez"
                ],
                "type": ""
            },
            "spoiler": {
                "author": [
                    "FlapJack"
                ],
                "description": "Hide spoilers using DMs.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Hide spoilers using DMs",
                "tags": [
                    "spoiler"
                ],
                "type": ""
            },
            "wat": {
                "author": [
                    "FlapJack"
                ],
                "description": "Yells the previous message in a channel when a user indicates they had trouble hearing.\n\nDependencies: None",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Assist users who are hard of hearing.",
                "tags": [
                    "wat",
                    "what"
                ],
                "type": ""
            },
            "wordclouds": {
                "author": [
                    "FlapJack",
                    "aikaterna"
                ],
                "description": "Create word clouds from text channel content.\n\nDependencies: WordCloud :: https://github.com/amueller/word_cloud \n\nWindows users may need to install Visual C++ Build Tools. (http://landinghub.visualstudio.com/visual-cpp-build-tools)",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "wordcloud",
                    "numpy",
                    "matplotlib"
                ],
                "short": "Create word clouds from text channel content.",
                "tags": [
                    "word",
                    "cloud",
                    "wordcloud"
                ],
                "type": ""
            }
        },
        "short": "Cogs by FlapJack"
    },
    "https://github.com/flaree/Flare-Cogs": {
        "author": [
            "flare (flare#0001)"
        ],
        "description": "Assortment of cogs written by flare.",
        "name": "Flare-Cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "antispam": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Block users who spam commands for a defined period of time..",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Block users who spam commands for a defined period of time.",
                "tags": [
                    "blacklist",
                    "antispam"
                ],
                "type": ""
            },
            "apitools": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Simple GET/POST requests via the bot.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Simple GET/POST requests via the bot.",
                "tags": [
                    "http",
                    "api",
                    "api requests",
                    "get",
                    "post"
                ],
                "type": ""
            },
            "botlistspost": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Post server count to various discord bot lists.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Post server count to various discord bot lists.",
                "tags": [
                    "botlist"
                ],
                "type": ""
            },
            "cashdrop": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Random credits drop, where people can answer questions or pick them up!",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Random credits drop, where people can answer questions or pick them up!",
                "tags": [
                    "maths",
                    "drop",
                    "credits",
                    "questions",
                    "random",
                    "random-drop",
                    "random-credits",
                    "random-questions",
                    "economy"
                ],
                "type": ""
            },
            "commandstats": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Track all commands used globally, guild wise and during the current session.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate",
                    "pandas"
                ],
                "short": "Track all commands used.",
                "tags": [
                    "commandstats"
                ],
                "type": ""
            },
            "covid": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "List stats of Covid-19 (Novel Coronavirus), global or countrywise!",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "validators"
                ],
                "short": "Show Covid-19 (Novel Coronavirus) Statistics.",
                "tags": [
                    "covid",
                    "coronavirus"
                ],
                "type": ""
            },
            "crypto": {
                "author": [
                    "flare(flare#0001)",
                    "Flame",
                    "TrustyJAID"
                ],
                "description": "Buy and sell cryptocurrencies with Red economy.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate"
                ],
                "short": "Buy and sell cyrptocurrencies with Red economy.",
                "tags": [
                    "crypto"
                ],
                "type": ""
            },
            "dankmemer": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "DankMemer's image generation commands.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "validators"
                ],
                "short": "DankMemer image generator.",
                "tags": [
                    "memes",
                    "image gen"
                ],
                "type": ""
            },
            "dminvites": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Respond with the bots invite link if the bot recieves a message containing a server invite.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Respond with the bot invite link when DM'd a server invite link.",
                "tags": [
                    "dminvite",
                    "invites"
                ],
                "type": ""
            },
            "embedcreator": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Create embeds using JSON.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Create embeds using JSON.",
                "tags": [
                    "embed generator",
                    "embeds"
                ],
                "type": ""
            },
            "f1": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "F1 data, races, drivers, constructors etc.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate"
                ],
                "short": "Data related to F1.",
                "tags": [
                    "F1",
                    "formula one",
                    "racing",
                    "forumla",
                    "one"
                ],
                "type": ""
            },
            "faceit": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "List stats of faceit users, game history or specific games and even ongoing games!",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "List stats of faceit users, game history or specific games and even ongoing games!",
                "tags": [
                    "faceit",
                    "csgo",
                    "games"
                ],
                "type": ""
            },
            "forward": {
                "author": [
                    "flare(flare#0001)",
                    "Aikaterna"
                ],
                "description": "Forward messages sent to the bot to the bot owner or in a specified channel.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Forward messages sent to the bot to the bot owner or in a specified channel.",
                "tags": [
                    "forward",
                    "forwarding"
                ],
                "type": ""
            },
            "giveaways": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Giveaway cog with features such duration or end timing, multipliers, role only acces, bank integration etc.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "dateparser"
                ],
                "short": "Giveaway cog with features such duration or end timing, multipliers, role only acces, bank integration etc.",
                "tags": [
                    "giveaway",
                    "giveaways",
                    "raffle"
                ],
                "type": ""
            },
            "highlight": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Highlight certain words to be notified of if said in a certain channel.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate"
                ],
                "short": "Highlight certain words to be notified of if said in a certain channel.",
                "tags": [
                    "highlight"
                ],
                "type": ""
            },
            "joinmessage": {
                "author": [
                    "flare (flare#0001)"
                ],
                "description": "Send a message to a guilds general chat, system channel or first available channel.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Send a message to a guilds general chat, system channel or first available channel.",
                "tags": [
                    "Join Message"
                ],
                "type": ""
            },
            "jsk": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Jishaku ported to Red.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "git+https://github.com/flaree/jishaku"
                ],
                "short": "Jishaku ported to Red.",
                "tags": [
                    "jsk"
                ],
                "type": ""
            },
            "mod": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Core mod with the inclusion of timed role mutes. This cog is no longer supported. Unload and load core mutes.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Mod with timed role mutes.",
                "tags": [
                    "mute",
                    "temp mute",
                    "rolemute"
                ],
                "type": ""
            },
            "news": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Grab breaking headline around the world!",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "validators",
                    "iso8601"
                ],
                "short": "Grab the latest headlines, nationally or globally.",
                "tags": [
                    "news",
                    "information"
                ],
                "type": ""
            },
            "r6": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "List R6 Statistics from seasons, individual operators, all operators and more!",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pillow",
                    "r6statsapi"
                ],
                "short": "Show R6 Statistics.",
                "tags": [
                    "r6",
                    "stats",
                    "operators"
                ],
                "type": ""
            },
            "redditpost": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Reddit Autoposting of new content.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "validators",
                    "tabulate",
                    "asyncpraw"
                ],
                "short": "Reddit Autoposting of new content.",
                "tags": [
                    "reddit",
                    "autoposting"
                ],
                "type": ""
            },
            "serverlock": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Lock the @everyone role from speaking, reacting etc. Will restore previous permissions.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "jsonpickle"
                ],
                "short": "Lock down the @everyone role from speaking.",
                "tags": [
                    "lockdown",
                    "raids",
                    "serverlock"
                ],
                "type": ""
            },
            "simleague": {
                "author": [
                    "flare(flare#0001)",
                    "Stevy"
                ],
                "description": "Simulation League for discord based on reds leveler level.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "leveler": "https://github.com/fixator10/Fixator10-Cogs"
                },
                "requirements": [
                    "tabulate",
                    "motor",
                    "pillow",
                    "validators"
                ],
                "short": "Football simulation league for discord - utilizing leveler as a way to determine performances.",
                "tags": [
                    "sim league"
                ],
                "type": ""
            },
            "snipe": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Snipe command converted to Red, get the last message deleted in a channel.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Snipe the last message deleted in a channel.",
                "tags": [
                    "snipe"
                ],
                "type": ""
            },
            "stickbugged": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Get stickbugged.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "get-stick-bugged-lol"
                ],
                "short": "Get stickbugged.",
                "tags": [
                    "stickbugged"
                ],
                "type": ""
            },
            "threadbumper": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Bump threads to keep them alive forever..",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "3.5.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Bump threads to keep them alive forever.",
                "tags": [
                    "threads",
                    "bump",
                    "thread bumping"
                ],
                "type": ""
            },
            "tips": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Randomly apply a tip message to a bot message randomly.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.4",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Append a message to a bot message.",
                "tags": [
                    "tips"
                ],
                "type": ""
            },
            "trigger": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Allow for the creation of triggers to respond to keywords in messages.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Allow for the creation of triggers to respond to keywords in messages.",
                "tags": [
                    "trigger"
                ],
                "type": ""
            },
            "unbelievaboat": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Unbelievaboat economy commands converted for Red use..",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate"
                ],
                "short": "Unbelievaboat economy commands converted for Red use.",
                "tags": [
                    "economy",
                    "unbelievaboat",
                    "rob",
                    "work"
                ],
                "type": ""
            },
            "userinfo": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Show a users normal userinfo + their badges and shared servers and bank stuff.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Userinfo with user badges and economy details.",
                "tags": [
                    "userinfo"
                ],
                "type": ""
            },
            "voicetracker": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Track the voice chat of yourself or those in your server.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Track the voice chat of yourself or those in your server.",
                "tags": [
                    "voice tracking",
                    "voice chat",
                    "voice",
                    "tracking",
                    "voice chat"
                ],
                "type": ""
            }
        },
        "short": "Assortment of cogs written by flare."
    },
    "https://github.com/flaree/pokecord-red": {
        "author": [
            "flare (flare#0001)"
        ],
        "description": "Pokecord, rewritten to be compatible with Red.",
        "name": "pokecord-red",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "pokecord": {
                "author": [
                    "flare(flare#0001)"
                ],
                "description": "Pokecord for Red.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate",
                    "databases",
                    "databases[sqlite]"
                ],
                "short": "Pokecord for Red.",
                "tags": [
                    "pokemon",
                    "pokecord"
                ],
                "type": ""
            }
        },
        "short": "Pokecord, rewritten for Red."
    },
    "https://github.com/goonstation/gooncogs": {
        "author": [
            "pali (pali#0439)"
        ],
        "description": "Goonstation cogs",
        "name": "gooncogs",
        "rx_branch": "",
        "rx_category": "unapproved",
        "rx_cogs": {
            "betterreports": {
                "author": [
                    "RedBot development team",
                    "pali (pali#0439)"
                ],
                "description": "Fork of built-in Reports module which improves functionality. Lets users send (anonymous or non-anonymous) reports to the server administrators.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "discord-py-slash-command"
                ],
                "short": "Send reports to server administrators.",
                "tags": [
                    "administration",
                    "reports"
                ],
                "type": ""
            },
            "editableposts": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "Lets administrators create and edit posts via the bot. For example for a rules post etc.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Lets administrators create and edit posts via the bot.",
                "tags": [
                    "administration"
                ],
                "type": ""
            },
            "emojieverywhere": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "Keeps track of used emoji and lets people use them using a slash command.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "discord-py-slash-command"
                ],
                "short": "Keeps track of used emoji and lets people use them using a slash command.",
                "tags": [
                    "emoji"
                ],
                "type": ""
            },
            "generalapi": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "TODO",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "uvicorn",
                    "fastapi",
                    "aiofiles"
                ],
                "short": "TODO",
                "tags": [
                    "library",
                    "http",
                    "api"
                ],
                "type": ""
            },
            "githubendpoint": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "TODO",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "TODO",
                "tags": [
                    "github"
                ],
                "type": ""
            },
            "githubstuff": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "Various GitHub-related useful things. TODO better description.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "githubpy",
                    "requests"
                ],
                "short": "Various GitHub-related useful things. TODO better description.",
                "tags": [
                    "git",
                    "github"
                ],
                "type": ""
            },
            "givepoints": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "Let people give points to each other.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Let people give points to each other.",
                "tags": [
                    "fun",
                    "misc"
                ],
                "type": ""
            },
            "goonmisc": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "Stuff specific to Goonstation that didn't fit elsewhere.",
                "disabled": false,
                "end_user_data_statement": "This cog doesn't store anything about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "githubpy",
                    "requests",
                    "pillow",
                    "aiohttp",
                    "cairosvg"
                ],
                "short": "Misc/fun stuff for Goonstation servers.",
                "tags": [
                    "fun",
                    "misc"
                ],
                "type": ""
            },
            "goonservers": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "Cog to store list of Goonstation servers and query their status.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Cog to store list of Goonstation servers and query their status.",
                "tags": [
                    "ss13",
                    "byond"
                ],
                "type": ""
            },
            "inlinecommands": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "Lets people use commands in-line in messages by putting them in square brackets.",
                "disabled": false,
                "end_user_data_statement": "This cog doesn't store anything at all.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Lets people use commands in-line in messages using [command].",
                "tags": [
                    "qol",
                    "commands"
                ],
                "type": ""
            },
            "loudvideos": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "Sends a warning message when a video is too loud.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "youtube_dl"
                ],
                "short": "Sends a warning message when a video is too loud.",
                "tags": [
                    "video"
                ],
                "type": ""
            },
            "mybbnotif": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "TODO",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "TODO",
                "tags": [
                    "forum"
                ],
                "type": ""
            },
            "nightshadewhitelist": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "TODO",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "TODO",
                "tags": [
                    "ss13",
                    "byond"
                ],
                "type": ""
            },
            "norolenoinvite": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "Deletes server invite messages from users without roles.",
                "disabled": false,
                "end_user_data_statement": "This cog doesn't store anything at all.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Deletes invite messages from roleless users.",
                "tags": [
                    "administration"
                ],
                "type": ""
            },
            "pinorder": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "Cog that lets you set some pins to be always on top of the pin list.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Cog that lets you set some pins to be always on top of the pin list.",
                "tags": [
                    "pins"
                ],
                "type": ""
            },
            "rolestuff": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "Role management for Goonstation server. This is pretty much hardcoded and very specific. Don't install this elsewhere please.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Role management for Goonstation server.",
                "tags": [
                    "administration",
                    "roles"
                ],
                "type": ""
            },
            "roundreminder": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "Lets people set reminders for when a next Goonstation round is starting.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Lets people set reminders for when a next Goonstation round is starting.",
                "tags": [
                    "ss13",
                    "reminder"
                ],
                "type": ""
            },
            "spacebeecentcom": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "TODO",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "TODO",
                "tags": [
                    "ss13",
                    "byond"
                ],
                "type": ""
            },
            "spacebeecommands": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "TODO",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "TODO",
                "tags": [
                    "ss13",
                    "byond"
                ],
                "type": ""
            },
            "stopnitroscams": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "Deletes messages and bans users trying to scam people.",
                "disabled": false,
                "end_user_data_statement": "This cog doesn't store anything at all.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Deletes messages and bans users trying to scam people.",
                "tags": [
                    "administration"
                ],
                "type": ""
            },
            "tgs": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "Cog to manage Space Station 13 running on TGS.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "aiohttp"
                ],
                "short": "Cog to manage Space Station 13 running on TGS.",
                "tags": [
                    "ss13",
                    "byond"
                ],
                "type": ""
            },
            "timestamp": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "Lets people generate discord smart timestamps from human readable time description.",
                "disabled": false,
                "end_user_data_statement": "This cog doesn't store anything at all.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "dateparser"
                ],
                "short": "Lets people generate discord smart timestamps from human readable time description.",
                "tags": [
                    "time",
                    "utility"
                ],
                "type": ""
            },
            "wikiss13": {
                "author": [
                    "PhasecoreX (PhasecoreX#0635)",
                    "pali (pali#0439)"
                ],
                "description": "Allows for looking up terms on Goonstation Wiki, and having the results displayed in chat. Fork of https://github.com/PhasecoreX/PCXCogs/tree/master/wikipedia that has been mutilated to work with a different wiki.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "python-dateutil",
                    "Levenshtein"
                ],
                "short": "Look up articles on Goonstation Wiki.",
                "tags": [
                    "utility",
                    "wiki",
                    "ss13"
                ],
                "type": ""
            },
            "wireciendpoint": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "TODO",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "TODO",
                "tags": [
                    "ci"
                ],
                "type": ""
            },
            "worldtopic": {
                "author": [
                    "pali (pali#0439)"
                ],
                "description": "Library cog to send messages to BYOND servers' /world/Topic() procedure.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Library cog to send messages to BYOND servers' /world/Topic() procedure.",
                "tags": [
                    "ss13",
                    "byond",
                    "library"
                ],
                "type": ""
            }
        },
        "short": "gooncogs"
    },
    "https://github.com/grayconcaves/FanCogs": {
        "author": [
            "Chris/Gai (tagape#3232)"
        ],
        "description": "Random selection of fandom cogs, especially for MXTX fans",
        "name": "FanCogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "ao3": {
                "author": [
                    "Chris/Gai"
                ],
                "description": "Pulls Ao3 data and makes it readable for Discord. \n Use [p]ao3 <link> to open the story info card.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    8,
                    0
                ],
                "permissions": [
                    "add_reactions",
                    "manage_messages"
                ],
                "required_cogs": {},
                "requirements": [
                    "bs4"
                ],
                "short": "Use an ao3 link to get its story details!",
                "tags": [
                    "ao3"
                ],
                "type": ""
            },
            "mxtxtags": {
                "author": [
                    "Chris/Gai"
                ],
                "description": "This cog will convert common fandom nicknames for MXTX characters into Ao3's format, which you can then easily paste into Ao3's Character or Relationship tags boxes.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    8,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Convert common fandom nicknames to Ao3 marked pinyin",
                "tags": [
                    "mxtxtags"
                ],
                "type": ""
            },
            "promptgenerator": {
                "author": [
                    "Chris/Gai"
                ],
                "description": "Generate a random prompt to get those creative juices going!",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    8,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Get a random writing/art prompt!",
                "tags": [
                    "promptgen"
                ],
                "type": ""
            },
            "shibe": {
                "author": [
                    "Chris/Gai"
                ],
                "description": "Dedicated to my shiba loving friend <3 Use `[p]shibe` to get a random shiba picture!",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    8,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Get a random shiba pic",
                "tags": [
                    "shiba"
                ],
                "type": ""
            }
        },
        "short": "Random fandom cogs"
    },
    "https://github.com/i-am-zaidali/cray-cogs": {
        "author": [
            "crayyy_zee"
        ],
        "description": "Utility and fun cogs made by crayyy_zee. (Mostly targeted towards a dank memer audience).",
        "name": "cray-cogs",
        "rx_branch": "",
        "rx_category": "unapproved",
        "rx_cogs": {
            "donationlogging": {
                "author": [
                    "crayyy_zee"
                ],
                "description": "Helps server staff to log people donations in an easier way. Allows you to setup a channel to log actions in this cog, setup roles to be auto assigned on a certain donation amount, add donations, reduce donations, reset donations and check yours other's donations.",
                "disabled": false,
                "end_user_data_statement": "This cog stores End User Data when storing the donations of a user. If a user requests data-deletion, all their donations will be removed from the bot.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "emoji"
                ],
                "short": "Record user donations in server",
                "tags": [
                    "donations",
                    "donation",
                    "logging"
                ],
                "type": "COG"
            },
            "giveaways": {
                "author": [
                    "crayyy_zee"
                ],
                "description": "Reaction based giveaways with customisable embeds, reactions, amari bot requirements and much more. ",
                "disabled": false,
                "end_user_data_statement": "This cog stores user ids to link them to their hosted giveaways.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "git+https://github.com/i-am-zaidali/AmariWrapper.git",
                    "dateparser"
                ],
                "short": "Start reaction based giveaways.",
                "tags": [
                    "giveaways",
                    "requirements",
                    "raffles",
                    "raffle",
                    "giveaway",
                    "reactions"
                ],
                "type": "COG"
            },
            "hitormiss": {
                "author": [
                    "crayyy_zee"
                ],
                "description": "A cog based off of discord's snowball bot with many changes (no slash commands tho unfortunately).",
                "disabled": false,
                "end_user_data_statement": "This cog stores End User Data when storing the items of a user. If a user requests data-deletion, all their data will be removed from the bot.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "emoji"
                ],
                "short": "Throw items at other users bought from the shop through the bot's currency.",
                "tags": [
                    "snow",
                    "christmas",
                    "economy",
                    "currency",
                    "shop"
                ],
                "type": "COG"
            },
            "notes": {
                "author": [
                    "crayyy_zee"
                ],
                "description": "Stores notes on users per guild.",
                "disabled": false,
                "end_user_data_statement": "This cog stores user ids to link them to their notes.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "discord-components"
                ],
                "short": "Store notes on users.",
                "tags": [
                    "notes",
                    "note",
                    "utility"
                ],
                "type": "COG"
            },
            "tickchanger": {
                "author": [
                    "crayyy_zee"
                ],
                "description": "Change the emoji that gets reacted with when `ctx.tick()` is called.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store End User Data.",
                "hidden": false,
                "max_bot_version": "3.4.14",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "emoji"
                ],
                "short": "Change `ctx.tick()`'s emoji.",
                "tags": [
                    "tick",
                    "ctx",
                    "emoji",
                    "change",
                    "monkeypatch"
                ],
                "type": "COG"
            },
            "votetracker": {
                "author": [
                    "crayyy_zee"
                ],
                "description": "Track votes recieved on top.gg for your bot.",
                "disabled": false,
                "end_user_data_statement": "This cog stores End User Data when storing the vote count of a user. If a user requests data-deletion, all their data will be removed from the bot.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "topggpy==1.3.0"
                ],
                "short": "Track votes recieved on top.gg for your bot.",
                "tags": [],
                "type": "COG"
            }
        },
        "short": "Badly coded but awesome cogs."
    },
    "https://github.com/jack1142/JackCogs": {
        "author": [
            "jack1142 (Jackenmen#6607)"
        ],
        "description": "Cogs requested by others and those that I wanted for Red myself.",
        "name": "JackCogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "autogist": {
                "author": [
                    "jack1142 (Jackenmen#6607)"
                ],
                "description": "Auto-upload files with configured extension sent by users to gist.github.com.",
                "disabled": false,
                "end_user_data_statement": "This cog auto-uploads attachments to gist.github.com uploaded by users as configured by the guild administrators.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "cachetools~=4.2",
                    "gidgethub~=5.0"
                ],
                "short": "Auto-upload files with configured extension sent by users to gist.github.com.",
                "tags": [
                    "autogist",
                    "github",
                    "tools",
                    "utility"
                ],
                "type": "COG"
            },
            "banmessage": {
                "author": [
                    "jack1142 (Jackenmen#6607)"
                ],
                "description": "Send message on ban in a chosen channel. Supports images!",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Send message on ban in a chosen channel. Supports images!",
                "tags": [
                    "banmessage",
                    "tools",
                    "utility"
                ],
                "type": "COG"
            },
            "categoryhelp": {
                "author": [
                    "jack1142 (Jackenmen#6607)"
                ],
                "description": "Command for getting help for category that ignores case-sensitivity.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Command for getting help for category that ignores case-sensitivity.",
                "tags": [
                    "categoryhelp",
                    "help",
                    "tools",
                    "utility"
                ],
                "type": "COG"
            },
            "emojiinfo": {
                "author": [
                    "jack1142 (Jackenmen#6607)"
                ],
                "description": "Get information about emojis and see how to use them in your code.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "emoji~=1.2"
                ],
                "short": "Get information about emojis and see how to use them in your code.",
                "tags": [
                    "dev",
                    "development",
                    "emojiinfo",
                    "tools",
                    "utility"
                ],
                "type": "COG"
            },
            "linkwarner": {
                "author": [
                    "jack1142 (Jackenmen#6607)"
                ],
                "description": "Remove messages containing links and warn users for it. Comes with settings for excluding roles and including/excluding url domains!",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Remove messages containing links and warn users for it.",
                "tags": [
                    "linkwarner",
                    "moderation",
                    "tools",
                    "utility"
                ],
                "type": "COG"
            },
            "mee6rank": {
                "author": [
                    "jack1142 (Jackenmen#6607)"
                ],
                "description": "Shows detailed information about your Mee6 rank like amount of XP amount of XP and estimated amount of messages needed to reach next level and next level role.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pillow~=8.1"
                ],
                "short": "Get detailed information about your Mee6 rank.",
                "tags": [
                    "api",
                    "leveling",
                    "mee6",
                    "rank",
                    "tools"
                ],
                "type": "COG"
            },
            "membercount": {
                "author": [
                    "jack1142 (Jackenmen#6607)"
                ],
                "description": "Get count of all members + humans and bots separately.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Get count of all members + humans and bots separately.",
                "tags": [
                    "tools",
                    "utility"
                ],
                "type": "COG"
            },
            "modroles": {
                "author": [
                    "jack1142 (Jackenmen#6607)"
                ],
                "description": "Allow moderators without manage roles permission to assign configured roles to users.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Allow moderators without manage roles permission to assign configured roles to users.",
                "tags": [
                    "moderation",
                    "modroles",
                    "roles",
                    "tools",
                    "utility"
                ],
                "type": "COG"
            },
            "nitrorole": {
                "author": [
                    "jack1142 (Jackenmen#6607)"
                ],
                "description": "Welcome new nitro boosters and/or give them a special role!",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.\nDiscord IDs of users may occasionally be logged to file as part of error logging.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Welcome new nitro boosters and/or give them a special role!",
                "tags": [
                    "announce",
                    "booster",
                    "nitro",
                    "nitrorole",
                    "welcome"
                ],
                "type": "COG"
            },
            "qupyter": {
                "author": [
                    "jack1142 (Jackenmen#6607)"
                ],
                "description": "Run IPython kernel within Red and connect to it with Jupyter Console. This is a development tool.\n\nWARNING: This cog is meant for development instances and should NOT ever be used in production environment.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "ipykernel~=5.4",
                    "ipyparallel",
                    "jedi<0.16.0",
                    "tornado>=6.1"
                ],
                "short": "Run IPython kernel within Red and connect to it with Jupyter Console. This is a development tool.",
                "tags": [
                    "dev",
                    "development",
                    "qupyter",
                    "tools",
                    "utility"
                ],
                "type": "COG"
            },
            "rlstats": {
                "author": [
                    "jack1142 (Jackenmen#6607)"
                ],
                "description": "Shows you Rocket League player statistics. The cog needs access to Rocket League API which is currently in closed beta.",
                "disabled": false,
                "end_user_data_statement": "This cog stores data provided by users for the purpose of better user experience.\nIt does not store user data which was not provided through a command.\nUsers may remove their own data without making a data removal request.\nThis cog will remove data when a data removal request is made.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pillow~=8.1",
                    "rlapi==0.5.0a1"
                ],
                "short": "Get your Rocket League stats with a single command! Needs access to Rocket League API which is currently in closed beta.",
                "tags": [
                    "api",
                    "gaming",
                    "rlstats",
                    "rocketleague"
                ],
                "type": "COG"
            },
            "rssnotifier": {
                "author": [
                    "jack1142 (Jackenmen#6607)"
                ],
                "description": "Get role and/or user mentions about feed updates. This cog requires RSS cog from aikaterna-cogs repo to work.",
                "disabled": false,
                "end_user_data_statement": "This cog stores Discord user IDs when the user explicitly opts in receiving mentions about feed updates.\nNo personal identifiable data is stored by this cog.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "rss": "https://github.com/aikaterna/aikaterna-cogs"
                },
                "requirements": [],
                "short": "Get role and/or user mentions about feed updates. This cog requires RSS cog from aikaterna-cogs repo to work.",
                "tags": [
                    "notifications",
                    "rss",
                    "rssnotifier",
                    "tools",
                    "utility"
                ],
                "type": "COG"
            },
            "shell": {
                "author": [
                    "jack1142 (Jackenmen#6607)"
                ],
                "description": "Run shell commands on bot's system from Discord.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Run shell commands on bot's system from Discord.",
                "tags": [
                    "bash",
                    "dev",
                    "development",
                    "shell",
                    "tools",
                    "utility"
                ],
                "type": "COG"
            },
            "voicetools": {
                "author": [
                    "jack1142 (Jackenmen#6607)"
                ],
                "description": "Various tools to make voice channels better!\nAvailable modules:\n- VIP - Set users and roles not counting to user limit on voice channel\n- ForceLimit - Force user limit to all members of the server including admins (kick user when exceeding limit)",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store end user data. This cog does store discord IDs as needed for operation.\nDiscord IDs of users may occasionally be logged to file as part of debug logging.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Various tools to make voice channels better!",
                "tags": [
                    "tools",
                    "utility",
                    "voice",
                    "voicetools"
                ],
                "type": "COG"
            }
        },
        "short": "Cogs for Red V3 by jack1142 (Jackenmen#6607)."
    },
    "https://github.com/kennnyshiwa/kennnyshiwa-cogs": {
        "author": [
            "Kennnyshiwa, Beryju, preda"
        ],
        "description": "A bunch of general purpose cogs for stuff like intel cpu data lookup, space pictures and more.",
        "name": "kennnyshiwa-cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "ark": {
                "author": [
                    "Kennnyshiwa and beryju"
                ],
                "description": "Retrieves info from Intel's ARK database.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    2
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Retrieves info from Intel's ARK database.",
                "tags": [],
                "type": "COG"
            },
            "autogallery": {
                "author": [
                    "kennnyshiwa"
                ],
                "description": "Set channels as galleries where any pictures sent in them get sent into the master gallery channel",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Automatically post pictures into gallery channels!",
                "tags": [
                    "gallery"
                ],
                "type": ""
            },
            "embedinvite": {
                "author": [
                    "Preda",
                    "kennnyshiwa"
                ],
                "description": "Creates a custom invite embed to display the bot invite and support server.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Creates a custom invite embed to display the bot invite and support server.",
                "tags": [
                    "bots"
                ],
                "type": "COG"
            },
            "imperialtoolkit": {
                "author": [
                    "kennnyshiwa"
                ],
                "description": "Various statistics about the bot and the hardware hosting the bot",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.6",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "py-cpuinfo",
                    "psutil"
                ],
                "short": "Botstats command and other useful tools",
                "tags": [
                    "bots"
                ],
                "type": "COG"
            },
            "lastfm": {
                "author": [
                    "Issy",
                    "Kennnyshiwa",
                    "Paddo"
                ],
                "description": "Last.fm playing",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "bs4"
                ],
                "short": "Get currently playing and recently played tracks from Last.fm",
                "tags": [
                    "last.fm",
                    "lastfm",
                    "paddo",
                    "music"
                ],
                "type": ""
            },
            "listemoji": {
                "author": [
                    "kennnyshiwa"
                ],
                "description": "List all of your servers emojis",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "List all of your servers emojis",
                "tags": [
                    "bots",
                    "emojis"
                ],
                "type": "COG"
            },
            "pnw": {
                "author": [
                    "kennnyshiwa"
                ],
                "description": "Information/Stats for Politics and War and the game",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Nation informaiton for PnW",
                "tags": [
                    "bots"
                ],
                "type": "COG"
            },
            "pottermore": {
                "author": [
                    "kennnyshiwa"
                ],
                "description": "Find your hogwarts house and lookup information about Harry Potter characters",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Harry Potter information",
                "tags": [
                    "bots"
                ],
                "type": "COG"
            },
            "requestbox": {
                "author": [
                    "kennnyshiwa",
                    "mikeshardmind (Sinbad)",
                    "Sharky The King"
                ],
                "description": "configureable Request boxes",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "configureable Request boxes",
                "tags": [],
                "type": "COG"
            },
            "screenshare": {
                "author": [
                    "kennnyshiwa"
                ],
                "description": "Generate screenshare links for VC channels",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Generate screenshare links for VC channels",
                "tags": [
                    "bots",
                    "voice",
                    "screenshare"
                ],
                "type": "COG"
            },
            "space": {
                "author": [
                    "kennnyshiwa",
                    "Pred\u00e4"
                ],
                "description": "Displays various pictures and other information about space",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Space information and Pictures",
                "tags": [
                    "bots"
                ],
                "type": "COG"
            },
            "tickets": {
                "author": [
                    "Paddo",
                    "kennnyshiwa"
                ],
                "description": "A ticket system that works with channels",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "A ticket system that works with channels",
                "tags": [
                    "tickets",
                    "paddo",
                    "support",
                    "modding"
                ],
                "type": ""
            },
            "trackerinfo": {
                "author": [
                    "kennnyshiwa"
                ],
                "description": "Displays website and tracker information about various private tracker websites",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Tracker information",
                "tags": [
                    "bots"
                ],
                "type": "COG"
            }
        },
        "short": "General purpose cogs"
    },
    "https://github.com/kreusada/Kreusada-Cogs": {
        "author": [
            "Kreusada"
        ],
        "description": "Cogs by Kreusada for Red-DiscordBot V3.",
        "name": "Kreusada-Cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "advanceduptime": {
                "author": [
                    "Kreusada"
                ],
                "description": "An authentic looking uptime message.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Bot uptime, customised.",
                "tags": [
                    "Uptime"
                ],
                "type": "COG"
            },
            "alphanato": {
                "author": [
                    "Kreusada"
                ],
                "description": "Get the names of the NATO phonetics through easy-to-use syntax.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Get the names of the NATO phonetics through easy-to-use syntax.",
                "tags": [
                    "Alpha",
                    "Bravo",
                    "Charlie",
                    "Alphabet",
                    "NATO",
                    "ABC"
                ],
                "type": "COG"
            },
            "blackformatter": {
                "author": [
                    "Kreusada"
                ],
                "description": "Run black on files with custom line lengths.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "black"
                ],
                "short": "Run black on files with custom line lengths.",
                "tags": [
                    "Black",
                    "Code",
                    "File"
                ],
                "type": "COG"
            },
            "captcha": {
                "author": [
                    "Predeactor",
                    "Kreusada"
                ],
                "description": "Captcha defensive system. Another security layout for your server - originally by Predeactor.",
                "disabled": false,
                "end_user_data_statement": "This cog does not save data about users persistently.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "discapty==0.4"
                ],
                "short": "Captcha defensive system  - originally by Predeactor.",
                "tags": [
                    "security",
                    "protection",
                    "captcha",
                    "defender"
                ],
                "type": ""
            },
            "cogpaths": {
                "author": [
                    "Kreusada"
                ],
                "description": "Get various paths for a cog.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Get various paths for a cog.",
                "tags": [
                    "Paths",
                    "Cogs"
                ],
                "type": "COG"
            },
            "consoleclearer": {
                "author": [
                    "Kreusada"
                ],
                "description": "Clear your red console.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Completely clear your red console.",
                "tags": [
                    "Console",
                    "Clear"
                ],
                "type": "COG"
            },
            "dehoister": {
                "author": [
                    "Kreusada"
                ],
                "description": "Detect hoisted usernames and change their nicknames as a result. A variety of tools to 'protect' your guild from hoisted users. Features include automatic dehoisting of usernames into configured nicknames, scanning against hoisted users, changing all hoisted display names at once, and more.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Detect hoisted usernames and change their nicknames as a result.",
                "tags": [
                    "Hoist",
                    "Nickname"
                ],
                "type": "COG"
            },
            "encryptor": {
                "author": [
                    "Kreusada"
                ],
                "description": "Generate and validify the strength of passwords.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "password-strength"
                ],
                "short": "Generate and validify the strength of passwords.",
                "tags": [
                    "Passwords",
                    "Encryption",
                    "Generators",
                    "Strength"
                ],
                "type": "COG"
            },
            "flags": {
                "author": [
                    "Kreusada"
                ],
                "description": "Get the flag for a country, with information about alpha and numeric codes.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pycountry"
                ],
                "short": "Get the flag for a country, with information about alpha and numeric codes.",
                "tags": [
                    "Flags",
                    "World",
                    "Country",
                    "Countries"
                ],
                "type": "COG"
            },
            "inverter": {
                "author": [
                    "Kreusada"
                ],
                "description": "Invert images and avatars.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "pillow"
                ],
                "short": "Invert images and avatars.",
                "tags": [
                    "Invert",
                    "Images",
                    "PIL",
                    "Avatars"
                ],
                "type": "COG"
            },
            "minifier": {
                "author": [
                    "Kreusada"
                ],
                "description": "Minify python code!",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "python_minifier"
                ],
                "short": "Minify python code.",
                "tags": [
                    "Minifier",
                    "Code",
                    "File"
                ],
                "type": "COG"
            },
            "mjolnir": {
                "author": [
                    "Kreusada",
                    "Jojo"
                ],
                "description": "Attempt to lift Thor's hammer to become the next wielder of Mjolnir",
                "disabled": false,
                "end_user_data_statement": "This cog stores a number based on times lifted via user ids",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.6",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Try to lift Thor's mighty hammer!",
                "tags": [
                    "Fun",
                    "Marvel"
                ],
                "type": "COG"
            },
            "namegenerator": {
                "author": [
                    "Kreusada"
                ],
                "description": "Generate a random name.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "names"
                ],
                "short": "Name generator",
                "tags": [
                    "Name",
                    "Random",
                    "Generator"
                ],
                "type": "COG"
            },
            "onthisday": {
                "author": [
                    "Kreusada"
                ],
                "description": "Find out what happened today, in multiple different years in history.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "dateparser"
                ],
                "short": "Find out what happened today, in multiple different years in history.",
                "tags": [
                    "On This Day",
                    "History",
                    "Year",
                    "Time",
                    "Date"
                ],
                "type": "COG"
            },
            "pinginvoke": {
                "author": [
                    "Kreusada"
                ],
                "description": "Invoke the ping command when calling for your bot.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Invoke your bot.",
                "tags": [
                    "Invoke",
                    "Bot",
                    "Ping"
                ],
                "type": "COG"
            },
            "pingoverride": {
                "author": [
                    "Kreusada"
                ],
                "description": "Override the default ping response with a custom message.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.6",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Custom ping response.",
                "tags": [
                    "Ping",
                    "Pong",
                    "Custom"
                ],
                "type": "COG"
            },
            "pypi": {
                "author": [
                    "Kreusada",
                    "OofChair"
                ],
                "description": "Get information about a package available on PyPi.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Get information about a package available on PyPi.",
                "tags": [
                    "Python",
                    "Modules",
                    "Library",
                    "Libraries",
                    "Index"
                ],
                "type": "COG"
            },
            "qr": {
                "author": [
                    "Kreusada"
                ],
                "description": "[Beta] Generate QR codes.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "qrcode"
                ],
                "short": "[Beta] Generate QR codes.",
                "tags": [
                    "Codes",
                    "Images",
                    "PIL",
                    "Pillow",
                    "QR"
                ],
                "type": "COG"
            },
            "quotes": {
                "author": [
                    "Kreusada"
                ],
                "description": "Get a random quote.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Get a random quote.",
                "tags": [
                    "Quotes",
                    "QOTD"
                ],
                "type": "COG"
            },
            "raffle": {
                "author": [
                    "Kreusada"
                ],
                "description": "[BETA] Create raffles for your guild, customizable with conditional blocks, and constructed using YAML.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "[BETA] Create raffles for your guild, customizable with conditional blocks, and constructed using YAML.",
                "tags": [
                    "Raffle",
                    "Giveaway",
                    "Fun",
                    "Prizes"
                ],
                "type": "COG"
            },
            "replynoping": {
                "author": [
                    "Kreusada"
                ],
                "description": "Sends a message when someone pings you on a reply.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Sends a message when someone pings you on a reply.",
                "tags": [
                    "Reply",
                    "Ping"
                ],
                "type": "COG"
            },
            "roleboards": {
                "author": [
                    "Kreusada"
                ],
                "description": "Get 'leaderboards' about guild roles, such as the users with the most roles, the roles with the most users, and a full list of all the roles.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Get 'leaderboards' about guild roles.",
                "tags": [
                    "Roles",
                    "List",
                    "Users",
                    "Most",
                    "Leaderboards"
                ],
                "type": "COG"
            },
            "rpsls": {
                "author": [
                    "Kreusada"
                ],
                "description": "Play rock, paper, scissors, lizard, spock. For those who are unfamiliar with this game, there is a small diagram here which could be useful: https://static.wikia.nocookie.net/bigbangtheory/images/7/7d/RPSLS.png/revision/latest?cb=20120822205915",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Play rock, paper, scissors, lizard, spock.",
                "tags": [
                    "RPS",
                    "Rock",
                    "Paper",
                    "Scissors",
                    "Lizard",
                    "Spock",
                    "General",
                    "Game",
                    "Fun"
                ],
                "type": "COG"
            },
            "spoilerchannel": {
                "author": [
                    "Kreusada"
                ],
                "description": "Only allow spoilers in certain channels.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Only allow spoilers in certain channels.",
                "tags": [
                    "Spoilers",
                    "Channels"
                ],
                "type": "COG"
            },
            "staff": {
                "author": [
                    "Kreusada"
                ],
                "description": "Alert staff for inconspicuous activity.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Alert the staff.",
                "tags": [
                    "Staff",
                    "Alert",
                    "Moderation"
                ],
                "type": "COG"
            },
            "termino": {
                "author": [
                    "Kreusada",
                    "Jojo#7791"
                ],
                "description": "Customize restart and shutdown messages with your own text, and predicates.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Customize restart and shutdown messages with your own text, and predicates.",
                "tags": [
                    "Shutdown",
                    "Restart",
                    "Custom"
                ],
                "type": "COG"
            },
            "texteditor": {
                "author": [
                    "Kreusada"
                ],
                "description": "Edit and manipulate with text.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Edit text.",
                "tags": [
                    "Text",
                    "Editor",
                    "Format"
                ],
                "type": "COG"
            },
            "timestables": {
                "author": [
                    "Kreusada"
                ],
                "description": "Learn your times tables!",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Times tables.",
                "tags": [
                    "Maths",
                    "Times",
                    "Multiply",
                    "Revision",
                    "School"
                ],
                "type": "COG"
            },
            "timestamps": {
                "author": [
                    "Kreusada"
                ],
                "description": "Produce Discord timestamps.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "dateparser"
                ],
                "short": "Produce Discord timestamps.",
                "tags": [
                    "Timestamps",
                    "Date",
                    "Time"
                ],
                "type": "COG"
            },
            "vinfo": {
                "author": [
                    "Kreusada"
                ],
                "description": "Get version information for third-party cogs, or installed dependencies/modules.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "stdlib_list"
                ],
                "short": "Get version information for third-party cogs, or installed dependencies/modules.",
                "tags": [
                    "Module",
                    "Cog",
                    "Version",
                    "Info"
                ],
                "type": "COG"
            },
            "votechannel": {
                "author": [
                    "Kreusada"
                ],
                "description": "Set multiple channels to have vote reactions.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Voting channel",
                "tags": [
                    "Vote",
                    "Reaction",
                    "Channel"
                ],
                "type": "COG"
            },
            "wordbase": {
                "author": [
                    "Kreusada"
                ],
                "description": "Generate rhymes, use a reverse dictionary, and more word related generators.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Generate rhymes, use a reverse dictionary, and more word related generators.",
                "tags": [
                    "Reverse Dictionary",
                    "Rhyme",
                    "Rhyming",
                    "Consonants",
                    "Homophones",
                    "Triggers"
                ],
                "type": "COG"
            },
            "yamlscanner": {
                "author": [
                    "Kreusada"
                ],
                "description": "An easy and quick tool to validate yaml.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "An easy and quick tool to validate yaml.",
                "tags": [
                    "YAML",
                    "Scanner",
                    "Validator",
                    "File"
                ],
                "type": "COG"
            }
        },
        "short": "Cogs by Kreusada for Red-DiscordBot V3."
    },
    "https://github.com/ltzmax/maxcogs": {
        "author": [
            "MAX"
        ],
        "description": "Cogs for Red-DiscordBot V3.",
        "name": "maxcogs",
        "rx_branch": "",
        "rx_category": "unapproved",
        "rx_cogs": {
            "embeduptime": {
                "author": [
                    "max"
                ],
                "description": "Shows current uptime of the bot.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.6",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Shows current uptime of the bot.",
                "tags": [
                    "uptime"
                ],
                "type": "COG"
            },
            "nekos": {
                "author": [
                    "max"
                ],
                "description": "Cog that sends random neko images from nekos.best",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [
                    "nekosbest==1.1.2"
                ],
                "short": "Random neko images.",
                "tags": [
                    "images",
                    "neko",
                    "nekos"
                ],
                "type": "COG"
            },
            "onconnect": {
                "author": [
                    "max"
                ],
                "description": "On connect is a shard event cog that shows on ready, disconnect and resummed.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.6",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "manage_webhooks"
                ],
                "required_cogs": {},
                "requirements": [
                    "psutil"
                ],
                "short": "This cog is used to send shard events.",
                "tags": [
                    "shard",
                    "reconnect",
                    "disconnect",
                    "on_ready"
                ],
                "type": "COG"
            },
            "statsinfo": {
                "author": [
                    "max"
                ],
                "description": "This will show all current stats total from all guilds your bot is in.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [
                    "tabulate"
                ],
                "short": "Stats cog to show total stats.",
                "tags": [
                    "stats"
                ],
                "type": "COG"
            },
            "veryfun": {
                "author": [
                    "max"
                ],
                "description": "Roleplay cog with alot of fun to have with your members. This is with help of nekos.best.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.6",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Roleplay cog. With help of nekos.best.",
                "tags": [
                    "roleplay"
                ],
                "type": "COG"
            }
        },
        "short": "Cogs for Red-DiscordBot V3."
    },
    "https://github.com/matchatealeaf/matcha-cogs": {
        "author": [
            "MatchaTeaLeaf"
        ],
        "description": "Cogs that mainly focus on scientific and academic purposes.",
        "name": "matcha-cogs",
        "rx_branch": "",
        "rx_category": "unapproved",
        "rx_cogs": {
            "arxivsearch": {
                "author": [
                    "MatchaTeaLeaf"
                ],
                "description": "Search for papers on arXiv with links to .pdf, DOI and authors. Uses arXiv API wrapper by Lukas Schwab.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "arxiv"
                ],
                "short": "Search for papers on arXiv.",
                "tags": [
                    "arxiv",
                    "academic",
                    "science"
                ],
                "type": "COG"
            }
        },
        "short": "Science and academic cogs."
    },
    "https://github.com/nmbook/FalcomBot-cogs": {
        "author": [
            "Ribose#1243"
        ],
        "description": "Useful utilities I created for the Falcom discord, generalized for any Red V3 bots.",
        "name": "FalcomBot-cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "autoban": {
                "author": [
                    "Ribose"
                ],
                "description": "Configurable list of spam words to zap. Users with any roles are ignored.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Configurable list of spam words to zap.",
                "tags": [
                    "spam",
                    "passive",
                    "ban",
                    "autoban",
                    "utilities"
                ],
                "type": ""
            },
            "hiback": {
                "author": [
                    "Ribose"
                ],
                "description": "Responds to \"I'm X\" with \"Hi, X\".",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Responds to \"I'm X\" with \"Hi, X\".",
                "tags": [
                    "dadjokes",
                    "jokes"
                ],
                "type": ""
            },
            "randt": {
                "author": [
                    "Ribose"
                ],
                "description": "Utility commands to randomize things.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Utility randomization commands.",
                "tags": [
                    "randomization",
                    "rng",
                    "utilities"
                ],
                "type": ""
            },
            "rolereqs": {
                "author": [
                    "Ribose"
                ],
                "description": "Allows users to request roles from a list set by the moderators.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Allows users to request roles.",
                "tags": [
                    "roles",
                    "utilities"
                ],
                "type": ""
            },
            "rot13": {
                "author": [
                    "Ribose"
                ],
                "description": "ROT-13 command and allows users to react with :unlock: to ROT-13 quickly.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "ROT-13 command and reaction system.",
                "tags": [
                    "reactions",
                    "rot13",
                    "utilities"
                ],
                "type": ""
            },
            "textt": {
                "author": [
                    "Ribose"
                ],
                "description": "Utility commands to encode and manipulate text.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Utility text commands.",
                "tags": [
                    "text",
                    "encoding",
                    "utilities"
                ],
                "type": ""
            },
            "topic": {
                "author": [
                    "Ribose"
                ],
                "description": "View and edit topic command.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "View and edit topic command.",
                "tags": [
                    "channel",
                    "topic",
                    "utilities"
                ],
                "type": ""
            },
            "wikia": {
                "author": [
                    "Ribose"
                ],
                "description": "Command to request detailed content of FANDOM Wiki pages.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Command to request FANDOM Wiki pages.",
                "tags": [
                    "fandom",
                    "fandomwiki",
                    "wikia",
                    "wiki",
                    "mediawiki",
                    "utilities"
                ],
                "type": ""
            }
        },
        "short": "General utilities for Falcom discord"
    },
    "https://github.com/npc203/npc-cogs": {
        "author": [
            "epic guy#0715"
        ],
        "description": "A simple set of cogs that I wrote for people to enjoy",
        "name": "npc-cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "bible": {
                "author": [
                    "epic guy"
                ],
                "description": "Powered by biblegateway, this cog can get bible verses",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "html2text",
                    "beautifulsoup4"
                ],
                "short": "Pull up biblical verses fast",
                "tags": [
                    "utility",
                    "fun"
                ],
                "type": "COG"
            },
            "customhelp": {
                "author": [
                    "epic guy",
                    "PhenoM4n4n"
                ],
                "description": "This is customisable help, kindly read the readme of this cog, to set it up",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate",
                    "packaging"
                ],
                "short": "A custom help",
                "tags": [
                    "help",
                    "utility",
                    "fun"
                ],
                "type": "COG"
            },
            "google": {
                "author": [
                    "epic guy",
                    "ow0x",
                    "fixator10"
                ],
                "description": "This searches google and fetches results using a custom scraper. The reverse search supports replies as well",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "html2text",
                    "beautifulsoup4"
                ],
                "short": "A google search cog, with rich card results",
                "tags": [
                    "fun",
                    "utility",
                    "internet"
                ],
                "type": "COG"
            },
            "replynoping": {
                "author": [
                    "epic guy"
                ],
                "description": "Cog's meant to jump to message where you are replied with a ping off so that you might not have noticed ",
                "disabled": false,
                "end_user_data_statement": "This cog stores uids for a toggle to notify people of reply ping or not",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Track the people who reply but turned off their ping",
                "tags": [
                    "utility"
                ],
                "type": "COG"
            },
            "snake": {
                "author": [
                    "epic guy"
                ],
                "description": "Ratelimit hell based classic snake game on discord",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "A simple Snake Game on discord",
                "tags": [
                    "games",
                    "fun"
                ],
                "type": "COG"
            },
            "snipe": {
                "author": [
                    "epic guy"
                ],
                "description": "Bulk sniping to stab back those anti-sniping smart ass users",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Multi Snipe for fun and non-profit",
                "tags": [
                    "fun",
                    "utility"
                ],
                "type": "COG"
            },
            "speak": {
                "author": [
                    "epic guy#0715"
                ],
                "description": "Ever wanted to speak as someone else or other bots? or you didn't have the right words to say? This cog speaks for you! or mimics other's identity as well, except that it adds a bot tag. It uses webhooks",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "A cog that speaks for you or speaks what you type as others",
                "tags": [
                    "speak",
                    "tell",
                    "fun"
                ],
                "type": ""
            },
            "todo": {
                "author": [
                    "epic guy#0715"
                ],
                "description": "A simple todo list cog with add remove and list todos",
                "disabled": false,
                "end_user_data_statement": "This cog stores the todos associated with uids",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "A simple todo list",
                "tags": [
                    "utility"
                ],
                "type": "COG"
            },
            "typeracer": {
                "author": [
                    "epic guy#0715"
                ],
                "description": "This cog can be used to check your typing speed, it isnt that accurate cause of ping issues, otherwise it's a decent one",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate"
                ],
                "short": "A fun typing speed test cog",
                "tags": [
                    "utility",
                    "fun",
                    "speedtest"
                ],
                "type": ""
            },
            "weeb": {
                "author": [
                    "epic guy#0715"
                ],
                "description": "a random bunch of emoticons for the otakus",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Bunch of weeb emoticons OwO",
                "tags": [
                    "emoticons",
                    "emojis",
                    "weeb",
                    "fun"
                ],
                "type": ""
            }
        },
        "short": "A decent bunch of cogs aimed for having fun"
    },
    "https://github.com/palmtree5/palmtree5-cogs": {
        "author": [
            "palmtree5"
        ],
        "description": "Cogs created by palmtree5 for varying purposes, some related to Minecraft",
        "name": "palmtree5-cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "banrole": {
                "author": [
                    "palmtree5"
                ],
                "description": "Ban/unban by role. Keeps track of all users banned via `[p]banrole`",
                "disabled": false,
                "end_user_data_statement": "This extension stores a mapping of role ids to a list of banned user ids. This data is necessary for the functionality allowing the unbanning of a previously banned role, but a user id can be removed if the account is deleted or the owner specifically requests the deletion not on behalf of a user.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Ban/unban by role.",
                "tags": [
                    "moderation",
                    "banrole"
                ],
                "type": ""
            },
            "eventmaker": {
                "author": [
                    "palmtree5"
                ],
                "description": "Allows for creating and joining events and provides a notification at the start time",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Event manager utility",
                "tags": [
                    "events",
                    "utilities"
                ],
                "type": ""
            },
            "hpapi": {
                "author": [
                    "palmtree5"
                ],
                "description": "Gets data from the Hypixel API including player stats, guild info, and active boosters",
                "disabled": false,
                "end_user_data_statement": "This extension does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "aiopixel==0.2.15"
                ],
                "short": "Cog for getting info from the Hypixel API",
                "tags": [
                    "minecraft",
                    "utility",
                    "gaming"
                ],
                "type": ""
            },
            "lockdown": {
                "author": [
                    "palmtree5"
                ],
                "description": "Locks down a server using roles to affect users below the lockdown role",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Cog for locking down a server in the event of a raid",
                "tags": [
                    "antiraid",
                    "utility",
                    "lockdown"
                ],
                "type": ""
            },
            "mcsvr": {
                "author": [
                    "palmtree5"
                ],
                "description": "Gets the status of a Minecraft Server (specifically version and player count)",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "mcstatus==4.1.0",
                    "validators"
                ],
                "short": "Cog for getting Minecraft server status",
                "tags": [
                    "minecraft",
                    "utility",
                    "gaming"
                ],
                "type": ""
            },
            "messagepinner": {
                "author": [
                    "palmtree5"
                ],
                "description": "Pins messages containing configured pin trigger text",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Pins messages containing specific text",
                "tags": [
                    "pins",
                    "utility"
                ],
                "type": ""
            },
            "reddit": {
                "author": [
                    "palmtree5"
                ],
                "description": "Gets posts, user info, etc from Reddit's API",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Cog for getting stuff from Reddit",
                "tags": [
                    "reddit",
                    "web",
                    "utility"
                ],
                "type": ""
            },
            "slowmode": {
                "author": [
                    "palmtree5"
                ],
                "description": "Enforces a limit of one message per set time on non-exempt users",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Slow mode in Discord",
                "tags": [
                    "slowmode",
                    "moderation"
                ],
                "type": ""
            },
            "srrecords": {
                "author": [
                    "palmtree5"
                ],
                "description": "Gets world records for the specified game from speedrun.com",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Cog for getting world records for various games",
                "tags": [
                    "speedrun",
                    "gaming"
                ],
                "type": ""
            },
            "tweets": {
                "author": [
                    "palmtree5"
                ],
                "description": "Gets public information from Twitter's api",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "peony-twitter[all]"
                ],
                "short": "Cog for getting info from Twitter",
                "tags": [
                    "twitter",
                    "utility"
                ],
                "type": ""
            }
        },
        "short": "Various cogs"
    },
    "https://github.com/phenom4n4n/phen-cogs": {
        "author": [
            "PhenoM4n4n"
        ],
        "description": "Utility and fun cogs developed by PhenoM4n4n.",
        "name": "phen-cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "aki": {
                "author": [
                    "PhenoM4n4n"
                ],
                "description": "Play Akinator in Discord!",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "akinator.py[fast_async]"
                ],
                "short": "Play Akinator in Discord!",
                "tags": [
                    "fun"
                ],
                "type": "COG"
            },
            "altdentifier": {
                "author": [
                    "PhenoM4n4n"
                ],
                "description": "Check users with AltDentifier API",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "unidecode",
                    "rapidfuzz"
                ],
                "short": "Check users with AltDentifier API",
                "tags": [],
                "type": ""
            },
            "antihonde": {
                "author": [
                    "PhenoM4n4n",
                    "TrustyJAID"
                ],
                "description": "Automatically ban H0nde alts.",
                "disabled": false,
                "end_user_data_statement": "This cog stores a list of every H0nde it bans.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Automatically ban H0nde alts.",
                "tags": [
                    "moderation"
                ],
                "type": "COG"
            },
            "banchart": {
                "author": [
                    "PhenoM4n4n",
                    "Aikaterna"
                ],
                "description": "Display a chart of ban moderators.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Display a chart of ban moderators.",
                "tags": [],
                "type": "COG"
            },
            "baron": {
                "author": [
                    "PhenoM4n4n",
                    "DragDev Studios",
                    "KableKompany"
                ],
                "description": "Tools for managing guild joins and leaves.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "matplotlib"
                ],
                "short": "Tools for managing guild joins and leaves.",
                "tags": [
                    "utility",
                    "guild"
                ],
                "type": "COG"
            },
            "connect4": {
                "author": [
                    "Benjamin Mintz",
                    "flare",
                    "PhenoM4n4n"
                ],
                "description": "Play Connect 4 in Discord!",
                "disabled": false,
                "end_user_data_statement": "This cog stores data on users' wins, losses, and draws per server while playing Connect 4.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Play Connect 4 in Discord!",
                "tags": [
                    "fun"
                ],
                "type": "COG"
            },
            "customping": {
                "author": [
                    "PhenoM4n4n"
                ],
                "description": "Creates a custom ping embed to display latency statistics.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "speedtest-cli"
                ],
                "short": "Creates a custom ping embed to display latency statistics.",
                "tags": [
                    "ping"
                ],
                "type": ""
            },
            "disboardreminder": {
                "author": [
                    "PhenoM4n4n"
                ],
                "description": "Set a reminder to bump on Disboard.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "unidecode",
                    "rapidfuzz",
                    "TagScript"
                ],
                "short": "Set a reminder to bump on Disboard.",
                "tags": [
                    "Disboard",
                    "Reminder"
                ],
                "type": ""
            },
            "embedutils": {
                "author": [
                    "PhenoM4n4n"
                ],
                "description": "Create, post, and store embeds.",
                "disabled": false,
                "end_user_data_statement": "This cog stores End User Data when storing the author of an embed. If a user requests data-deletion, all their embeds will be removed from the bot.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Create, post, and store embeds",
                "tags": [
                    "embed"
                ],
                "type": ""
            },
            "forcemention": {
                "author": [
                    "Bobloy",
                    "PhenoM4n4n"
                ],
                "description": "Mentions roles that are unmentionable",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Mention unmentionables",
                "tags": [
                    "bobloy",
                    "utils"
                ],
                "type": ""
            },
            "linkquoter": {
                "author": [
                    "PhenoM4n4n"
                ],
                "description": "Quote Discord message links.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Quote Discord message links.",
                "tags": [],
                "type": ""
            },
            "lock": {
                "author": [
                    "PhenoM4n4n"
                ],
                "description": "Lock channels or the whole server",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "unidecode",
                    "rapidfuzz"
                ],
                "short": "Lock channels",
                "tags": [
                    "utility",
                    "server"
                ],
                "type": "COG"
            },
            "permissionslocker": {
                "author": [
                    "PhenoM4n4n"
                ],
                "description": "Lock bot commands to a certain permissions set.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Force permissions for the bot.",
                "tags": [
                    "permissions"
                ],
                "type": "COG"
            },
            "petpet": {
                "author": [
                    "PhenoM4n4n"
                ],
                "description": "Make petpet gifs!",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "Pillow"
                ],
                "short": "Make petpet gifs!",
                "tags": [
                    "fun",
                    "image"
                ],
                "type": "COG"
            },
            "pfpimgen": {
                "author": [
                    "PhenoM4n4n"
                ],
                "description": "Make images from avatars!",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "Pillow",
                    "unidecode",
                    "rapidfuzz"
                ],
                "short": "Make images from avatars!",
                "tags": [
                    "image"
                ],
                "type": "COG"
            },
            "phenutils": {
                "author": [
                    "PhenoM4n4n"
                ],
                "description": "Various developer utilities.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Various developer utilities.",
                "tags": [
                    "utility"
                ],
                "type": "COG"
            },
            "plaguegame": {
                "author": [
                    "PhenoM4n4n"
                ],
                "description": "Plague game with a doctor and plaguebearer.",
                "disabled": false,
                "end_user_data_statement": "This cog stores data on users based off their interactions within the game. Examples of such data are their 'health state' (healthy or infected) or their 'game role' (user, doctor, plaguebearer).",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "unidecode",
                    "rapidfuzz"
                ],
                "short": "Infect users with the plague!",
                "tags": [
                    "fun",
                    "plague"
                ],
                "type": ""
            },
            "prefix": {
                "author": [
                    "PhenoM4n4n"
                ],
                "description": "Manage guild prefixes more extensively.",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Manage guild prefixes.",
                "tags": [
                    "server",
                    "prefix"
                ],
                "type": ""
            },
            "ratings": {
                "author": [
                    "PhenoM4n4n"
                ],
                "description": "Rate yourself on many things.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Find out how (simp/sane/smart) you are.",
                "tags": [],
                "type": "COG"
            },
            "roleutils": {
                "author": [
                    "PhenoM4n4n",
                    "Bobloy",
                    "TrustyJaid",
                    "Neuro Assassin"
                ],
                "description": "Reaction roles, massroling, and role targeting!.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "unidecode",
                    "rapidfuzz",
                    "TagScript"
                ],
                "short": "Reaction roles, massroling, and role targeting!.",
                "tags": [
                    "utility",
                    "server",
                    "roles"
                ],
                "type": "COG"
            },
            "simplecalculator": {
                "author": [
                    "PhenoM4n4n"
                ],
                "description": "Calculate stuff",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any End User Data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "TagScript"
                ],
                "short": "Calculate stuff",
                "tags": [
                    "utility",
                    "calculator"
                ],
                "type": ""
            },
            "slashtags": {
                "author": [
                    "PhenoM4n4n"
                ],
                "description": "Create custom slash commands.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.6",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "TagScript==2.6.2",
                    "tabulate"
                ],
                "short": "Create custom slash commands.",
                "tags": [
                    "tags",
                    "slashcommands"
                ],
                "type": "COG"
            },
            "tags": {
                "author": [
                    "PhenoM4n4n",
                    "sravan",
                    "npc203"
                ],
                "description": "Create and use tags.",
                "disabled": false,
                "end_user_data_statement": "This cog stores End User Data when storing the author of a tag. If a user requests data-deletion, all their tags will be removed from the bot.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "TagScript==2.6.2",
                    "tabulate",
                    "rapidfuzz"
                ],
                "short": "Create and use tags.",
                "tags": [
                    "tags"
                ],
                "type": "COG"
            },
            "typeracer": {
                "author": [
                    "Cats3153",
                    "PhenoM4n4n"
                ],
                "description": "Race to see who can type the fastest!",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "Pillow"
                ],
                "short": "Race to see who can type the fastest!",
                "tags": [
                    "fun",
                    "game",
                    "type"
                ],
                "type": "COG"
            },
            "webhook": {
                "author": [
                    "PhenoM4n4n"
                ],
                "description": "Various webhook commands to create and send messages along webhooks.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.3.10",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Webhook related commands.",
                "tags": [
                    "webhook"
                ],
                "type": "COG"
            }
        },
        "short": "General bot cogs."
    },
    "https://github.com/retke/Laggrons-Dumb-Cogs": {
        "author": [
            "El Laggron"
        ],
        "description": "A buch of utility and quality cogs that brings unique features for your server. Made by Laggron.",
        "name": "Laggrons-Dumb-Cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "codmw": {
                "author": [
                    "retke (El Laggron)"
                ],
                "description": "Display statistics about your Call of Duty account, including recent matches.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "git+https://github.com/retke/laggron-utils"
                ],
                "short": "Call of Duty MW stats.",
                "tags": [
                    "modernwarfare",
                    "callofduty",
                    "cod"
                ],
                "type": ""
            },
            "instantcmd": {
                "author": [
                    "retke (El Laggron)"
                ],
                "description": "Command and listener maker from a code snippet through Discord",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "git+https://github.com/retke/laggron-utils"
                ],
                "short": "Instant command maker",
                "tags": [
                    "command",
                    "listener",
                    "code"
                ],
                "type": ""
            },
            "roleinvite": {
                "author": [
                    "retke (El Laggron)"
                ],
                "description": "Autorole based on the invite the user used.\nIf the user joined using invite x, he will get a list of roles linked to invite x.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "git+https://github.com/retke/laggron-utils"
                ],
                "short": "Autorole based on server's invites",
                "tags": [
                    "autorole",
                    "role",
                    "join",
                    "invite"
                ],
                "type": ""
            },
            "say": {
                "author": [
                    "retke (El Laggron)"
                ],
                "description": "Speak as the bot through multiple options.\nAllow file upload, rift in DM and specific destinations.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "git+https://github.com/retke/laggron-utils"
                ],
                "short": "Speak as the bot through multiple options.",
                "tags": [
                    "rift",
                    "upload",
                    "interact"
                ],
                "type": ""
            },
            "tournaments": {
                "author": [
                    "retke (El Laggron)",
                    "Wonderfall",
                    "Xyleff"
                ],
                "description": "Create and manage huge tournaments in your server!\nWorking with Challonge (and more to come), players will be able to join without any account and play on Discord. They have private channels for their matches, commands for reporting their scores, and the tournament organizers have a lot of tools for managing the tournament.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "git+https://github.com/retke/Laggron-utils.git",
                    "apychal==1.11.0",
                    "aiofiles"
                ],
                "short": "Tools for managing your tournaments on Discord.",
                "tags": [
                    "tournament",
                    "challonge",
                    "smash.gg",
                    "game",
                    "smash"
                ],
                "type": ""
            },
            "warnsystem": {
                "author": [
                    "retke (El Laggron)"
                ],
                "description": "An alternative to the core moderation cog, similar to Dyno.\nThe cog allows you to take actions against member and keep track with a new modlog system. It also sends a DM to the warned members.\n\nThis is the rewrite of the V2 BetterMod cog. **Note that this cog conflicts with Warnings which must be unloaded.**",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "python-dateutil",
                    "git+https://github.com/retke/Laggron-utils.git"
                ],
                "short": "Moderation tools, providing an alternative to core Red.",
                "tags": [
                    "warn",
                    "warning",
                    "bettermod",
                    "punish",
                    "modlog"
                ],
                "type": ""
            }
        },
        "short": "Utility cogs for your server."
    },
    "https://github.com/siu3334/owo-cogs": {
        "author": [
            "ow0x (<@306810730055729152>)"
        ],
        "description": "Some fun and useful utility cogs for Red Discord Bot",
        "name": "owo-cogs",
        "rx_branch": "",
        "rx_category": "unapproved",
        "rx_cogs": {
            "badgetools": {
                "author": [
                    "ow0x"
                ],
                "description": "Various tools to show stats about your server's user profile badges.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Various tools to show stats about your server's user profile badges.",
                "tags": [
                    "badgetools",
                    "badges",
                    "badgecount",
                    "boosters"
                ],
                "type": "COG"
            },
            "country": {
                "author": [
                    "ow0x"
                ],
                "description": "Fetch some basic trivia & information about a country.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Fetch some basic info about a country.",
                "tags": [
                    "country",
                    "countries"
                ],
                "type": "COG"
            },
            "ipdata": {
                "author": [
                    "ow0x"
                ],
                "description": "This cog returns various info about any valid public IP address.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "IP Geolocation and Proxy Detection.",
                "tags": [
                    "ip",
                    "whois",
                    "ipdata"
                ],
                "type": "COG"
            },
            "jsk": {
                "author": [
                    "Gorialis"
                ],
                "description": "Jishaku v2.3.2, a debugging and testing cog for discord.py rewrite bots, ported for Red.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.12",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "git+https://github.com/ow0x/jishaku"
                ],
                "short": "Jishaku v2.3.2 ported for Red-DiscordBot.",
                "tags": [
                    "jishaku",
                    "jsk"
                ],
                "type": "COG"
            },
            "kickstarter": {
                "author": [
                    "ow0x (<@306810730055729152>)",
                    "dragonfire535"
                ],
                "description": "Search for your query to fetch info on a Kickstarter project.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any PII data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.14",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Search for and get info on a Kickstarter project.",
                "tags": [
                    "kickstarter"
                ],
                "type": "COG"
            },
            "manim": {
                "author": [
                    "The Manim Community Developers",
                    "ow0x"
                ],
                "description": "Render mathematical animations with Manim animation engine.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.8",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "docker"
                ],
                "short": "Render mathematical animations with Manim.",
                "tags": [
                    "manim",
                    "manimate"
                ],
                "type": "COG"
            },
            "maps": {
                "author": [
                    "siu3334"
                ],
                "description": "Fetch a Google map of a specific location in various modes.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Fetch a Google map of a specific location.",
                "tags": [
                    "maps",
                    "map",
                    "google map",
                    "google maps"
                ],
                "type": "COG"
            },
            "moviedb": {
                "author": [
                    "ow0x"
                ],
                "description": "Fetch various info about a movie or TV series from The Movie DB API.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.12",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Fetch various info about a movie or TV series.",
                "tags": [
                    "movie",
                    "tv series",
                    "tv show",
                    "themoviedb",
                    "imdb"
                ],
                "type": "COG"
            },
            "ocr": {
                "author": [
                    "ow0x",
                    "TrustyJAID"
                ],
                "description": "Detect text in images through OCR.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.12",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Detect text in images through OCR.",
                "tags": [
                    "ocr",
                    "image to text"
                ],
                "type": "COG"
            },
            "phonefinder": {
                "author": [
                    "ow0x"
                ],
                "description": "Fetch various info about a smartphone from GSMArena.com",
                "disabled": false,
                "end_user_data_statement": "This cog does not store any PII data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.8",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "aiocache",
                    "beautifulsoup4",
                    "msgpack"
                ],
                "short": "Fetch various info about a smartphone from GSMArena.com",
                "tags": [
                    "smartphone",
                    "gsmarena",
                    "phone specs",
                    "phone lookup",
                    "phone finder"
                ],
                "type": "COG"
            },
            "pokebase": {
                "author": [
                    "ow0x (<@306810730055729152>)",
                    "phalt"
                ],
                "description": "Fetch various info about a Pok\u00e9mon and some fun commands.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.8",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "aiocache",
                    "beautifulsoup4",
                    "jmespath",
                    "msgpack",
                    "pillow",
                    "ujson"
                ],
                "short": "Your personal Pok\u00e9dex with fun games/commands.",
                "tags": [
                    "pokemon",
                    "pokedex",
                    "pokebase",
                    "pokeapi",
                    "whosthatpokemon",
                    "pokemontcg",
                    "pokemon card game",
                    "pokemon card",
                    "trainer card",
                    "pokemon trainer card",
                    "pokecord"
                ],
                "type": "COG"
            },
            "redditinfo": {
                "author": [
                    "ow0x (<@306810730055729152>)"
                ],
                "description": "Fetch hot meme or basic info about Reddit user accounts and subreddits.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any PII data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.14",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Fetch hot meme or basic info about Reddit user accounts and subreddits.",
                "tags": [
                    "meme",
                    "hot meme",
                    "auto meme",
                    "auto post meme",
                    "meme autopost",
                    "reddit meme",
                    "reddit",
                    "redditinfo",
                    "subreddit"
                ],
                "type": "COG"
            },
            "roleplay": {
                "author": [
                    "ow0x"
                ],
                "description": "Roleplay with friends (or strangers) on Discord with count stats, (hug, pat, nom, cry and 12+ more commands).",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any PII data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.12",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate"
                ],
                "short": "Roleplay with friends on Discord with count stats.",
                "tags": [
                    "baka",
                    "bully",
                    "cry",
                    "cuddle",
                    "feed",
                    "highfive",
                    "hug",
                    "kill",
                    "kiss",
                    "lick",
                    "nom",
                    "pat",
                    "poke",
                    "punch",
                    "slap",
                    "smug",
                    "tickle",
                    "roleplay"
                ],
                "type": "COG"
            },
            "steamcog": {
                "author": [
                    "ow0x"
                ],
                "description": "Fetch various useful info about a Steam game all from the comfort of your Discord home.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.12",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "html2text"
                ],
                "short": "Fetch various useful info about a Steam game.",
                "tags": [
                    "steam",
                    "steamcog"
                ],
                "type": "COG"
            },
            "vocadb": {
                "author": [
                    "siu3334"
                ],
                "description": "Search for a song on Vocaloid Database.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Search for a song on VocaDB.",
                "tags": [
                    "vocadb",
                    "vocaloid"
                ],
                "type": "COG"
            },
            "yugioh": {
                "author": [
                    "ow0x",
                    "dragonfire535"
                ],
                "description": "Fetch some info on a Yu-Gi-Oh! card.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any PII data about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.14",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Fetch some info on a Yu-Gi-Oh! card.",
                "tags": [
                    "ygo",
                    "ygo card",
                    "yu gi oh",
                    "yugioh"
                ],
                "type": "COG"
            }
        },
        "short": "Some fun and useful utility cogs for Red Discord Bot"
    },
    "https://github.com/skeith/MayuYukirin": {
        "author": [
            "Yukirin (Yukirin#0048)"
        ],
        "description": "48G/46G related cogs and miscellaneous..",
        "name": "MayuYukirin",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "animal": {
                "author": [
                    "Eslyium (Eslyium#1949)",
                    "Yukirin (Yukirin#0048)"
                ],
                "description": "Post animal pics from API sites",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Post animal pics",
                "tags": [
                    "animal",
                    "image",
                    "picture",
                    "cat",
                    "dog",
                    "fox",
                    "pug"
                ],
                "type": ""
            },
            "avatar": {
                "author": [
                    "Yukirin (Yukirin#0048)"
                ],
                "description": "Simply return user's avatar url",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Get user's Avatar URL",
                "tags": [
                    "avatar",
                    "Utility"
                ],
                "type": ""
            },
            "doujin": {
                "author": [
                    "Eslyium (Eslyium#1949)",
                    "Yukirin (Yukirin#0048)"
                ],
                "description": "Post random doujin (NSFW) from selected site",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Post random doujin (NSFW)",
                "tags": [
                    "nsfw",
                    "doujin",
                    "image"
                ],
                "type": ""
            },
            "pda": {
                "author": [
                    "Yukirin (Yukirin#0048)"
                ],
                "description": "Show your affection to other member. Current version only allow you to pat other member",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    6,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Show your affection to other member",
                "tags": [
                    "love",
                    "affection",
                    "pat"
                ],
                "type": ""
            }
        },
        "short": "48G/46G related cogs and miscellaneous."
    },
    "https://github.com/synrg/dronefly": {
        "author": [
            "SyntheticBee"
        ],
        "description": "Red V3 Cogs for naturalists by SyntheticBee",
        "name": "dronefly",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "ebirdcog": {
                "author": [
                    "SyntheticBee"
                ],
                "description": "Commands using the eBird API 2.0 (https://api.ebird.org/v2).",
                "disabled": false,
                "end_user_data_statement": "This cog does not store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.1",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "ebird-api"
                ],
                "short": "Commands using the eBird API 2.0.",
                "tags": [
                    "ebird",
                    "bird",
                    "birder",
                    "naturalist",
                    "nature"
                ],
                "type": ""
            },
            "inatcog": {
                "author": [
                    "SyntheticBee"
                ],
                "description": "Commands using the iNat API v1 (https://api.inaturalist.org/v1).",
                "disabled": false,
                "end_user_data_statement": "This cog stores user ids linked to corresponding external API user ids for the purpose of fetching their information from the API, and user preferences for the cog.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.6",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "dataclasses-json",
                    "html2markdown",
                    "inflect",
                    "timeago",
                    "aiolimiter",
                    "aiohttp-retry",
                    "pyinaturalist",
                    "dateparser"
                ],
                "short": "Commands using the iNat API v1.",
                "tags": [
                    "inaturalist",
                    "naturalist",
                    "nature"
                ],
                "type": ""
            }
        },
        "short": "Red V3 Cogs for naturalists by SyntheticBee"
    },
    "https://github.com/tekulvw/Squid-Plugins@V3": {
        "author": [
            "Will (tekulvw)"
        ],
        "description": "Squid Plugins for Red v3",
        "name": "Squid-Plugins",
        "rx_branch": "V3",
        "rx_category": "unapproved",
        "rx_cogs": {
            "bankvampire": {
                "author": [
                    "Will (tekulvw)"
                ],
                "description": "No credits are safe from the bankvampires.",
                "disabled": false,
                "end_user_data_statement": "This cog stores discord IDs as needed for operation.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "No credits are safe from the bankvampires.",
                "tags": [
                    "vampires",
                    "bank",
                    "credits"
                ],
                "type": "COG"
            },
            "karma": {
                "author": [
                    "Will (tekulvw)",
                    "aikaterna"
                ],
                "description": "Award people with karma points using ++ or --.\n\nExample: @\u200bWill ++",
                "disabled": false,
                "end_user_data_statement": "This cog stores discord IDs as needed for operation.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate"
                ],
                "short": "Award people with karma points.",
                "tags": [
                    "karma",
                    "points",
                    "rep"
                ],
                "type": "COG"
            },
            "logger": {
                "author": [
                    "tekulvw"
                ],
                "description": "Utility to manage python logger levels.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate"
                ],
                "short": "",
                "tags": [
                    "utility",
                    "log",
                    "logger"
                ],
                "type": ""
            },
            "quotes": {
                "author": [
                    "Will (tekulvw)",
                    "aikaterna"
                ],
                "description": "Save quotes and read them later",
                "disabled": false,
                "end_user_data_statement": "This cog may store information about a user for the purposes of relaying quotes. This data cannot be tracked for deletion and this cog will not remove content if requested.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Save quotes and read them later",
                "tags": [
                    "quotes",
                    "quote"
                ],
                "type": "COG"
            }
        },
        "short": "Growing collection of useful plugins"
    },
    "https://github.com/thedataleek/eris-cogs": {
        "author": [
            "Eris"
        ],
        "description": "Thanks for adding my repo! I hope you enjoy what's here, please don't hesitate to reach out on my [github](https://github.com/TheDataLeek/Eris-Cogs) or [discord](http://discord.gg/ee3NyDq) if you run into issues!",
        "name": "eris-cogs",
        "rx_branch": "",
        "rx_category": "unapproved",
        "rx_cogs": {
            "alot": {
                "author": [
                    "Eris"
                ],
                "description": "Automatically posts an alot whenever a user says 'alot of things' instead of 'a lot of things'",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
                },
                "requirements": [],
                "short": "Posts an alot",
                "tags": [],
                "type": ""
            },
            "autoreact": {
                "author": [
                    "Eris"
                ],
                "description": "Auto reacts to posts. Similar to wiggly",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Adds reactions to posts!",
                "tags": [],
                "type": ""
            },
            "battle": {
                "author": [
                    "Eris"
                ],
                "description": "Battle with your users\nUsages:\n[p]attack <member> - Starts a battle\n[p]protect <member>\n[p]status <member> - Displays user's stats\n[p]set_attribute <member> <attribute> <value> - Sets a user's stat. Requires owner permissions.\n[p]elevate <member> - Levels up a user. Requires owner permissions.\n[p]full_heal_user <member> - Fully heals a user. Requires owner permissions.\n[p]heal_user <member> - Heals a user. Requires owner permissions.\n[p]reload_user <member> - Reloads a user's stats. Requires owner permissions.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Battle with your users",
                "tags": [],
                "type": ""
            },
            "big_name": {
                "author": [
                    "Eris",
                    "Maddie"
                ],
                "description": "Change someone's name - who cares about permissions. Usage: `[p]big_name [User] [new name]`",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Change a user's name regardless of permissions",
                "tags": [],
                "type": ""
            },
            "big_text": {
                "author": [
                    "Maddie"
                ],
                "description": "Usage: [p]big_text [ASCII message]",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Make your message big and emoji-fied",
                "tags": [],
                "type": ""
            },
            "clone": {
                "author": [
                    "Eris",
                    "Maddie"
                ],
                "description": "The bot takes on a specified user's name and avatar. Users take 1d10 confusion damage, half as much on a successful save. Usage: [p]clone [User]",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "The bot takes on a user's name and avatar",
                "tags": [],
                "type": ""
            },
            "dice": {
                "author": [
                    "Eris"
                ],
                "description": "Improved dice roller, can support arbitrary dice. Usage regex: [p]dice #d#(v#)?",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Improved dice roller.",
                "tags": [],
                "type": ""
            },
            "dm_role": {
                "author": [
                    "Eris"
                ],
                "description": "DMs everyone with a specific role based on fuzzy role name",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "fuzzywuzzy"
                ],
                "short": "DM everyone with certain role",
                "tags": [],
                "type": ""
            },
            "event_config": {
                "author": [
                    "Eris"
                ],
                "description": "Configure `on_message` events, specifically which servers they appear in, which channels, etc. for Eris Cogs. By default, global events are on, guild-events are off. You'll need to run `[p]econf enable` in the guild you want events to run in.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Configure `on_message` events",
                "tags": [],
                "type": ""
            },
            "events": {
                "author": [
                    "Eris"
                ],
                "description": "A bunch of silly events",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
                },
                "requirements": [],
                "short": "Silly bot behavior not activated by explicit commands",
                "tags": [],
                "type": ""
            },
            "export_emoji": {
                "author": [
                    "Eris"
                ],
                "description": "Bulk exports emoji for slack",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "aiohttp"
                ],
                "short": "Bulk Emoji Export",
                "tags": [],
                "type": ""
            },
            "facts": {
                "author": [
                    "Eris"
                ],
                "description": "Provides bear or snake facts based on user input or randomly.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Provide random facts",
                "tags": [],
                "type": ""
            },
            "fires": {
                "author": [
                    "Eris"
                ],
                "description": "Show US Firemap",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "US Firemap",
                "tags": [],
                "type": ""
            },
            "goodbot": {
                "author": [
                    "Eris"
                ],
                "description": "Good Bot Emoji Tracker - tracks all emoji reactions (that the bot has access to) for all users in your server! Upon reaching a vote-threshold, replies to the original message and compliments the user!",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "whois": "http://github.com/TheDataLeek/Eris-Cogs"
                },
                "requirements": [],
                "short": "Good Bot Emoji Tracker",
                "tags": [],
                "type": ""
            },
            "grammar": {
                "author": [
                    "Eris"
                ],
                "description": "Grammar Module - insult your illiterate friends.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Checks grammar of your users - load at your own risk",
                "tags": [],
                "type": ""
            },
            "haiku": {
                "author": [
                    "Eris"
                ],
                "description": "Determines haikus!",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
                },
                "requirements": [
                    "nltk",
                    "syllables"
                ],
                "short": "Haiku",
                "tags": [],
                "type": ""
            },
            "hotel_california": {
                "author": [
                    "Eris"
                ],
                "description": "Role based \"punishment\". Allows users to punish via assigning roles.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Role-based \"punishment\" for infractions on moderator whim.",
                "tags": [],
                "type": ""
            },
            "im_dad": {
                "author": [
                    "Eris"
                ],
                "description": "Replies with Hi _ I'm Dad when someone says that they're _",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
                },
                "requirements": [],
                "short": "Replies Hi _ I'm Dad",
                "tags": [],
                "type": ""
            },
            "imdb_lookup": {
                "author": [
                    "Eris"
                ],
                "description": "IMDB Lookup",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "imdbpy"
                ],
                "short": "IMDB",
                "tags": [],
                "type": ""
            },
            "insult": {
                "author": [
                    "Eris"
                ],
                "description": "Insults users via tagging.\nUsage: `[p]insult user`\n Includes NSFW insults",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "aiohttp"
                ],
                "short": "Insult users",
                "tags": [],
                "type": ""
            },
            "isnt_december_the_best": {
                "author": [
                    "Eris"
                ],
                "description": "Isn't december the best",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Isn't December the Best",
                "tags": [],
                "type": ""
            },
            "just_met_her": {
                "author": [
                    "Eris"
                ],
                "description": "Replies with '_______________, I just met her!'",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
                },
                "requirements": [],
                "short": "Just Met Her",
                "tags": [],
                "type": ""
            },
            "lifslastcall": {
                "author": [
                    "Eris"
                ],
                "description": "Lifs Last Call flowchart",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Lif's",
                "tags": [],
                "type": ""
            },
            "minesweeper": {
                "author": [
                    "Eris"
                ],
                "description": "Generates guaranteed solvable minesweeper boards using emojis and spoilers.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Generate solvable minesweeper boards.",
                "tags": [],
                "type": ""
            },
            "move": {
                "author": [
                    "Eris"
                ],
                "description": "Moves message to another channel for easy moderation.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Move message to another channel",
                "tags": [],
                "type": ""
            },
            "nick_prefix": {
                "author": [
                    "Eris"
                ],
                "description": "Theme your nickname, some include NSFW language and themes.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Adds themed prefix to names",
                "tags": [],
                "type": ""
            },
            "no_fuck_you": {
                "author": [
                    "Eris"
                ],
                "description": "Replies with 'no fuck you' if someone says 'fuck you'",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
                },
                "requirements": [],
                "short": "Replies 'no fuck you'",
                "tags": [],
                "type": ""
            },
            "notify": {
                "author": [
                    "Eris"
                ],
                "description": "Twilio Notifications for @everyone tags",
                "disabled": true,
                "end_user_data_statement": "",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "",
                "tags": [],
                "type": ""
            },
            "out_of_context": {
                "author": [
                    "Eris"
                ],
                "description": "Archives a channel of out of context quotes. Posts quotes randomly or in response to commands. Quotes must be in quotation marks to be archived. Usage: [p]penny",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
                },
                "requirements": [],
                "short": "Archives a channel of out of context quotes and then posts them randomly during conversation.",
                "tags": [],
                "type": ""
            },
            "quotes": {
                "author": [
                    "Eris"
                ],
                "description": "Generates fun short stories between users. Usage: `[p]quote users` - all credit to https://incorrect-quotes-generator.neocities.org/",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "whois": "http://github.com/TheDataLeek/Eris-Cogs"
                },
                "requirements": [],
                "short": "Incorrect Quotes by ScatterPatter",
                "tags": [],
                "type": ""
            },
            "rock_and_stone": {
                "author": [
                    "Eris"
                ],
                "description": "Shouts various rock and stone quotes from Deep Rock Galactic",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
                },
                "requirements": [],
                "short": "Deep Rock Galactic shouting",
                "tags": [],
                "type": ""
            },
            "rolerequest": {
                "author": [
                    "Eris"
                ],
                "description": "Emoji-based role request for user roles.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Emoji-based Role Request",
                "tags": [],
                "type": ""
            },
            "sarcasm": {
                "author": [
                    "Eris"
                ],
                "description": "Sarcasm Module - randomly mocks users",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
                },
                "requirements": [],
                "short": "Randomly mocks users",
                "tags": [],
                "type": ""
            },
            "say": {
                "author": [
                    "Eris"
                ],
                "description": "Users with mod status can command the bot to say anything in a certain channel.\nUsage `[p]say guild channel ...message`",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "fuzzywuzzy"
                ],
                "short": "Send messages as the bot",
                "tags": [],
                "type": ""
            },
            "search": {
                "author": [
                    "Eris"
                ],
                "description": "Search the internet for useful info. Currently only wikipedia supported.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "aiohttp"
                ],
                "short": "Search the internet!",
                "tags": [],
                "type": ""
            },
            "spoop": {
                "author": [
                    "Eris"
                ],
                "description": "Sneakily spoops a user randomly or on mod prompting. NSFW spoops!",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "event_config": "http://github.com/TheDataLeek/Eris-Cogs",
                    "whois": "http://github.com/TheDataLeek/Eris-Cogs"
                },
                "requirements": [],
                "short": "Sneakily spoops users",
                "tags": [],
                "type": ""
            },
            "steve": {
                "author": [
                    "Eris"
                ],
                "description": "If users ask variations on \"Where's Steve?\" the bot will post several LARGE pictures of steve. Small chance for these photos to be in a random order.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
                },
                "requirements": [],
                "short": "Provides LARGE pictures of Steve when asked",
                "tags": [],
                "type": ""
            },
            "stonks": {
                "author": [
                    "Eris"
                ],
                "description": "Displays current and historical stock information using the yahoo finance API",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "yfinance",
                    "mplfinance",
                    "matplotlib"
                ],
                "short": "A stock tracker using yahoofinance",
                "tags": [],
                "type": ""
            },
            "sudo": {
                "author": [
                    "Eris"
                ],
                "description": "Replies in a channel if someone tries to use sudo - i.e. just uses the letters 'sudo'",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
                },
                "requirements": [],
                "short": "Warns when users say sudo",
                "tags": [],
                "type": ""
            },
            "suggestion": {
                "author": [
                    "Eris"
                ],
                "description": "Suggest a change, provides ez access urls",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Suggest",
                "tags": [],
                "type": ""
            },
            "timezone": {
                "author": [
                    "Eris"
                ],
                "description": "Timezone converter! Switch between multiple US timezones easily",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "fuzzywuzzy",
                    "aiohttp",
                    "pytz"
                ],
                "short": "US Timezone converter",
                "tags": [],
                "type": ""
            },
            "venmo": {
                "author": [
                    "Eris"
                ],
                "description": "Posts my cashapp link",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
                },
                "requirements": [],
                "short": "Venmo Replacement",
                "tags": [],
                "type": ""
            },
            "weave": {
                "author": [
                    "Eris",
                    "Maddie"
                ],
                "description": "Create a mosaic of alternating specified emoji. Emojis may be animated or still. Usage: [p]weave emoji emoji width=5 height=3",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Create a mosaic of alternating emoji",
                "tags": [],
                "type": ""
            },
            "whois": {
                "author": [
                    "Eris"
                ],
                "description": "Whois for server members. Set, update, and look up names to keep track of who is who. \nUsages: \n`[p]avatar member` - Posts a full resolution image of a specified user's profile picture\n`[p]emoji emoji` - Posts a full resolution image of a specified emoji\n`[p]whois member` - Look up name\n`[p]theyare member name` - Set name \n`[p]iswho name` - Look up a username given their whois name \n`[p]iseveryone` - Lists all members of the server (without pinging!) and their whois names\n`[p]import_whois` - privileged users can export a whois database. File to import should be attached to the command message.\n`[p]export_whois` - Privileged users can export the whois DB to file",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Whois for discord",
                "tags": [],
                "type": ""
            },
            "wiggler": {
                "author": [
                    "Eris"
                ],
                "description": "Adds random reactions to posts! User configurable.\nUsage:\n`[p]wiggle set emojis...` - set list of random emoji to choose from.\n`[p]wiggle show` - show your registered emoji\n`[p]wiggle showall` - show all registered emoji (requires mod access)",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Adds random reactions to posts!",
                "tags": [],
                "type": ""
            },
            "zalgo": {
                "author": [
                    "Eris"
                ],
                "description": "Memes the provided message and deletes the original.\nUsage:\n`[p]zalgo message` - [zalgo](https://knowyourmeme.com/memes/zalgo)\n`[p]uwu message` - [uwu](https://knowyourmeme.com/memes/uwu)\n`[p]oob message` - [oob](https://www.pinterest.com/pin/415879346839911237/)\n`[p]spoilerify message` - spoilers every other word",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {
                    "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
                },
                "requirements": [],
                "short": "Memes and replaces text.",
                "tags": [],
                "type": ""
            }
        },
        "short": "Eris' cogs for Red-DiscordBot"
    },
    "https://github.com/tmercswims/tmerc-cogs": {
        "author": [
            "tmerc"
        ],
        "description": "Utilities, community tools, and goofy commands, all in one place.",
        "name": "tmerc-cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "catfact": {
                "author": [
                    "tmerc"
                ],
                "description": "Gets a random cat fact.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Gets a random cat fact.",
                "tags": [
                    "catfact",
                    "cat",
                    "animals",
                    "random",
                    "fun"
                ],
                "type": ""
            },
            "lenny": {
                "author": [
                    "tmerc"
                ],
                "description": "\u4e41(-\u30ed-)\u310f",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)",
                "tags": [
                    "lenny",
                    "emoji",
                    "donger",
                    "fun"
                ],
                "type": ""
            },
            "massdm": {
                "author": [
                    "tmerc"
                ],
                "description": "Send a direct message to all members of the specified Role. Personalize the message for each person.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "DM a Role.",
                "tags": [
                    "tools",
                    "utility",
                    "moderation",
                    "dm"
                ],
                "type": ""
            },
            "nestedcommands": {
                "author": [
                    "tmerc"
                ],
                "description": "Experimental cog that allows you to use the output of one command as the input of another.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Nest commands together.",
                "tags": [
                    "subcommand",
                    "experimental",
                    "tools",
                    "utility"
                ],
                "type": ""
            },
            "randimals": {
                "author": [
                    "tmerc"
                ],
                "description": "Displays random images of some animals.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Get some random animal images.",
                "tags": [
                    "animal",
                    "random",
                    "fun"
                ],
                "type": ""
            },
            "streamrole": {
                "author": [
                    "tmerc"
                ],
                "description": "Assign a configurable role to anyone who is streaming.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Streamers get a role.",
                "tags": [
                    "stream",
                    "role",
                    "tools",
                    "utility"
                ],
                "type": ""
            },
            "welcome": {
                "author": [
                    "tmerc"
                ],
                "description": "Announces members joining, leaving, getting banned, and getting unbanned, in a customizable text channel and with customizable messages.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Announces membership events.",
                "tags": [
                    "welcome",
                    "greetings",
                    "leave",
                    "ban",
                    "utility"
                ],
                "type": ""
            }
        },
        "short": "B\u0336o\u0336d\u0336y\u0336 Cogs by tmerc."
    },
    "https://github.com/vertyco/vrt-cogs": {
        "author": [
            "Vertyco"
        ],
        "description": "Various utility and game server management cogs for servers like Ark, Minecraft, and DayZ, with a few other random/fun cogs sprinkled in.",
        "name": "vrt-cogs",
        "rx_branch": "",
        "rx_category": "unapproved",
        "rx_cogs": {
            "arksave": {
                "author": [
                    "Vertyco"
                ],
                "description": "Ark data save tool",
                "disabled": false,
                "end_user_data_statement": "This cog moves data locally and is only for 1 server at a time.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "administrator"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Ark data save tool",
                "tags": [
                    "utility",
                    "ark",
                    "rcon",
                    "servermanager"
                ],
                "type": "COG"
            },
            "arkshop": {
                "author": [
                    "Vertyco"
                ],
                "description": "(Arktools Cog Required) Ark: Survival Evolved Shop.",
                "disabled": false,
                "end_user_data_statement": "This cog stores player XUID's and Discord ID's.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "administrator"
                ],
                "required_cogs": {
                    "arktools": "https://github.com/vertyco/vrt-cogs"
                },
                "requirements": [
                    "rcon==1.3.6"
                ],
                "short": "Shop for Ark",
                "tags": [
                    "utility",
                    "ark",
                    "rcon",
                    "shop"
                ],
                "type": "COG"
            },
            "arktools": {
                "author": [
                    "Vertyco"
                ],
                "description": "Ark: Survival Evolved server manager and crosschat.",
                "disabled": false,
                "end_user_data_statement": "This is probably one of the more I/O heavy cogs available and is NOT intended to be run on extremely small devices/VMs due to the sheer amount of socket connections, API calls, and task loops it utilizes.\\nThis cog stores Gamertag Names, XUIDs, Discord IDs, time played per map, and optional token data for Xbox self-host accounts.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "administrator"
                ],
                "required_cogs": {},
                "requirements": [
                    "rcon",
                    "pytz",
                    "xbox-webapi",
                    "matplotlib"
                ],
                "short": "RCON tools for Ark",
                "tags": [
                    "utility",
                    "ark",
                    "rcon",
                    "servermanager",
                    "server",
                    "survival",
                    "gameserver"
                ],
                "type": "COG"
            },
            "atla": {
                "author": [
                    "Vertyco"
                ],
                "description": "WIP",
                "disabled": true,
                "end_user_data_statement": "WIP",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "WIP",
                "tags": [
                    "pet",
                    "pets",
                    "game",
                    "games",
                    "adventure",
                    "fun",
                    "collect"
                ],
                "type": "COG"
            },
            "dayztools": {
                "author": [
                    "Vertyco"
                ],
                "description": "Day Z server logging for Nitrado.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data about users.(at the moment)",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "administrator"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Logging tools for Day Z",
                "tags": [
                    "utility",
                    "dayz",
                    "day z",
                    "nitrado",
                    "servermanager",
                    "server manager",
                    "server"
                ],
                "type": "COG"
            },
            "fluent": {
                "author": [
                    "Vertyco"
                ],
                "description": "Seamless translation between two languages in one channel.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data about users. This cog uses google's free translator api",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [
                    "googletrans==3.1.0a0"
                ],
                "short": "Auto translation between two languages.",
                "tags": [
                    "utility",
                    "translate",
                    "translator",
                    "autotranslate"
                ],
                "type": "COG"
            },
            "inspire": {
                "author": [
                    "Vertyco"
                ],
                "description": "Get inspiring messages with zenquotes.io API",
                "disabled": false,
                "end_user_data_statement": "This cog uses the zenquotes.io API and does not persistently store data about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Get inspiring messages.",
                "tags": [
                    "fun",
                    "inspiring"
                ],
                "type": "COG"
            },
            "mctools": {
                "author": [
                    "Vertyco"
                ],
                "description": "Simple Minecraft server stats cog for Bedrock servers",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [
                    "mcstats"
                ],
                "short": "Get Bedrock server stats.",
                "tags": [
                    "utility",
                    "minecraft",
                    "bedrock"
                ],
                "type": "COG"
            },
            "meow": {
                "author": [
                    "Vertyco"
                ],
                "description": "Meow",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data about users right meow.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Meow",
                "tags": [
                    "meow",
                    "cat",
                    "cats"
                ],
                "type": "COG"
            },
            "nobot": {
                "author": [
                    "Vertyco"
                ],
                "description": "Filter certain messages from other bots",
                "disabled": false,
                "end_user_data_statement": "This cog only listens for other bots, it is probably not a good idea to use this on large or public bots.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "manage_messages",
                    "send_messages",
                    "add_reactions"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Filter bot messages",
                "tags": [
                    "utility",
                    "nobot"
                ],
                "type": "COG"
            },
            "sctools": {
                "author": [
                    "Vertyco"
                ],
                "description": "View Star Citizen Info",
                "disabled": false,
                "end_user_data_statement": "This cog stores an api key for bot owner only",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "send_messages",
                    "embed_links"
                ],
                "required_cogs": {},
                "requirements": [],
                "short": "Tools for Star Citizen",
                "tags": [
                    "utility",
                    "star citizen",
                    "star",
                    "citizen",
                    "sc"
                ],
                "type": "COG"
            },
            "xtools": {
                "author": [
                    "Vertyco"
                ],
                "description": "View your Xbox profile, friends, game clips, achievements and more!",
                "disabled": false,
                "end_user_data_statement": "This cog uses Microsofts XSAPI endpoints to pull data. It stores your (the bot owner's) client ID and secret for the Azure application for authorization.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": [
                    3,
                    8,
                    1
                ],
                "permissions": [
                    "read_messages",
                    "send_messages",
                    "manage_messages",
                    "embed_links",
                    "add_reactions",
                    "manage_reactions"
                ],
                "required_cogs": {},
                "requirements": [
                    "xmltojson>=0.2.0",
                    "xbox-webapi",
                    "utils>=1.0.1"
                ],
                "short": "Get Xbox Live Info and Player Stats.",
                "tags": [
                    "fun",
                    "tools",
                    "utility",
                    "xbox",
                    "microsoft",
                    "xsapi"
                ],
                "type": "COG"
            }
        },
        "short": "Utility & Game Server cogs by Vertyco"
    },
    "https://github.com/yamikaitou/YamiCogs": {
        "author": [
            "YamiKaitou#8975"
        ],
        "description": "Just some random cogs that I wrote/ported/modified and want to share back to the public",
        "name": "YamiCogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "collectcards": {
                "author": [
                    "YamiKaitou#8975"
                ],
                "description": "Collect 'cards' (emoji) to complete sets for points",
                "disabled": true,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "A 'card' (emoji) collecting game",
                "tags": [],
                "type": "COG"
            },
            "economytrickle": {
                "author": [
                    "YamiKaitou#8975"
                ],
                "description": "Automatically trickle some credits into your bot's economy",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store end user data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Trickle credits into your economy",
                "tags": [
                    "economy",
                    "trickle"
                ],
                "type": ""
            },
            "gameservers": {
                "author": [
                    "YamiKaitou#8975"
                ],
                "description": "Monitor and Lookup info on configured game servers",
                "disabled": true,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate"
                ],
                "short": "Monitor and Lookup info on configured game servers",
                "tags": [
                    "utility"
                ],
                "type": ""
            },
            "kill": {
                "author": [
                    "YamiKaitou#8975",
                    "Paddolicious#8880"
                ],
                "description": "Add kill methods and kill people with them! Originally made for v2 by Paddo",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Have you always wanted to kill someone? If so, do it in a creative way!",
                "tags": [
                    "kill",
                    "fun"
                ],
                "type": ""
            },
            "lottery": {
                "author": [
                    "YamiKaitou#8975"
                ],
                "description": "Play a Lucky3 'scratcher', a Daily Drawing, or a Weekly Drawing",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Play some Lottery games",
                "tags": [
                    "economy",
                    "fun"
                ],
                "type": ""
            },
            "mccasino": {
                "author": [
                    "YamiKaitou#8975"
                ],
                "description": "Play various Casino games using various information from Minecraft",
                "disabled": true,
                "end_user_data_statement": "",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Play Casino games with random Minecraft stuff",
                "tags": [
                    "economy",
                    "fun"
                ],
                "type": ""
            },
            "payday": {
                "author": [
                    "YamiKaitou#8975"
                ],
                "description": "Give bonus credits for daily and other times",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store end user data. This cog does store Discord UserIDs as needed for operation.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "tabulate"
                ],
                "short": "More PayDay options",
                "tags": [
                    "utility",
                    "economy",
                    "daily",
                    "payday"
                ],
                "type": ""
            },
            "pogo": {
                "author": [
                    "YamiKaitou#8975"
                ],
                "description": "Lookup various stats of Pokemon for Pokemon Go",
                "disabled": true,
                "end_user_data_statement": "",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Lookup various stats of Pokemon for Pokemon Go",
                "tags": [
                    "utilities"
                ],
                "type": ""
            },
            "rolenotify": {
                "author": [
                    "YamiKaitou#8975"
                ],
                "description": "Send a user a DM or post in a channel when they have a Role added or removed from them",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Notify a user when they have a Role added or removed from them",
                "tags": [
                    "role",
                    "notify"
                ],
                "type": "COG"
            },
            "rps": {
                "author": [
                    "YamiKaitou#8975"
                ],
                "description": "Play a game of Rock, Paper, Scissors (Lizard, Spock); but with Buttons!",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "dislash.py>=1.4.9"
                ],
                "short": "Rock, Paper, Scissors (Lizard, Spock)",
                "tags": [
                    "game",
                    "fun",
                    "rps",
                    "rpsls",
                    "fun",
                    "buttons"
                ],
                "type": "COG"
            },
            "russianroulette": {
                "author": [
                    "YamiKaitou#8975"
                ],
                "description": "Play a game of Russian Roulette. Place a bet on your chance of staying alive, lose if you die",
                "disabled": true,
                "end_user_data_statement": "This cog does not persistently store end user data. This cog does store Discord UserIDs as needed for operation.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Play the simple game of Russian Roulette",
                "tags": [
                    "economy",
                    "game"
                ],
                "type": ""
            },
            "slots": {
                "author": [
                    "YamiKaitou#8975"
                ],
                "description": "Various Slot Machine games",
                "disabled": true,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "dislash.py==1.0.16"
                ],
                "short": "Various Slot Machine games",
                "tags": [],
                "type": "COG"
            }
        },
        "short": "A random group of cogs"
    },
    "https://github.com/zephyrkul/FluffyCogs": {
        "author": [
            "Zephyrkul (Zephyrkul#1089)"
        ],
        "description": "My cogs for utility, requests, or proof-of-concepts. Or memes, as is the case with the skyrim cog.",
        "name": "FluffyCogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "act": {
                "author": [
                    "Zephyrkul (Zephyrkul#1089)"
                ],
                "description": "Lets you command the bot to perform an action on someone else.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "inflection"
                ],
                "short": "Command the bot to perform an action on a fellow user.",
                "tags": [
                    "fun"
                ],
                "type": ""
            },
            "autodisconnect": {
                "author": [
                    "Zephyrkul (Zephyrkul#1089)"
                ],
                "description": "Automatically disconnect inactive VC users. Requires a set AFK channel.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Automatically disconnect inactive VC users. Requires a set AFK channel.",
                "tags": [
                    "voice",
                    "utility"
                ],
                "type": ""
            },
            "clocks": {
                "author": [
                    "Zephyrkul (Zephyrkul#1089)"
                ],
                "description": "Track projects with clocks. Mainly used for Forged in the Dark tabletop RPGs.",
                "disabled": false,
                "end_user_data_statement": "This cog stores data provided via command by users for the express purpose of redisplaying. Users may remove this data via data request or via command.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Track FitD projects with clocks.",
                "tags": [
                    "utility"
                ],
                "type": ""
            },
            "cmdreplier": {
                "author": [
                    "Zephyrkul (Zephyrkul#1089)"
                ],
                "description": "Let command responses reply to the same message the command message replies to.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.8",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Let command responses reply to the same message the command message replies to.",
                "tags": [
                    "utility"
                ],
                "type": ""
            },
            "dev": {
                "author": [
                    "Cog-Creators",
                    "Zephyrkul (Zephyrkul#1089)"
                ],
                "description": "A fork of Red's Dev cog containing various features that wouldn't make it into core Red.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": true,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Custom fork of Red's Dev cog.",
                "tags": [
                    "dev"
                ],
                "type": ""
            },
            "invoice": {
                "author": [
                    "Zephyrkul (Zephyrkul#1089)",
                    "Paddo"
                ],
                "description": "Create and manage microphoneless / nomic text channels for VC users with no microphone.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "git+https://github.com/zephyrkul/proxyembed"
                ],
                "short": "Create and manage microphoneless / nomic text channels for VC users with no microphone.",
                "tags": [
                    "voice",
                    "utility"
                ],
                "type": ""
            },
            "logsfrom": {
                "author": [
                    "Zephyrkul (Zephyrkul#1089)"
                ],
                "description": "Log a specified channel to a markdown file.",
                "disabled": false,
                "end_user_data_statement": "This cog enables logging messages for bot owners and admins. The bot itself does not persistently store this data.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": [
                    3,
                    7,
                    0
                ],
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Log a specified channel to a markdown file.",
                "tags": [
                    "logging",
                    "utility"
                ],
                "type": ""
            },
            "nationstates": {
                "author": [
                    "Zephyrkul (Zephyrkul#1089)"
                ],
                "description": "Access information from NationStates.net.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "sans",
                    "git+https://github.com/zephyrkul/proxyembed"
                ],
                "short": "Access information from NationStates.net.",
                "tags": [
                    "utility"
                ],
                "type": ""
            },
            "onedit": {
                "author": [
                    "Zephyrkul (Zephyrkul#1089)"
                ],
                "description": "Allow users to run bot commands with edited messages, with a specified timeout.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.1.6",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Allow users to run bot commands with edited messages, with a specified timeout.",
                "tags": [
                    "utility"
                ],
                "type": ""
            },
            "rift": {
                "author": [
                    "Zephyrkul (Zephyrkul#1089)",
                    "Twentysix26 (Twentysix#5252)"
                ],
                "description": "Communicate with other servers through Red! Works to and from DMs as well.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users. This cog does store user IDs necessary for anti-abuse measures, i.e. blocklists.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.6",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Allows cross-server communication through Red",
                "tags": [
                    "cross-server",
                    "communication",
                    "fun",
                    "trolling",
                    "impersonation"
                ],
                "type": ""
            },
            "rtfs": {
                "author": [
                    "Zephyrkul (Zephyrkul#1089)"
                ],
                "description": "Allows users to read the source of publicly-sourced commands. The bot owner can also read the source of any Python object if developer mode is enabled.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Read The Source\u2122\ufe0f",
                "tags": [
                    "dev",
                    "utilities"
                ],
                "type": ""
            },
            "secureinv": {
                "author": [
                    "Zephyrkul (Zephyrkul#1089)"
                ],
                "description": "Set up secure invites.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Set up secure invites.",
                "tags": [
                    "utility"
                ],
                "type": ""
            },
            "skyrim": {
                "author": [
                    "Zephyrkul (Zephyrkul#1089)"
                ],
                "description": "Say a random line from Skyrim\nWARNING: SPOILERS FOR SKYRIM.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Say a random line from Skyrim. WARNING: Spoilers for Skyrim.",
                "tags": [
                    "skyrim",
                    "gaming",
                    "fun"
                ],
                "type": ""
            },
            "spoilerer": {
                "author": [
                    "Zephyrkul (Zephyrkul#1089)"
                ],
                "description": "Add a spoiler command and a spoiler button for use by mobile users, who lack the ability to spoiler images.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "3.4.0",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Add a spoiler command and a spoiler button for use by mobile users, who lack the ability to spoiler images.",
                "tags": [
                    "utilities"
                ],
                "type": ""
            },
            "theme": {
                "author": [
                    "Zephyrkul (Zephyrkul #1089)"
                ],
                "description": "Allows you to set themes to easily play accross all servers.",
                "disabled": false,
                "end_user_data_statement": "This cog stores data provided via command by users for the purposes of replaying.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Allows you to set themes to easily play accross all servers.",
                "tags": [
                    "music",
                    "audio",
                    "fun"
                ],
                "type": ""
            },
            "turn": {
                "author": [
                    "Zephyrkul (Zephyrkul#1089)"
                ],
                "description": "Track turns for posting in a channel, and bugs the next person in line until they start typing.",
                "disabled": false,
                "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Track turns for posting in a channel.",
                "tags": [
                    "utility"
                ],
                "type": ""
            }
        },
        "short": "Only the fluffiest of cogs go here."
    },
    "https://gitlab.com/CrunchBangDev/cbd-cogs": {
        "author": [
            "CrunchBangDev"
        ],
        "description": "Put this in your bot and smoke it",
        "name": "cbd-cogs",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "Bio": {
                "author": [
                    "CrunchBangDev"
                ],
                "description": "Add information to your player bio and lookup information others have shared.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Add player bios",
                "tags": [],
                "type": "COG"
            },
            "Bookmark": {
                "author": [
                    "CrunchBangDev"
                ],
                "description": "Allow users to use a reaction in order to bookmark messages for later review",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Let users bookmark posts",
                "tags": [],
                "type": "COG"
            },
            "Inspire": {
                "author": [
                    "CrunchBangDev"
                ],
                "description": "Obtains inspiration for you from an API",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "inspiro"
                ],
                "short": "Get inspired",
                "tags": [],
                "type": "COG"
            },
            "Markov": {
                "author": [
                    "CrunchBangDev"
                ],
                "description": "Analyze user messages, generating markov chains that can be used to synthesize new text to mimick users",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Generate markov chains for users",
                "tags": [],
                "type": "COG"
            },
            "Scrub": {
                "author": [
                    "CrunchBangDev"
                ],
                "description": "Applies a set of rules to remove undesireable elements from hyperlinks such as campaign tracking tokens.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Scrub dirty links clean",
                "tags": [],
                "type": "COG"
            },
            "Tube": {
                "author": [
                    "CrunchBangDev"
                ],
                "description": "Posts in a channel every time a new video is added to a YouTube channel.",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "feedparser"
                ],
                "short": "Subscribe to channels on the 'tube",
                "tags": [],
                "type": "COG"
            },
            "Vibe": {
                "author": [
                    "CrunchBangDev"
                ],
                "description": "Allow yourself to drift quietly",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "0.0.0",
                "min_bot_version": "3.1.8",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [
                    "inspiro"
                ],
                "short": "Inspirobot and chill",
                "tags": [],
                "type": "COG"
            }
        },
        "short": "Got cogs?"
    },
    "https://gitlab.com/Eragon5779/TechCogsV3": {
        "author": [
            "Eragon5779"
        ],
        "description": "A collection of cogs for gathering information about technology, and other tech utility commands.\nThis repo is for V3 only!",
        "name": "TechCogsV3",
        "rx_branch": "",
        "rx_category": "approved",
        "rx_cogs": {
            "cpucompare": {
                "author": [
                    "Eragon5779"
                ],
                "description": "Searches for CPUs from both Intel and AMD.\nAlso has the ability to compare 2 CPUs spec-for-spec",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Compare the top CPUs for your build needs",
                "tags": [
                    "utility",
                    "search"
                ],
                "type": ""
            },
            "encode": {
                "author": [
                    "Eragon5779"
                ],
                "description": "Wrapper for Python base64 library. Supports the following bases: 16,32,64,85",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Wrapper for Python base64 library",
                "tags": [
                    "utility",
                    "encode"
                ],
                "type": ""
            },
            "genid": {
                "author": [
                    "Eragon5779"
                ],
                "description": "Wrapper for Python UUID and ULID libraries. Supports the following UUIDs: 3, 4, 5\nULID spec defined here: https://github.com/ulid/spec",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Wrapper for Python UUID and ULID libraries",
                "tags": [
                    "utility",
                    "identity"
                ],
                "type": ""
            },
            "hash": {
                "author": [
                    "Eragon5779"
                ],
                "description": "Hash files or text using any hash guaranteed by hashlib",
                "disabled": false,
                "end_user_data_statement": "",
                "hidden": false,
                "max_bot_version": "",
                "min_bot_version": "",
                "min_python_version": "",
                "permissions": [],
                "required_cogs": {},
                "requirements": [],
                "short": "Hash files and text",
                "tags": [
                    "utility",
                    "hash"
                ],
                "type": ""
            }
        },
        "short": "A collection of cogs for technology purposes"
    }
}