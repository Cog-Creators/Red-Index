{
  "https://github.com/AAA3A-AAA3A/AAA3A-cogs": {
    "author": ["AAA3A"],
    "description": "Many cogs for Red-DiscordBot!",
    "name": "AAA3A-cogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "acronymgame": {
        "author": ["AAA3A"],
        "description": "A cog to play a random match of Acrononym game, with Modals!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "prettytable"
        ],
        "short": "A cog to play a random match of Acrononym game, with Modals!",
        "tags": ["acronym", "game"],
        "type": ""
      },
      "antinuke": {
        "author": ["AAA3A"],
        "description": "Have you ever dreamed of preventing a nuke by automatically removing all the permissions of someone who removes a channel from your server? Then this cog is for you! Personally, I would advise you to set your permissions, rather than trusting this cog. Trust those who have them.",
        "disabled": false,
        "end_user_data_statement": "This cog records the number of times the user has performed an action that may be considered dangerous (e.g. deleting a channel).",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "TagScript"
        ],
        "short": "A cog to remove all permissions from a person who deletes a channel!",
        "tags": ["nuke", "protection", "anti", "raid"],
        "type": ""
      },
      "autotraceback": {
        "author": ["AAA3A"],
        "description": "A cog to display the error traceback of a command automatically after the error! If you are developing cogs for Red for example, you don't need to use the traceback command every time you run a new command.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git"],
        "short": "A cog to display the error traceback of a command automatically after the error!",
        "tags": ["error", "traceback", "dev"],
        "type": ""
      },
      "calculator": {
        "author": ["AAA3A"],
        "description": "Have you ever wanted to do simple calculations without leaving Discord with buttons? Then this cog is for you!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users. The calculation history is temporary and deleted as soon as the cog is reloaded.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "expr.py"
        ],
        "short": "A cog to do simple calculations from Discord with buttons!",
        "tags": ["calculation", "calc", "calculator", "maths"],
        "type": ""
      },
      "clearchannel": {
        "author": ["AAA3A"],
        "description": "Have you ever wanted to delete all messages of a channel? Then this cog is for you!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git"],
        "short": "A cog to delete ALL messages of a channel!",
        "tags": ["cleanup", "channel", "delete"],
        "type": ""
      },
      "cmdchannel": {
        "author": ["AAA3A"],
        "description": "Have you ever wanted to send commands to the bot and get a result in the channel of your choice? Then this cog is for you! It allows you to hide the author of the command and to do as if you had sent the command in the specified channel, by the specified user... It is up to the owner of a server to activate the option and to choose a channel for the logs.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git"],
        "short": "A cog to send the result of a command to another channel!",
        "tags": ["command", "channel", "hide"],
        "type": ""
      },
      "codesnippets": {
        "author": ["AAA3A"],
        "description": "A cog to send code content from a GitHub/Gist/GitLab/BitBucket/Pastebin/Hastebin URL, in configured channels.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git"],
        "short": "A cog to send code content from a GitHub/Gist/GitLab/BitBucket/Pastebin/Hastebin!",
        "tags": ["code", "snippet", "git", "gist"],
        "type": ""
      },
      "commandsbuttons": {
        "author": ["AAA3A"],
        "description": "Have you ever wanted to allow a user to execute a command by clicking on a button? Then this cog is for you!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "emoji"
        ],
        "short": "A cog to allow a user to execute a command by clicking on a button!",
        "tags": ["command", "button", "react"],
        "type": ""
      },
      "ctxvar": {
        "author": ["AAA3A"],
        "description": "A cog to list and display the contents of all sub-functions of `ctx`! This cog allows you to see which variables you want to use when creating the cog.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git"],
        "short": "A cog to list and display the contents of all sub-functions of `ctx`!",
        "tags": ["ctx", "python", "coding", "variables"],
        "type": ""
      },
      "dictionary": {
        "author": ["AAA3A"],
        "description": "A cog to search an english term/word in the dictionary! Synonyms, antonyms, phonetics (with audio)...",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git"],
        "short": "A cog to search an english term/word in the dictionary! Synonyms, antonyms, phonetics (with audio)...",
        "tags": ["dictionary", "english", "word", "term"],
        "type": ""
      },
      "discordedit": {
        "author": ["AAA3A"],
        "description": "Have you ever wanted to edit roles, text channels, voice channels, ...? Then this cog is for you! It simply allows you to use commands to change the settings of a default Discord object.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "emoji"
        ],
        "short": "A cog to edit Discord default objects, like guilds, roles, text channels, voice channels, threads and AutoMod!",
        "tags": ["discord", "edit", "guild", "role", "channel"],
        "type": ""
      },
      "discordmodals": {
        "author": ["AAA3A"],
        "description": "Have you ever wanted to allow users to report a bug, for example by filling in a form with a graphical interface on Discord, after clicking on a button? Then this cog is for you!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "emoji",
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git"
        ],
        "short": "A cog to use Discord Modals, forms with graphic interface!",
        "tags": ["discord", "interaction", "modal", "form"],
        "type": ""
      },
      "discordsearch": {
        "author": ["AAA3A"],
        "description": "Have you ever wanted to search a message on Discord? Then this cog is for you!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "dateparser"
        ],
        "short": "A cog to search a message on Discord!",
        "tags": ["search", "message", "channel"],
        "type": ""
      },
      "draw": {
        "author": ["WitherredAway", "AAA3A"],
        "description": "A cog to make pixel arts on Discord!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "numpy",
          "pillow",
          "emoji"
        ],
        "short": "A cog to make pixel arts on Discord!",
        "tags": ["draw", "pixel", "art", "paint"],
        "type": ""
      },
      "dropdownstexts": {
        "author": ["AAA3A"],
        "description": "Have you ever wanted to have dropdowns-text? Then this cog is for you!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "emoji"
        ],
        "short": "A cog to have dropdowns-texts!",
        "tags": ["dropdown", "text", "interaction"],
        "type": ""
      },
      "editfile": {
        "author": ["AAA3A"],
        "description": "Have you ever wanted to get a file and replace it from its path from Discord? Then this cog is for you!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git"],
        "short": "A cog to get a file and replace it from its path from Discord!",
        "tags": ["file", "local", "edit"],
        "type": ""
      },
      "exportchannel": {
        "author": ["AAA3A"],
        "description": "Have you ever wanted to export all or part of a channel's messages to an html file? Then this cog is for you!\nRemember that exporting other users' messages from Discord does not respect the TOS.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "chat-exporter"
        ],
        "short": "A cog to export all or part of a channel's messages to an html file!",
        "tags": ["export", "messages", "html"],
        "type": ""
      },
      "getdocs": {
        "author": ["AAA3A", "amyrinbot"],
        "description": "A cog to get and display some documentations in Discord! Only `discord.py`, `redbot`, `python`, `aiohttp`, `requests`, `gitpython`, `phentags`, `pylav`, `discordapi`, `git`, `psutil`, `pillow`, `numpy`, `matplotlib`, `asyncpg`, `sqlite`, `websockets`, `mango`, `redis`, `aiomysql`, `flask`, `motor`, `sphinx`, and `starlite`.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev100",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "sphobjinv",
          "humanfriendly",
          "beautifulsoup4",
          "lxml",
          "fuzzywuzzy",
          "prettytable"
        ],
        "short": "A cog to get and display some documentations in Discord! Only `discord.py`, `redbot`, `python`, `aiohttp`, `requests`, `gitpython`, `slashtags`, `pylav`, `discordapi`, `git`, `psutil`, `pillow`, `numpy`, `matplotlib`, `asyncpg`, `sqlite`, `websockets`, `mango`, `redis`, `aiomysql`, `flask`, `motor`, `sphinx`, and `starlite`.",
        "tags": [
          "dev",
          "coding",
          "dpy",
          "python",
          "docs",
          "documentations",
          "discordapi",
          "rtfm",
          "rtd",
          "readthedocs"
        ],
        "type": ""
      },
      "getloc": {
        "author": ["AAA3A"],
        "description": "Have you ever wanted to display information about a location based on its address or geographical coordinates? Then this cog is for you!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "geopy",
          "basemap",
          "matplotlib",
          "numpy"
        ],
        "short": "A cog to display information about a location based on its address or geographical coordinates!",
        "tags": ["localisation", "latitude", "longitude"],
        "type": ""
      },
      "gistshandler": {
        "author": ["AAA3A"],
        "description": "A cog to create new Gists and edit/delete existing ones!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "git+https://github.com/WitherredAway/gists.py"
        ],
        "short": "A cog to create new Gists and edit/delete existing ones!",
        "tags": ["dev", "gists", "github", "code", "snippet"],
        "type": ""
      },
      "ip": {
        "author": ["AAA3A"],
        "description": "A cog to get the ip address of the bot's host machine!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git"],
        "short": "A cog to get the ip adress of the bot's host machine!",
        "tags": ["ip", "host", "machine"],
        "type": ""
      },
      "medicat": {
        "author": ["AAA3A"],
        "description": "This cog will only work on x server and therefore cannot be used by the general public!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "beautifulsoup4",
          "lxml"
        ],
        "short": "This cog will only work on x server and therefore cannot be used by the general public!",
        "tags": [],
        "type": ""
      },
      "memberprefix": {
        "author": ["AAA3A"],
        "description": "Have you ever wanted to allow a member to choose custom prefixes, just for them? Then this cog is for you!",
        "disabled": false,
        "end_user_data_statement": "This cog only records the different prefixes chosen by each member.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git"],
        "short": "A cog to allow a member to choose custom prefixes, just for them!",
        "tags": ["prefix", "custom", "member"],
        "type": ""
      },
      "memorygame": {
        "author": ["AAA3A"],
        "description": "A cog to play to Memory game, with buttons, leaderboard and Red bank!",
        "disabled": false,
        "end_user_data_statement": "This cog saves levels and XP of users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "prettytable"
        ],
        "short": "A cog to play to Memory game, with buttons, leaderboard and Red bank!",
        "tags": ["memory", "game"],
        "type": ""
      },
      "minecraft": {
        "author": ["AAA3A"],
        "description": "A cog to display informations about Minecraft Java users and servers, and notify for each change of a server!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "mcstatus>=9.3.1"
        ],
        "short": "A cog to display informations about Minecraft Java users and servers, and notify for each change of a server!",
        "tags": ["minecraft", "game", "server", "notifications"],
        "type": ""
      },
      "reacttocommand": {
        "author": ["AAA3A"],
        "description": "Have you ever wanted to allow a user to execute a command by clicking on a reaction? Then this cog is for you!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "emoji"
        ],
        "short": "A cog to allow a user to execute a command by clicking on a reaction!",
        "tags": ["react", "reaction", "command"],
        "type": ""
      },
      "recipes": {
        "author": ["AAA3A"],
        "description": "A cog to search and show a cooking recipe!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "beautifulsoup4",
          "lxml"
        ],
        "short": "A cog to search and show a cooking recipe!",
        "tags": ["recipe", "cook", "food"],
        "type": ""
      },
      "reminders": {
        "author": ["AAA3A"],
        "description": "Don't forget anything anymore! Reminders in DMs, channels, FIFO commands sheduler, say sheduler... With 'Me Too', snooze and buttons. You can migrate reminders from RemindMe by PhasecoreX.",
        "disabled": false,
        "end_user_data_statement": "This cog does store users reminders, who are deleted when triggered.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "pytz",
          "python-dateutil",
          "dateparser",
          "pyparsing",
          "validators",
          "apscheduler",
          "cron-descriptor",
          "recurrent"
        ],
        "short": "Don't forget anything anymore! Reminders in DMs, channels, FIFO commands sheduler, say sheduler... With 'Me Too', snooze and buttons.",
        "tags": [
          "remind",
          "time",
          "message",
          "bell",
          "schedule",
          "fifo",
          "command",
          "say"
        ],
        "type": ""
      },
      "rolesbuttons": {
        "author": ["AAA3A"],
        "description": "Have you ever wanted to have roles-buttons? Then this cog is for you!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "emoji"
        ],
        "short": "A cog to have roles-buttons!",
        "tags": ["role", "button", "react"],
        "type": ""
      },
      "runcode": {
        "author": ["AAA3A"],
        "description": "A cog to compile and run codes in some languages! Use `[p]setruncode listlanguages` to get a list of all the available languages.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users. Please note: all the code you run is stored on the wandbox.org server, even if you need a code to access it. To my knowledge, there is no way to request a deletion.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "humanfriendly",
          "fuzzywuzzy"
        ],
        "short": "A cog to compile and run codes in some languages!",
        "tags": ["dev", "code", "compiler"],
        "type": ""
      },
      "seen": {
        "author": ["AAA3A"],
        "description": "Have you ever wanted to check when a member/role/channel/category/user/guild was last active? Then this cog is for you!",
        "disabled": false,
        "end_user_data_statement": "This cog records the time the user last participated and the message they acted on (sending a message, modifying a message in the cache, adding a reaction for a message in the cache and deleting a reaction for a message in the cache). The user can at any time issue the command `[p]seen ignoreme` to cause this cog to ignore all its next actions and delete the previously stored data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git"],
        "short": "A cog to check when a member/role/channel/category/user/guild was last active!",
        "tags": ["seen", "activity", "time"],
        "type": ""
      },
      "simplesanction": {
        "author": ["AAA3A"],
        "description": "Have you ever wanted to have a simple message with buttons to quickly choose the right sanction for a particular member? Then this cog is for you! It allows you to use the buttons on a message to select a sanction and choose the thumbnail of the embed, and many other settings...",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git"],
        "short": "A cog to sanction members, with buttons!",
        "tags": ["sanction", "user", "ban", "quick"],
        "type": ""
      },
      "splitorstealgame": {
        "author": ["AAA3A"],
        "description": "A cog to play a match of SplitOrSteal game!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git"],
        "short": "A cog to play a match of SplitOrSteal game!",
        "tags": ["split", "steal", "game"],
        "type": ""
      },
      "sudo": {
        "author": ["AAA3A", "Draper", "jack1142 (Jackenmen#6607)"],
        "description": "Have you ever wanted to allow bot owners to be normal users in terms of permissions? Then this cog is for you!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git"],
        "short": "A cog to allow bot owners to be normal users in terms of permissions!",
        "tags": ["sudo", "bot", "owner"],
        "type": ""
      },
      "tickettool": {
        "author": ["AAA3A"],
        "description": "Have you ever wanted to set up a tickets system, with many options for the user and the support team, on your server? Then this cog is for you! It has many settings, buttons, a reaction to create the ticket, many commands working in the ticket channel, different roles with access to different options... There is also a system of panels!",
        "disabled": false,
        "end_user_data_statement": "This cog records all the data needed to operate the ticket system. It records the reason for the ticket, the open/close dates, the members who have opened/closed/claimed a ticket. Apart from deleting the ticket with `[p]ticket delete`, this cog is not configured to delete this operational data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "chat-exporter",
          "emoji"
        ],
        "short": "A cog to manage a tickets system!",
        "tags": ["ticket", "tool", "system"],
        "type": ""
      },
      "transferchannel": {
        "author": ["AAA3A"],
        "description": "Have you ever wanted to tranfer all messages channel in a other ? Then this cog is for you!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git"],
        "short": "A cog to transfer all messages channel in a other channel!",
        "tags": ["command", "channel", "hide"],
        "type": ""
      },
      "urlbuttons": {
        "author": ["AAA3A"],
        "description": "Have you ever wanted to have url-buttons? Then this cog is for you!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/AAA3A-AAA3A/AAA3A_utils.git",
          "emoji"
        ],
        "short": "A cog to have url-buttons!",
        "tags": ["url", "button"],
        "type": ""
      }
    },
    "short": "Many cogs for Red-DiscordBot!"
  },
  "https://github.com/DJTOMATO/glas-cogs": {
    "author": ["Glas"],
    "description": "Silly cogs nobody would use.",
    "name": "glas-cogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "fire": {
        "author": ["TrustyJaid", "Glas"],
        "description": "Generates a random firework from an API.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Generates a random firework.",
        "tags": ["image", "firework", "gif"],
        "type": "COG"
      },
      "movietar": {
        "author": ["Glas"],
        "description": "Inserts avatar into several videos.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["moviepy", "rapidfuzz"],
        "short": "Video + Avatar.",
        "tags": ["video", "avatar", "bad-meme"],
        "type": "COG"
      },
      "nohugs": {
        "author": ["Aikaterna"],
        "description": "Disables General Cog hug command so hugs from RolePlay cog can be used easily",
        "disabled": true,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Disables General Cog hug command.",
        "tags": ["general"],
        "type": "COG"
      },
      "ogey": {
        "author": ["Kuro", "Glas"],
        "description": "Generates a random Ogey image from an API.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Generates a random Ogey image.",
        "tags": ["image", "ogey", "rrat", "usada pekora"],
        "type": "COG"
      },
      "pfpimgen": {
        "author": ["PhenoM4n4n", "Glas"],
        "description": "Make images from avatars! (+20 new images) Forked from PhenoM4n4n",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["Pillow", "unidecode", "rapidfuzz"],
        "short": "Make images from avatars!",
        "tags": ["image"],
        "type": "COG"
      },
      "watamelon": {
        "author": ["Kuro", "Glas"],
        "description": "Generates a random Watamelon image from an API.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Generates a random Watamelon image.",
        "tags": ["image", "watamelon", "watame", "tsunomaki watame"],
        "type": "COG"
      },
      "weeedcog": {
        "author": ["luna"],
        "description": "Creates comics with random characters using a string of messages from a channel.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pillow"],
        "short": "Create comics from channel messages",
        "tags": [],
        "type": ""
      },
      "youwouldnt": {
        "author": ["Glas"],
        "description": "Make a image based on the classic meme",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["Pillow", "unidecode"],
        "short": "Steal a!",
        "tags": ["image"],
        "type": "COG"
      }
    },
    "short": "Silly cogs nobody would use."
  },
  "https://github.com/Dav-Git/Dav-Cogs": {
    "author": ["Dav"],
    "description": "Cogs for RED DiscordBot by Dav",
    "name": "Dav-Cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "altmarker": {
        "author": ["Dav"],
        "description": "Mark a user's alt accounts and get notified about them when you take a moderation action.\n Integrate this cog with alt-account identification services by hooking into the altmarker API.",
        "disabled": false,
        "end_user_data_statement": "This cog stores data about you and associated accounts for moderation purposes. This includes your User ID, Username and Discriminator as well as Information about other acconuts believed to be connected to you. By default this data is accessible to server moderators and administrators.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Mark alt accounts",
        "tags": [
          "notes",
          "alt",
          "moderation",
          "mark",
          "guild",
          "tools",
          "alt-accounts"
        ],
        "type": ""
      },
      "anonreporter": {
        "author": ["Dav"],
        "description": "Allow for users to report things anonymously",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Anonymous reports",
        "tags": [
          "report",
          "anonymous",
          "moderation",
          "global",
          "guild",
          "tools"
        ],
        "type": ""
      },
      "autoroler": {
        "author": ["Dav"],
        "description": "Assign roles to members when they join your server.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Autoroles on join",
        "tags": ["Autoroles", "roles", "Automation", "joinroles"],
        "type": ""
      },
      "botstatus": {
        "author": ["Dav"],
        "description": "Automattically sets a status on bot start/restart.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Custom startup status",
        "tags": [],
        "type": ""
      },
      "casereader": {
        "author": ["Dav"],
        "description": "A different approach to ``[p]casesfor``.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "A different approach to ``[p]casesfor``.",
        "tags": [
          "members",
          "mod",
          "moderation",
          "warnings",
          "checks",
          "tools",
          "modlog",
          "cases"
        ],
        "type": ""
      },
      "caserelayer": {
        "author": ["Dav"],
        "description": "Relay a modlog case to a user, without sending the ``Moderator`` field.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Relay modlog cases.",
        "tags": [
          "members",
          "mod",
          "moderation",
          "warnings",
          "checks",
          "tools",
          "modlog",
          "cases"
        ],
        "type": ""
      },
      "check": {
        "author": ["Dav"],
        "description": "Fuses ``[p]warnings``,``[p]listflags``,``[p]read``,``[p]userinfo`` and [p]names``",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Mod-Check a user",
        "tags": ["members", "mod", "moderation", "warnings", "checks", "tools"],
        "type": ""
      },
      "exclusiveroles": {
        "author": ["Dav"],
        "description": "Removes a role from a user as soon as another role is added.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Make roles (truly) exclusive",
        "tags": ["roles", "exclusive", "autorole", "tools"],
        "type": ""
      },
      "httpcat": {
        "author": ["Dav"],
        "description": "Get info on HTTP status codes from https://http.cat",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "HTTP but with kittens! Yeeehaw",
        "tags": [],
        "type": ""
      },
      "joinflag": {
        "author": ["Dav"],
        "description": "Put a one time note on a user which will get triggered when they re-join the server.",
        "disabled": false,
        "end_user_data_statement": "This cog does stores moderation notes attached to a user ID. The notes will be displayed when a user joins the server.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Flag a user on join",
        "tags": ["Moderation", "Flag", "Mod", "Note", "Modnote"],
        "type": ""
      },
      "mcwhitelister": {
        "author": ["Dav"],
        "description": "Manage your minecraft server whitelist from within discord.",
        "disabled": false,
        "end_user_data_statement": "This cog stores end user data in order to allow it to whitelist players on a minecraft server. It stores minecraft player names(and user IDs) as well as discord user IDs.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["aio-mc-rcon"],
        "short": "Sync Minecraft whitelist with discord.",
        "tags": ["Minecraft", "Whitelist", "Automation"],
        "type": ""
      },
      "modlogstats": {
        "author": ["Dav"],
        "description": "Get statistics about your modlog cases.",
        "disabled": false,
        "end_user_data_statement": "This cog stores no end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Modlog statistics",
        "tags": ["stats", "modlog", "statistics", "long-ass-command"],
        "type": ""
      },
      "mover": {
        "author": ["Dav"],
        "description": "Massmove voice users",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Massmove voice users",
        "tags": ["Voice", "Move", "Massmove"],
        "type": ""
      },
      "nicknamer": {
        "author": ["Dav"],
        "description": "Multiple Nickname tools",
        "disabled": false,
        "end_user_data_statement": "This cog stores nicknames and user IDs to allow for the freezing of nicknames and the temporary changing and restoring of nicknames.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Nickname toolkit",
        "tags": [],
        "type": ""
      },
      "prunecmd": {
        "author": ["Dav"],
        "description": "Calls the discord built-in prune function with a command.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Cleans up the member list.",
        "tags": ["members", "prune", "purge", "kick"],
        "type": ""
      },
      "rolesyncer": {
        "author": ["Dav"],
        "description": "Adds a role to a user when another specified role is added.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Sync roles to each other.",
        "tags": ["roles", "sync", "autorole", "tools"],
        "type": ""
      },
      "roomer": {
        "author": ["Dav"],
        "description": "Tools for voicechannels. \n - Automated voicechannel creation \n - Private voicechannels \n - Private textchannels",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Tools for voicechannels NEW: Private Text channels",
        "tags": [
          "members",
          "vc",
          "voicechannel",
          "textchannel",
          "automation",
          "private",
          "private channels",
          "tools"
        ],
        "type": ""
      },
      "stickymember": {
        "author": ["Dav", "Idea: Daniel_Edits"],
        "description": "Make members sticky so they keep their roles when re-joining.",
        "disabled": false,
        "end_user_data_statement": "This cog stores roles that have been assigned to a member so that these roles can be reassigned on rejoin. This data is only stored on members that have been added via command. You may delete this information by making a data deletion request.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Make members sticky. Ewww. Gross.",
        "tags": ["sticky", "roles", "moderation", "member", "guild", "tools"],
        "type": ""
      },
      "verifyer": {
        "author": ["Dav"],
        "description": "Add a safety barrier to your discord server and require users to run a command before accessing the server.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Force users to verify themselves.",
        "tags": ["safety", "security", "verification"],
        "type": ""
      }
    },
    "short": "Cogs made by Dav"
  },
  "https://github.com/Drapersniper/PyLav-Cogs": {
    "author": ["Draper"],
    "description": "A collection of official cogs using the PyLav framework.\nHelp translate the project to your language by contributing to <https://crowdin.com/project/pylav>; Translations will be made available as an update shortly after they are translated on Crowdin.\nFor issues, bugs, or suggestions contact me in the discord support server here: https://discord.com/invite/vnmcXqtgeY\nP.S. Make sure to have read the setup instructions for <https://github.com/PyLav/PyLav> (<https://github.com/PyLav/PyLav/blob/develop/SETUP.md>) to ensure you have set it up correctly before loading any cogs.",
    "name": "PyLav-Cogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "audio": {
        "author": ["Draper"],
        "description": "A full fledged media player using the PyLav framework.\nHelp translate the project to your language by contributing to <https://crowdin.com/project/pylav>; Translations will be made available as an update shortly after they are translated on Crowdin.\nFor issues, bugs, or suggestions contact me in the Discord support server here: https://discord.com/invite/vnmcXqtgeY\nP.S. Make sure to have read the setup instructions for <https://github.com/PyLav/PyLav> (<https://github.com/PyLav/PyLav/blob/master/SETUP.md>) to ensure you have set it up correctly before loading any cogs.",
        "disabled": false,
        "end_user_data_statement": "This cog will store user info needed for its functions - for example user IDs to remember user specific settings.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0.dev306",
        "min_python_version": [3, 11, 0],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": ["Py-Lav[all]>=1.11.0<1.12"],
        "short": "A media player cog",
        "tags": [
          "audio",
          "music",
          "spotify",
          "media player",
          "lavalink",
          "youtube",
          "tts",
          "mp3",
          "flac",
          "PyLav",
          "slash",
          "deezer",
          "apple music",
          "apple",
          "soundcloud",
          "sound cloud",
          "sound",
          "stream",
          "radio",
          "radio station",
          "radio stations",
          "twitch",
          "applemusic",
          "getyarn.io",
          "clyp.it",
          "clyp",
          "clypit",
          "pornhub",
          "reddit",
          "oc remix",
          "ocremix",
          "tiktok",
          "mixcloud",
          "tik tok",
          "soundgasm"
        ],
        "type": "COG"
      },
      "plconfig": {
        "author": ["Draper"],
        "description": "A configurator for PyLav.\nHelp translate the project to your language by contributing to <https://crowdin.com/project/pylav>; Translations will be made available as an update shortly after they are translated on Crowdin.\nFor issues, bugs, or suggestions contact me in the Discord support server here: https://discord.com/invite/vnmcXqtgeY\nP.S. Make sure to have read the setup instructions for <https://github.com/PyLav/PyLav> (<https://github.com/PyLav/PyLav/blob/master/SETUP.md>) to ensure you have set it up correctly before loading any cogs.",
        "disabled": false,
        "end_user_data_statement": "This cog will store user info needed for its functions - for example user IDs to remember user specific settings.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0.dev306",
        "min_python_version": [3, 11, 0],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": ["Py-Lav[all]>=1.11.0<1.12"],
        "short": "Configure PyLav's global settings.",
        "tags": [
          "audio",
          "music",
          "media player",
          "lavalink",
          "PyLav",
          "management",
          "slash"
        ],
        "type": "COG"
      },
      "plcontroller": {
        "author": ["Draper"],
        "description": "A hydra like controller for the PyLav player.\nHelp translate the project to your language by contributing to <https://crowdin.com/project/pylav>; Translations will be made available as an update shortly after they are translated on Crowdin.\nFor issues, bugs, or suggestions contact me in the Discord support server here: https://discord.com/invite/vnmcXqtgeY\nP.S. Make sure to have read the setup instructions for <https://github.com/PyLav/PyLav> (<https://github.com/PyLav/PyLav/blob/master/SETUP.md>) to ensure you have set it up correctly before loading any cogs.",
        "disabled": false,
        "end_user_data_statement": "This cog will store user info needed for its functions - for example user IDs to remember user specific settings.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0.dev306",
        "min_python_version": [3, 11, 0],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": ["Py-Lav[all]>=1.11.0<1.12"],
        "short": "A media player cog",
        "tags": [
          "audio",
          "music",
          "spotify",
          "media player",
          "lavalink",
          "PyLav",
          "hydra",
          "channel",
          "player"
        ],
        "type": "COG"
      },
      "pleffects": {
        "author": ["Draper"],
        "description": "Commands to manage and apply effects to the players.\nHelp translate the project to your language by contributing to <https://crowdin.com/project/pylav>; Translations will be made available as an update shortly after they are translated on Crowdin.\nFor issues, bugs, or suggestions contact me in the Discord support server here: https://discord.com/invite/vnmcXqtgeY\nP.S. Make sure to have read the setup instructions for <https://github.com/PyLav/PyLav> (<https://github.com/PyLav/PyLav/blob/master/SETUP.md>) to ensure you have set it up correctly before loading any cogs.",
        "disabled": false,
        "end_user_data_statement": "This cog will store user info needed for its functions - for example user IDs to remember user specific settings.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0.dev306",
        "min_python_version": [3, 11, 0],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": ["Py-Lav[all]>=1.11.0<1.12"],
        "short": "Commands to manage and apply effects to the players.",
        "tags": [
          "audio",
          "music",
          "media player",
          "lavalink",
          "PyLav",
          "filters",
          "effects",
          "nightcore",
          "channel mix",
          "distortion",
          "karaoke",
          "lowpass",
          "rotation",
          "timescale",
          "tremolo",
          "vibrato",
          "eq",
          "equalizer",
          "slash"
        ],
        "type": "COG"
      },
      "pllocal": {
        "author": ["Draper"],
        "description": "Commands to interact with local media files.\nHelp translate the project to your language by contributing to <https://crowdin.com/project/pylav>; Translations will be made available as an update shortly after they are translated on Crowdin.\nFor issues, bugs, or suggestions contact me in the Discord support server here: https://discord.com/invite/vnmcXqtgeY\nP.S. Make sure to have read the setup instructions for <https://github.com/PyLav/PyLav> (<https://github.com/PyLav/PyLav/blob/master/SETUP.md>) to ensure you have set it up correctly before loading any cogs.",
        "disabled": false,
        "end_user_data_statement": "This cog will store user info needed for its functions - for example user IDs to remember user specific settings.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0.dev306",
        "min_python_version": [3, 11, 0],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": ["Py-Lav[all]>=1.11.0<1.12"],
        "short": "Commands to interact with local media files.",
        "tags": [
          "audio",
          "music",
          "media player",
          "lavalink",
          "PyLav",
          "local",
          "mp3",
          "flac",
          "slash"
        ],
        "type": "COG"
      },
      "pllyrics": {
        "author": ["Draper"],
        "description": "A Simple cog to allow you to search lyrics for PyLav.\nHelp translate the project to your language by contributing to <https://crowdin.com/project/pylav>; Translations will be made available as an update shortly after they are translated on Crowdin.\nFor issues, bugs, or suggestions contact me in the Discord support server here: https://discord.com/invite/vnmcXqtgeY\nP.S. Make sure to have read the setup instructions for <https://github.com/PyLav/PyLav> (<https://github.com/PyLav/PyLav/blob/master/SETUP.md>) to ensure you have set it up correctly before loading any cogs.",
        "disabled": false,
        "end_user_data_statement": "This cog will store user info needed for its functions - for example user IDs to remember user specific settings.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0.dev306",
        "min_python_version": [3, 11, 0],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": ["Py-Lav[all]>=1.11.0<1.12"],
        "short": "Commands to interact with track lyrics.",
        "tags": ["audio", "music", "lavalink", "utilities", "PyLav", "lyrics"],
        "type": "COG"
      },
      "plmanagednode": {
        "author": ["Draper"],
        "description": "Commands to configure Pylav's managed node.\nHelp translate the project to your language by contributing to <https://crowdin.com/project/pylav>; Translations will be made available as an update shortly after they are translated on Crowdin.\nFor issues, bugs, or suggestions contact me in the Discord support server here: https://discord.com/invite/vnmcXqtgeY\nP.S. Make sure to have read the setup instructions for <https://github.com/PyLav/PyLav> (<https://github.com/PyLav/PyLav/blob/master/SETUP.md>) to ensure you have set it up correctly before loading any cogs.",
        "disabled": false,
        "end_user_data_statement": "This cog will store user info needed for its functions - for example user IDs to remember user specific settings.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0.dev306",
        "min_python_version": [3, 11, 0],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": ["Py-Lav[all]>=1.11.0<1.12"],
        "short": "Commands to configure Pylav's managed node.",
        "tags": [
          "audio",
          "music",
          "media player",
          "lavalink",
          "PyLav",
          "node",
          "management"
        ],
        "type": "COG"
      },
      "plmigrator": {
        "author": ["Draper"],
        "description": "A simple cog to migrate all compatible settings from Red's Audio cog to PyLav.\nHelp translate the project to your language by contributing to <https://crowdin.com/project/pylav>; Translations will be made available as an update shortly after they are translated on Crowdin.\nFor issues, bugs, or suggestions contact me in the Discord support server here: https://discord.com/invite/vnmcXqtgeY\nP.S. Make sure to have read the setup instructions for <https://github.com/PyLav/PyLav> (<https://github.com/PyLav/PyLav/blob/master/SETUP.md>) to ensure you have set it up correctly before loading any cogs.",
        "disabled": false,
        "end_user_data_statement": "This cog will store user info needed for its functions - for example user IDs to remember user specific settings.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0.dev306",
        "min_python_version": [3, 11, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["Py-Lav[all]>=1.11.0<1.12"],
        "short": "Convert your Audio settings to PyLav.",
        "tags": [
          "audio",
          "music",
          "media player",
          "lavalink",
          "settings",
          "migration",
          "PyLav"
        ],
        "type": "COG"
      },
      "plnodes": {
        "author": ["Draper"],
        "description": "A collection of node controller commands for PyLav.\nHelp translate the project to your language by contributing to <https://crowdin.com/project/pylav>; Translations will be made available as an update shortly after they are translated on Crowdin.\nFor issues, bugs, or suggestions contact me in the Discord support server here: https://discord.com/invite/vnmcXqtgeY\nP.S. Make sure to have read the setup instructions for <https://github.com/PyLav/PyLav> (<https://github.com/PyLav/PyLav/blob/master/SETUP.md>) to ensure you have set it up correctly before loading any cogs.",
        "disabled": false,
        "end_user_data_statement": "This cog will store user info needed for its functions - for example user IDs to remember user specific settings.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0.dev306",
        "min_python_version": [3, 11, 0],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": ["Py-Lav[all]>=1.11.0<1.12"],
        "short": "A collection of node controller commands for PyLav.",
        "tags": [
          "audio",
          "music",
          "media player",
          "lavalink",
          "PyLav",
          "management"
        ],
        "type": "COG"
      },
      "plnotifier": {
        "author": ["Draper"],
        "description": "A configurator for the notification system of PyLav.\nHelp translate the project to your language by contributing to <https://crowdin.com/project/pylav>; Translations will be made available as an update shortly after they are translated on Crowdin.\nFor issues, bugs, or suggestions contact me in the Discord support server here: https://discord.com/invite/vnmcXqtgeY\nP.S. Make sure to have read the setup instructions for <https://github.com/PyLav/PyLav> (<https://github.com/PyLav/PyLav/blob/master/SETUP.md>) to ensure you have set it up correctly before loading any cogs.",
        "disabled": false,
        "end_user_data_statement": "This cog will store user info needed for its functions - for example user IDs to remember user specific settings.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0.dev306",
        "min_python_version": [3, 11, 0],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": ["Py-Lav[all]>=1.11.0<1.12"],
        "short": "Configure PyLav's notifications.",
        "tags": [
          "audio",
          "music",
          "spotify",
          "media player",
          "lavalink",
          "youtube",
          "tts",
          "mp3",
          "flac",
          "PyLav",
          "management"
        ],
        "type": "COG"
      },
      "plplaylists": {
        "author": ["Draper"],
        "description": "Playlist expansion to PyLav.\nHelp translate the project to your language by contributing to <https://crowdin.com/project/pylav>; Translations will be made available as an update shortly after they are translated on Crowdin.\nFor issues, bugs, or suggestions contact me in the Discord support server here: https://discord.com/invite/vnmcXqtgeY\nP.S. Make sure to have read the setup instructions for <https://github.com/PyLav/PyLav> (<https://github.com/PyLav/PyLav/blob/master/SETUP.md>) to ensure you have set it up correctly before loading any cogs.",
        "disabled": false,
        "end_user_data_statement": "This cog will store user info needed for its functions - for example user IDs to remember user specific settings.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0.dev306",
        "min_python_version": [3, 11, 0],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": ["Py-Lav[all]>=1.11.0<1.12"],
        "short": "Control Playlists from PyLav",
        "tags": [
          "audio",
          "music",
          "spotify",
          "media player",
          "lavalink",
          "youtube",
          "tts",
          "mp3",
          "flac",
          "playlists",
          "PyLav",
          "slash"
        ],
        "type": "COG"
      },
      "plradio": {
        "author": ["Draper"],
        "description": "This cogs allows you to interact with <https://www.radio-browser.info/> to gain access to 30,000+ radio stations.",
        "disabled": false,
        "end_user_data_statement": "This cog will store user info needed for its functions - for example user IDs to remember user specific settings.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0.dev306",
        "min_python_version": [3, 11, 0],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": ["Py-Lav[all]>=1.11.0<1.12"],
        "short": "Apply some equalizer presets to the PyLav player.",
        "tags": [
          "audio",
          "music",
          "media player",
          "lavalink",
          "PyLav",
          "radio",
          "RadioBrowser",
          "station",
          "slash"
        ],
        "type": "COG"
      },
      "plutils": {
        "author": ["Draper"],
        "description": "A bunch of utility commands for PyLav cogs.\nHelp translate the project to your language by contributing to <https://crowdin.com/project/pylav>; Translations will be made available as an update shortly after they are translated on Crowdin.\nFor issues, bugs, or suggestions contact me in the Discord support server here: https://discord.com/invite/vnmcXqtgeY\nP.S. Make sure to have read the setup instructions for <https://github.com/PyLav/PyLav> (<https://github.com/PyLav/PyLav/blob/master/SETUP.md>) to ensure you have set it up correctly before loading any cogs.",
        "disabled": false,
        "end_user_data_statement": "This cog will store user info needed for its functions - for example user IDs to remember user specific settings.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0.dev306",
        "min_python_version": [3, 11, 0],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": ["Py-Lav[all]>=1.11.0<1.12"],
        "short": "A bunch of utility commands for PyLav cogs.",
        "tags": [
          "audio",
          "music",
          "media player",
          "lavalink",
          "utilities",
          "PyLav",
          "management"
        ],
        "type": "COG"
      }
    },
    "short": "Official cogs for PyLav."
  },
  "https://github.com/Flame442/FlameBountyCogs": {
    "author": ["Flame442 (Flame#2941)"],
    "description": "A mixture of *bounty* cogs made by Flame.",
    "name": "FlameBountyCogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "blinder": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Create custom roles that remove certain roles and hide channels from users.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Create custom roles that remove certain roles and hide channels from users.",
        "tags": ["utility"],
        "type": ""
      },
      "dynamicchannellist": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Create dynamically updating channel lists.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Create dynamically updating channel lists.",
        "tags": ["utility"],
        "type": ""
      },
      "flamecogsdebug": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Debug tools for FlameCogs.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Debug tools for FlameCogs.",
        "tags": ["debug"],
        "type": ""
      },
      "globalban": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Execute a ban across all of the bot's servers.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Execute a ban across all of the bot's servers.",
        "tags": ["ban"],
        "type": ""
      },
      "lastping": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "View how long servers have lasted without a mass mention.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "View how long servers have lasted without a mass mention.",
        "tags": ["fun"],
        "type": ""
      },
      "listmaker": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Make lists to store personal data.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["tabulate"],
        "short": "Make lists to store personal data.",
        "tags": ["utility"],
        "type": ""
      },
      "lovecalc": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Calculate the love between two people.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Calculate the love between two people.",
        "tags": ["fun"],
        "type": ""
      },
      "quotes": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Store and display quotes.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Store and display quotes.",
        "tags": [],
        "type": ""
      },
      "tellme": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Create custom commands that will DM members and post messages in servers.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Create custom commands with DMs and server messages.",
        "tags": ["utility"],
        "type": ""
      }
    },
    "short": "A mixture of *bounty* cogs made by Flame."
  },
  "https://github.com/Flame442/FlameCogs": {
    "author": ["Flame442 (Flame#2941)"],
    "description": "A mixture of cogs made by Flame.",
    "name": "FlameCogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "battleship": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Play battleship with a friend.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pillow"],
        "short": "Play battleship with a friend.",
        "tags": ["fun", "games", "battleship"],
        "type": ""
      },
      "deepfry": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Deepfry or nuke images passively and actively.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pillow"],
        "short": "Deepfry or nuke images.",
        "tags": ["fun", "deepfry", "nuke", "fry"],
        "type": ""
      },
      "face": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Find and describe the faces in an image.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pillow"],
        "short": "Find and describe the faces in an image.",
        "tags": ["fun", "face"],
        "type": ""
      },
      "gameroles": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Grant roles when a user is playing a specific game.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Grant roles when a user is playing a specific game.",
        "tags": ["utility", "role"],
        "type": ""
      },
      "giftaway": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Create first come, first serve key giveaways.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Create first come, first serve key giveaways.",
        "tags": ["utility"],
        "type": ""
      },
      "hangman": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Play hangman with the bot.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Play hangman with the bot.",
        "tags": ["fun", "games", "hangman"],
        "type": ""
      },
      "hider": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Hide commands from users in help.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Hide commands from users in help.",
        "tags": ["utility"],
        "type": ""
      },
      "monopoly": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Play a game of monopoly with members of your server.",
        "disabled": false,
        "end_user_data_statement": "This cog stores user ids in order to identify the players in saved games.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pillow"],
        "short": "Play a game of monopoly.",
        "tags": ["fun", "games", "monopoly"],
        "type": ""
      },
      "onlinestats": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Information about what devices people are using to run discord.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Information about what devices people are using to run discord.",
        "tags": ["utility", "online"],
        "type": ""
      },
      "partygames": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Chat games focused on coming up with words from 3 letters.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Chat games focused on coming up with words from 3 letters.",
        "tags": ["fun", "games", "chat"],
        "type": ""
      },
      "pokemonduel": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Battle in a Pokemon Duel with another member of your server.",
        "disabled": false,
        "end_user_data_statement": "This cog stores user ids in order to track your party of pokemon.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Battle in a Pokemon Duel with another member of your server.",
        "tags": ["fun", "games", "pokemon"],
        "type": ""
      },
      "simpleembed": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Simply send embeds.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Simply send embeds.",
        "tags": ["utility", "embed"],
        "type": ""
      },
      "stocks": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Buy and sell stocks with bot currency.",
        "disabled": false,
        "end_user_data_statement": "This cog stores a user id in order to know what stocks have been purchased by each user. Data is only collected when a user directly interacts with the cog and its commands.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Buy and sell stocks with bot currency.",
        "tags": ["utility", "stock"],
        "type": ""
      },
      "wordstats": {
        "author": ["Flame442 (Flame#2941)"],
        "description": "Tracks the most commonly used words by every member and in every server.",
        "disabled": false,
        "end_user_data_statement": "This cog persistently stores the number of times every unique word is said per-user per-guild. Data is collected on every message the bot can see unless the guild, channel, or user have opted out. Users can request that their data is deleted using `[p]wordstatsset forgetme` and can request to opt out of data collection using `[p]wordstatsset user no`.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev1",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Tracks commonly used words.",
        "tags": ["fun", "utility", "stats"],
        "type": ""
      }
    },
    "short": "A mixture of cogs made by Flame."
  },
  "https://github.com/Injabie3/lui-cogs-v3": {
    "author": [
      "Injabie3#1660",
      "sedruk",
      "KaguneAstra#6000",
      "TheDarkBot#1677",
      "quachtridat\u30fb\u305f\u3064#8232"
    ],
    "description": "A plethora of utility cogs by the SFU Anime Club. Some cogs were ported from the v2 days of Red.",
    "name": "lui-cogs-v3",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "afterhours": {
        "author": [
          "Injabie3#1660",
          "KaguneAstra#6000",
          "TheDarkBot#1677",
          "quachtridat\u30fb\u305f\u3064#8232"
        ],
        "description": "This cog applies cog-specific exceptions for the #after-hours channel in SAD. Its use is limited outside of the club.",
        "disabled": false,
        "end_user_data_statement": "This cog stores when a user last spoke in a configured channel.",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "SAD's exception cog handling for #after-hours",
        "tags": [],
        "type": ""
      },
      "avatar": {
        "author": ["Injabie3#1660"],
        "description": "This cog saves avatar images of users for year-end video making purposes",
        "disabled": false,
        "end_user_data_statement": "This cog will store users' avatar images",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Save avatar images of users",
        "tags": [],
        "type": ""
      },
      "birthday": {
        "author": ["Injabie3#1660", "TheDarkBot#1677"],
        "description": "This cog assigns and at-mentions a user on their birthday.",
        "disabled": false,
        "end_user_data_statement": "This cog will associate a user's Discord ID with the month and day of their birthday, when entered.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["python-dateutil"],
        "short": "Assign and at-mention a user on their birthday",
        "tags": ["at-mention", "birthday", "notifications", "roles"],
        "type": ""
      },
      "catgirl": {
        "author": ["Injabie3#1660"],
        "description": "This cog allows you to post cute, random catgirls from a local database.",
        "disabled": false,
        "end_user_data_statement": "This cog doesn't store any user specific information.",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["requests"],
        "short": "Display cut images of catgirls.",
        "tags": ["catgirl", "images"],
        "type": ""
      },
      "goodsmileinfo": {
        "author": ["Injabie3#1660"],
        "description": "This cog checks the Good Smile Company (GSC) website for news every hour and posts it to a configurable channel.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store user-specific settings.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["aiohttp", "bs4"],
        "short": "Post news from Good Smile Company's (GSC) website to a channel",
        "tags": ["news"],
        "type": ""
      },
      "heartbeat": {
        "author": ["Injabie3#1660"],
        "description": "This cog allows you to punch a heartbeat to an uptime checker like StatusCake.",
        "disabled": false,
        "end_user_data_statement": "This cog only stores the URL to your uptime checker.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["requests"],
        "short": "Punch a heartbeat to an uptime checker",
        "tags": ["heartbeat", "uptime"],
        "type": ""
      },
      "highlight": {
        "author": ["Injabie3#1660", "sedruk"],
        "description": "This cog is a Slack-like feature that allows users to be notified based on specific words outside of at-mentions",
        "disabled": false,
        "end_user_data_statement": "This cog stores user-defined settings, including their Discord ID in order to associate their preferences.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "DM a user on words they care about.",
        "tags": ["notifications", "dm"],
        "type": ""
      },
      "qrchecker": {
        "author": [
          "Injabie3#1660",
          "TheDarkBot#1677",
          "quachtridat\u30fb\u305f\u3064#8232"
        ],
        "description": "This cog scans for QR codes in image attachments, and posts their contents in a reply.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store user-specific settings.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pyzbar", "Pillow"],
        "short": "Scan image attachments for QR codes, and post its contents",
        "tags": ["qrcode", "image"],
        "type": ""
      },
      "ranks": {
        "author": ["Injabie3#1660"],
        "description": "This cog allows users to collect points and level up on a per-server basis.",
        "disabled": false,
        "end_user_data_statement": "This cog associates user experience with a user's discord ID.",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["mysqlclient"],
        "short": "A Mee6-inspired guild rank management system.",
        "tags": ["info", "ranks", "rankings"],
        "type": ""
      },
      "respects": {
        "author": ["Injabie3#1660", "quachtridat\u30fb\u305f\u3064#8232"],
        "description": "This cog allows users to pay respects, aggregating closely paid respects into one message. It supports replies.",
        "disabled": false,
        "end_user_data_statement": "This cog stores guild-defined settings, and a user's Discord ID for the purpose of aggregating respects into a single message.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Press f to pay respects.",
        "tags": [],
        "type": ""
      },
      "roleassigner": {
        "author": ["Injabie3#1660"],
        "description": "This cog allows you to assign random roles from a pool to all users or users of a particular role.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Randomly assign roles to certain users from a pool of roles.",
        "tags": ["roles"],
        "type": ""
      },
      "rss": {
        "author": ["Injabie3#1660", "KaguneAstra#6000", "sedruk"],
        "description": "This cog allows you to post new items from an RSS feed to a text channel of your choice.",
        "disabled": false,
        "end_user_data_statement": "This cog doesn't store any user specific information.",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["aiohttp", "bs4", "feedparser"],
        "short": "Post new entries from RSS feeds to a text channel.",
        "tags": ["news", "rss"],
        "type": ""
      },
      "servermanage": {
        "author": ["Injabie3#1660", "TheDarkBot#1677"],
        "description": "This cog allows server owners to automatically change server icons and banners on given days by uploading relevant images in advance. Useful for themed events. Requires level 2 Server Boosts for banners.",
        "disabled": false,
        "end_user_data_statement": "This cog stores server images and banners in order to change them on certain days.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Manage your server's collection of banners and icons",
        "tags": ["server", "management", "banner", "icon"],
        "type": ""
      },
      "sfu": {
        "author": ["brenfan#9943", "Injabie3#1660"],
        "description": "This cog allows users to query SFU's public information, such as webcams, course information, and road reports.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any user information.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["bs4", "requests"],
        "short": "Access Simon Fraser University (SFU) public information.",
        "tags": ["sfu", "info"],
        "type": ""
      },
      "slashsync": {
        "author": ["Injabie3#1660"],
        "description": "This cog syncs slash commands when Red connects to Discord and exposes a `sync` command to do it on the fly.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any user information.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Sync slash commands to Discord",
        "tags": ["slash commands", "hybrid commands"],
        "type": ""
      },
      "smartreact": {
        "author": ["FlapJack#5505", "Injabie3#1660", "KamiCreed#7290"],
        "description": "A v2 port of flapjax's SmartReact cog, with the ability to refresh custom emojis.",
        "disabled": false,
        "end_user_data_statement": "This cog doesn't store private user information.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": ["add_reactions"],
        "required_cogs": {},
        "requirements": [],
        "short": "Automatically react to messages with emojis.",
        "tags": ["reactions"],
        "type": ""
      },
      "spoilers": {
        "author": ["Injabie3#1660"],
        "description": "This is a v2 port of our legacy spoiler cog. This was done to port over reaction-based spoilers before Discord had native support for them.",
        "disabled": false,
        "end_user_data_statement": "This cog doesn't store private user information.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Legacy v2 cog to support emoji-based spoilers in v3.",
        "tags": ["spoilers"],
        "type": ""
      },
      "stats": {
        "author": ["Injabie3#1660"],
        "description": "This cog allows you to show statistics about your server",
        "disabled": false,
        "end_user_data_statement": "This cog doesn't store any user specific information.",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Display stats about your server",
        "tags": ["info", "statistics", "stats"],
        "type": ""
      },
      "tags": {
        "author": ["Rapptz", "Injabie3#1660"],
        "description": "This cog is a port of the Danny bot's tags module by Rapptz from the async branch days, with addition modifications.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store user-specific settings.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Save repetitive messages in a short tag for later access.",
        "tags": ["fun", "tags"],
        "type": ""
      },
      "tempchannels": {
        "author": ["Injabie3#1660", "KaguneAstra#6000"],
        "description": "This cog helps create a temporary text channel for a certain duration, and is automatically deleted afterwards. Supports role locking and more",
        "disabled": false,
        "end_user_data_statement": "This cog does not store user-related information.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Create a temporary text channel.",
        "tags": ["temporary"],
        "type": ""
      },
      "triggered": {
        "author": ["Injabie3#1660", "\u304f\u305a\u307e#0420"],
        "description": "This cog is a custom rework of spoopy's triggered command, except with more :)",
        "disabled": false,
        "end_user_data_statement": "This cog stores a user's avatar to create the triggered image.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["Pillow"],
        "short": "Feeling triggered? Say no more, fam.",
        "tags": ["fun"],
        "type": ""
      },
      "vxtwitterconverter": {
        "author": ["JadeRabbit#9310"],
        "description": "Converts Twitter link to VxTwitter for better video embeds",
        "disabled": false,
        "end_user_data_statement": "no data is stored",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": ["manage_messages"],
        "required_cogs": {},
        "requirements": ["urlextract"],
        "short": "twitter embed fix when?",
        "tags": ["server"],
        "type": ""
      },
      "welcome": {
        "author": ["Injabie3#1660"],
        "description": "This cog sends a server-configurable DM message to a user when they join. It also logs when a user joins or leaves a server in a configurable channel.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store user-specific settings.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "DM a user when they join the server, and log server join/leaves in a channel",
        "tags": ["notifications", "dm"],
        "type": ""
      },
      "wordfilter": {
        "author": ["Injabie3#1660", "sedruk"],
        "description": "This cog allows you to filter messages in text-channel. It uses regex, and allows you to disable filtering in certain text channels, among other things. For developers, it exposes a public API for other cogs to hook into to see if a text blob contains a filtered word.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Smarter word filtering",
        "tags": [],
        "type": ""
      },
      "yourlsClient": {
        "author": ["Injabie3#1660"],
        "description": "This cog allows you to manage a YOURLS instance on a per-guild basis. It requires the `yourls-api-delete`, `yourls-api-edit-url`, and `yourls-api-search-keywords` plugins to be installed on your YOURLS instance.",
        "disabled": false,
        "end_user_data_statement": "This cog stores the API endpoint and signature in order to connect and authenticate to your YOURLS instance.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/Injabie3/yourls-python.git@1.2.3"
        ],
        "short": "Manage your YOURLS instance from Discord!",
        "tags": ["url-shortener"],
        "type": ""
      }
    },
    "short": "Utility cogs maintained by the SFU Anime Club"
  },
  "https://github.com/Jackenmen/JackCogs": {
    "author": ["Jakub Kuczys (https://github.com/Jackenmen)"],
    "description": "Cogs requested by others and those that I wanted for Red myself.",
    "name": "JackCogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "autogist": {
        "author": ["Jakub Kuczys (https://github.com/Jackenmen)"],
        "description": "Auto-upload files with configured extension sent by users to gist.github.com.",
        "disabled": false,
        "end_user_data_statement": "This cog auto-uploads attachments to gist.github.com uploaded by users as configured by the guild administrators.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["cachetools~=5.0", "gidgethub~=5.0"],
        "short": "Auto-upload files with configured extension sent by users to gist.github.com.",
        "tags": ["autogist", "github", "tools", "utility"],
        "type": "COG"
      },
      "banmessage": {
        "author": ["Jakub Kuczys (https://github.com/Jackenmen)"],
        "description": "Send message on ban in a chosen channel. Supports images!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Send message on ban in a chosen channel. Supports images!",
        "tags": ["banmessage", "tools", "utility"],
        "type": "COG"
      },
      "categoryhelp": {
        "author": ["Jakub Kuczys (https://github.com/Jackenmen)"],
        "description": "Command for getting help for category that ignores case-sensitivity.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Command for getting help for category that ignores case-sensitivity.",
        "tags": ["categoryhelp", "help", "tools", "utility"],
        "type": "COG"
      },
      "emojiinfo": {
        "author": ["Jakub Kuczys (https://github.com/Jackenmen)"],
        "description": "Get information about emojis and see how to use them in your code.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["emoji~=1.2"],
        "short": "Get information about emojis and see how to use them in your code.",
        "tags": ["dev", "development", "emojiinfo", "tools", "utility"],
        "type": "COG"
      },
      "linkwarner": {
        "author": ["Jakub Kuczys (https://github.com/Jackenmen)"],
        "description": "Remove messages containing links and warn users for it. Comes with settings for excluding roles and including/excluding url domains!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Remove messages containing links and warn users for it.",
        "tags": ["linkwarner", "moderation", "tools", "utility"],
        "type": "COG"
      },
      "mee6rank": {
        "author": ["Jakub Kuczys (https://github.com/Jackenmen)"],
        "description": "Shows detailed information about your Mee6 rank like amount of XP amount of XP and estimated amount of messages needed to reach next level and next level role.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pillow~=9.1"],
        "short": "Get detailed information about your Mee6 rank.",
        "tags": ["api", "leveling", "mee6", "rank", "tools"],
        "type": "COG"
      },
      "membercount": {
        "author": ["Jakub Kuczys (https://github.com/Jackenmen)"],
        "description": "Get count of all members + humans and bots separately.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Get count of all members + humans and bots separately.",
        "tags": ["tools", "utility"],
        "type": "COG"
      },
      "modroles": {
        "author": ["Jakub Kuczys (https://github.com/Jackenmen)"],
        "description": "Allow moderators without manage roles permission to assign configured roles to users.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Allow moderators without manage roles permission to assign configured roles to users.",
        "tags": ["moderation", "modroles", "roles", "tools", "utility"],
        "type": "COG"
      },
      "nitrorole": {
        "author": ["Jakub Kuczys (https://github.com/Jackenmen)"],
        "description": "Welcome new nitro boosters and/or give them a special role!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.\nDiscord IDs of users may occasionally be logged to file as part of error logging.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Welcome new nitro boosters and/or give them a special role!",
        "tags": ["announce", "booster", "nitro", "nitrorole", "welcome"],
        "type": "COG"
      },
      "qupyter": {
        "author": ["Jakub Kuczys (https://github.com/Jackenmen)"],
        "description": "Run IPython kernel within Red and connect to it with Jupyter Console. This is a development tool.\n\nWARNING: This cog is meant for development instances and should NOT ever be used in production environment.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "ipykernel~=5.4",
          "ipyparallel",
          "jedi<0.16.0",
          "tornado>=6.1"
        ],
        "short": "Run IPython kernel within Red and connect to it with Jupyter Console. This is a development tool.",
        "tags": ["dev", "development", "qupyter", "tools", "utility"],
        "type": "COG"
      },
      "rlstats": {
        "author": ["Jakub Kuczys (https://github.com/Jackenmen)"],
        "description": "Shows you Rocket League player statistics. The cog needs access to Rocket League API which is currently in closed beta.",
        "disabled": false,
        "end_user_data_statement": "This cog stores data provided by users for the purpose of better user experience.\nIt does not store user data which was not provided through a command.\nUsers may remove their own data without making a data removal request.\nThis cog will remove data when a data removal request is made.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pillow~=9.1", "rlapi==0.6.0a1"],
        "short": "Get your Rocket League stats with a single command! Needs access to Rocket League API which is currently in closed beta.",
        "tags": ["api", "gaming", "rlstats", "rocketleague"],
        "type": "COG"
      },
      "rssnotifier": {
        "author": ["Jakub Kuczys (https://github.com/Jackenmen)"],
        "description": "Get role and/or user mentions about feed updates. This cog requires RSS cog from aikaterna-cogs repo to work.",
        "disabled": false,
        "end_user_data_statement": "This cog stores Discord user IDs when the user explicitly opts in receiving mentions about feed updates.\nNo personal identifiable data is stored by this cog.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {
          "rss": "https://github.com/aikaterna/aikaterna-cogs"
        },
        "requirements": [],
        "short": "Get role and/or user mentions about feed updates. This cog requires RSS cog from aikaterna-cogs repo to work.",
        "tags": ["notifications", "rss", "rssnotifier", "tools", "utility"],
        "type": "COG"
      },
      "shell": {
        "author": ["Jakub Kuczys (https://github.com/Jackenmen)"],
        "description": "Run shell commands on bot's system from Discord.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Run shell commands on bot's system from Discord.",
        "tags": ["bash", "dev", "development", "shell", "tools", "utility"],
        "type": "COG"
      },
      "voicetools": {
        "author": ["Jakub Kuczys (https://github.com/Jackenmen)"],
        "description": "Various tools to make voice channels better!\nAvailable modules:\n- VIP - Set users and roles not counting to user limit on voice channel\n- ForceLimit - Force user limit to all members of the server including admins (kick user when exceeding limit)",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store end user data. This cog does store discord IDs as needed for operation.\nDiscord IDs of users may occasionally be logged to file as part of debug logging.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Various tools to make voice channels better!",
        "tags": ["tools", "utility", "voice", "voicetools"],
        "type": "COG"
      }
    },
    "short": "Cogs for Red V3 by Jakub Kuczys (https://github.com/Jackenmen)."
  },
  "https://github.com/Jintaku/Jintaku-Cogs-V3": {
    "author": ["Jintaku", "Wyn"],
    "description": "Awesome cogs made by the Jintaku community",
    "name": "Jintaku-Cogs-V3",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {},
    "short": "Cogs made by the Jintaku community"
  },
  "https://github.com/Just-Jojo/JojoCogs": {
    "author": ["Jojo#7791"],
    "description": "Just a bunch of weird cogs developed by Jojo.",
    "name": "JojoCogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "advancedblacklist": {
        "author": ["Jojo#7791"],
        "description": "An advanced blacklist cog allowing you to get more out of the blacklist feature.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "An advanced blacklist cog",
        "tags": ["utility", "blacklist"],
        "type": "COG"
      },
      "advancedinvite": {
        "author": ["Jojo#7791"],
        "description": "Embeds the invite command if possible.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["emoji==1.7"],
        "short": "Embed the invite command",
        "tags": ["Utility"],
        "type": "COG"
      },
      "cmdlogger": {
        "author": ["Jojo#7791"],
        "description": "Log when certain commands get used. This will always log to the console and can optionally log to a channel.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Log command usage",
        "tags": ["utility", "log", "command"],
        "type": "COG"
      },
      "cyclestatus": {
        "author": ["Jojo#7791"],
        "description": "Cycle the status on your bot so you don't have to update it constantly",
        "disabled": false,
        "end_user_data_statement": "This cog does not store user data",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Cycle your bot's status",
        "tags": ["utility", "status"],
        "type": "COG"
      },
      "errorblacklist": {
        "author": ["Jojo#7791"],
        "description": "Blacklist users if they use a command that errors too many times",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Blacklist users if they use a command that errors too many times",
        "tags": ["utility,", "blacklist"],
        "type": "COG"
      },
      "modnotes": {
        "author": ["Jojo#7791"],
        "description": "Allow moderators to make notes about users",
        "disabled": false,
        "end_user_data_statement": "This cog stores \"notes\" on users via ids.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Log/Make notes about users",
        "tags": ["utility", "moderation", "mod", "notes"],
        "type": "COG"
      },
      "todo": {
        "author": ["Jojo#7791"],
        "description": "A board designed for keeping track of your tasks.",
        "disabled": false,
        "end_user_data_statement": "This cog stores \"tasks\" via user ids.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["tabulate", "emoji==1.7"],
        "short": "Keep track of things todo",
        "tags": ["todo", "utility"],
        "type": "COG"
      }
    },
    "short": "Silly (and sometimes useful) cogs by Jojo"
  },
  "https://github.com/Kowlin/Sentinel": {
    "author": ["Kowlin#2536"],
    "description": "Moderation oriented cogs built for Red-DiscordBot",
    "name": "Sentinel",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "antirp": {
        "author": ["Kowlin"],
        "description": "Block any type of rich presence invites",
        "disabled": false,
        "end_user_data_statement": "This cog stores no personal data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Block any type of rich presence invites",
        "tags": ["Moderation", "Rich Presence"],
        "type": "COG"
      },
      "freshmeat": {
        "author": ["Kowlin", "JennJenn", "Irdumb (v2 iteration)"],
        "description": "Check out the latest bunch of members with Freshmeat",
        "disabled": false,
        "end_user_data_statement": "This cog stores no personal data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Check out the latest bunch of members with Freshmeat",
        "tags": ["moderation", "members"],
        "type": "COG"
      },
      "githubcards": {
        "author": [
          "Kowlin (Kowlin#2536)",
          "jack1142 (Jackenmen#6607)",
          "mikeshardmind (Sinbad#1871)"
        ],
        "description": "Ever wanted to embed a github issue?! Well **now** you can! With GitHubCards, this sweet cog allows you to embed any issue from any public repo you like by using a unique prefix!\n*Warning: GithubCards will blow your mind!*",
        "disabled": false,
        "end_user_data_statement": "This cog stores no personal data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Embed GitHub issues on your discord chat.",
        "tags": ["api", "github", "utility"],
        "type": "COG"
      },
      "massmove": {
        "author": ["Kowlin"],
        "description": "Massmove members out of voice channels.",
        "disabled": false,
        "end_user_data_statement": "This cog stores no personal data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Massmove members out of voice channels.",
        "tags": ["moderation", "massmove", "voice", "voicemoderation"],
        "type": "COG"
      }
    },
    "short": "Moderation oriented cogs built for Red-DiscordBot"
  },
  "https://github.com/Kuro-Rui/Kuro-Cogs": {
    "author": ["Kuro"],
    "description": "Some cogs made by Kuro for Red-DiscordBot v3.",
    "name": "Kuro-Cogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "avatarimgen": {
        "author": ["Kuro"],
        "description": "Make images from avatars using Pop Cat API!",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Make images from avatars!",
        "tags": ["api", "avatar", "imgen"],
        "type": "COG"
      },
      "calendarcog": {
        "author": ["Kuro"],
        "description": "See the calendar on Discord!",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "See the calendar on Discord!",
        "tags": ["calendar", "date"],
        "type": "COG"
      },
      "chairs": {
        "author": ["Kuro"],
        "description": "Play the game of Chairs in Discord!",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Play the game of Chairs in Discord!",
        "tags": ["chairs", "fun", "game", "minigame"],
        "type": "COG"
      },
      "cogcount": {
        "author": ["Kuro"],
        "description": "Have you ever wondered, how many commands/cogs does your bot has? Well this cog can help with that!",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "A cog that shows how many commands/cogs the bot has.",
        "tags": ["cogs", "commands", "count"],
        "type": "COG"
      },
      "dankutils": {
        "author": ["Kuro"],
        "description": "Dank Memer related commands and utilities.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["emoji"],
        "short": "Dank Memer commands.",
        "tags": ["dankmemer", "dank memer"],
        "type": "COG"
      },
      "fakemod": {
        "author": ["Kuro"],
        "description": "Fake moderation commands for fun!",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["emoji"],
        "short": "Fake moderation commands.",
        "tags": ["ben", "fake", "fakemod", "kik", "myut", "worn"],
        "type": "COG"
      },
      "fumo": {
        "author": ["Kuro"],
        "description": "Generates a random Fumo image \u15dc\u02ec\u15dc",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pillow"],
        "short": "Generates a random Fumo image \u15dc\u02ec\u15dc",
        "tags": ["image", "fumo", "touhou"],
        "type": "COG"
      },
      "osu": {
        "author": ["Kuro"],
        "description": "Displays detailed user information about osu! users.",
        "disabled": false,
        "end_user_data_statement": "This cog stores OAuth access and refresh tokens to interact with osu! API. This data can be deleted at any time by revoking client access from osu! settings, using `[p]osu unlink` command, or `[p]mydata forgetme` command.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["git+https://github.com/NiceAesth/aiosu", "emoji"],
        "short": "Display user information from osu!",
        "tags": ["osu", "osu!"],
        "type": "COG"
      },
      "reactlog": {
        "author": ["Kuro"],
        "description": "Log when reactions were added/removed! Inspired by Sx Bot#8364.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Log added/removed reactions!",
        "tags": ["log", "react", "reaction", "reactlog", "reactionlog"],
        "type": "COG"
      },
      "sudo": {
        "author": ["Kuro", "Draper", "jack1142 (Jackenmen#6607)"],
        "description": "Allows dropping and elevating owner permissions.",
        "disabled": false,
        "end_user_data_statement": "This cog stores bot owner ids so the bot owners can elevate their owner permissions.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Allows to drop and elevate owner permissions.",
        "tags": ["owner", "perms", "permission", "utility"],
        "type": "COG"
      },
      "translate": {
        "author": ["Kuro"],
        "description": "Translate the given text!",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/Animenosekai/translate",
          "emoji-country-flag"
        ],
        "short": "Translate the given text!",
        "tags": [
          "bing",
          "deepl",
          "google",
          "libre",
          "mymemory",
          "translate",
          "yandex"
        ],
        "type": "COG"
      }
    },
    "short": "Some cogs made by Kuro for Red-DiscordBot v3."
  },
  "https://github.com/Malarne/discord_cogs": {
    "author": ["Malarne (Malarne#1418)"],
    "description": "Some cogs that i think are useful, feel free to use them !",
    "name": "discord_cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {},
    "short": "Miscellaneous cogs"
  },
  "https://github.com/Mister-42/mr42-cogs": {
    "author": ["Mr. 42"],
    "description": "The answer to life, the universe, and everything",
    "name": "mr42-cogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "avatar": {
        "author": ["Mr. 42"],
        "description": "Returns a user's avatar as attachment.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Get user's avatar.",
        "tags": ["avatar", "pfp"],
        "type": "COG"
      },
      "youtube": {
        "author": ["Mr. 42"],
        "description": "Posts in a channel every time a new video is added to a YouTube channel.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["feedparser", "pytube"],
        "short": "Subscribe to channels on YouTube.",
        "tags": ["YouTube"],
        "type": "COG"
      },
      "ytdedup": {
        "author": ["Mr. 42"],
        "description": "Remove duplicate YouTube links in specified channels",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Remove duplicate YouTube links",
        "tags": ["youtube", "spam", "antispam"],
        "type": "COG"
      }
    },
    "short": "How many paths must a man walk down?"
  },
  "https://github.com/NeuroAssassin/Toxic-Cogs": {
    "author": ["Neuro Assassin"],
    "description": "This repo holds the several different cogs, for Red - Discord Bot by TwentySix.",
    "name": "Toxic-Cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "authgg": {
        "author": ["Neuro Assassin"],
        "description": "Unlock your users' HWID locks on auth.gg straight from your bot in Discord",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Control your users on auth.gg straight from Discord.",
        "tags": ["tools"],
        "type": ""
      },
      "color": {
        "author": ["Neuro Assassin"],
        "description": "This cog will tell you the hexadecimal value, rgb value and the name of the color that is supplied to it.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["colour", "pillow"],
        "short": "Tells you the hexadecimal values, rgb values and names of colors",
        "tags": ["tools"],
        "type": ""
      },
      "commandchart": {
        "author": ["Neuro Assassin"],
        "description": "This cog tells a Discord User the commands used, and the usage of them, in the last so and so messages.  Based off of aikaterna's chatchart cog.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["matplotlib"],
        "short": "Tells the used and usages of commands!  Based off of aikaterna's chatchart cog.",
        "tags": ["tools"],
        "type": ""
      },
      "cooldown": {
        "author": ["Neuro Assassin"],
        "description": "Allows a bot owner to set cooldowns for commands",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Allows bot owner to set cooldowns for commands",
        "tags": ["tools"],
        "type": ""
      },
      "dashboard": {
        "author": ["Neuro Assassin"],
        "description": "Control your bot through a web dashboard, allowing people to run commands (with permissions checked) straight from an easy-to-use dashboard.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["markdown2"],
        "short": "Interact with your bot through a web dashboard.",
        "tags": ["tools"],
        "type": ""
      },
      "deleter": {
        "author": ["Neuro Assassin"],
        "description": "Allows moderators to make messages be auto-deleted after a certain amount of time in a certain channel.  WARNING: This cog has potential API abuse AND SHOULD BE USED CAREFULLY!  If you see any issues arise due to this, please report to Neuro Assassin or bot owner ASAP!",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Allows for the auto-deletion of messages in a channel after a specified wait time.",
        "tags": ["tools"],
        "type": ""
      },
      "editor": {
        "author": ["Neuro Assassin"],
        "description": "Allows an administrator to change the text of one of the bot's messages, by either specifying the new content or by taking the content (and embed, if applicable) of another message.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Edit one of the bot's messages easily.",
        "tags": ["tools"],
        "type": ""
      },
      "esolang": {
        "author": ["Neuro Assassin"],
        "description": "Run code in some of the more popular esoteric languages for fun.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Run code in esoteric languages.",
        "tags": ["fun"],
        "type": ""
      },
      "evolution": {
        "author": ["Neuro Assassin"],
        "description": "Buy animals using economy credits or get them every 10 minutes, and gain a certain amount of credits every minute!",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["tabulate"],
        "short": "Buy and get animals to get more economy credits!",
        "tags": ["fun"],
        "type": ""
      },
      "grammar": {
        "author": ["Neuro Assassin"],
        "description": "Get words related to the specified arguments",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Get words related to the specified arguments",
        "tags": [],
        "type": ""
      },
      "listpermissions": {
        "author": ["Neuro Assassin"],
        "description": "This cog will allow you to see all permissions, available permissions or denied permissions or a role or member across the guild or in a channel.  Do note however that the `[p](groupcommand) channel role` only provides basic permissions, and will only tell what is different for the channel compared to the guild permissions for a role.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["prettytable", "fuzzywuzzy"],
        "short": "Gives you the permissions of a role/member guild wide or in a channel",
        "tags": ["tools"],
        "type": ""
      },
      "maintenance": {
        "author": ["Neuro Assassin"],
        "description": "Allows the owner to put the bot on maintenance, and specify when the maintenance will be over (but does not have to).  The bot owner can also whitelist users from the maintenance.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Allows the bot owner to put the bot on maintenance.",
        "tags": ["tools"],
        "type": ""
      },
      "minesweeper": {
        "author": ["Neuro Assassin"],
        "description": "This cog allows a Discord User to play the game Minesweeper inside of a text channel.\nSmall warning: this cog can sometimes you up rate limits (depending how fast you play), so be careful while playing.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Allows you to play Minesweeper inside of Discord!\nSmall warning: this cog can sometimes you up rate limits (depending how fast you play), so be careful while playing.",
        "tags": ["fun"],
        "type": ""
      },
      "opensea": {
        "author": ["Neuro Assassin"],
        "description": "Keep track of specific wallets by wallet address or NFT contact address.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Keep track of OpenSea asset events.",
        "tags": ["tools"],
        "type": ""
      },
      "reacticket": {
        "author": ["Neuro Assassin"],
        "description": "Allow users to create ticket channels by clicking on a set reaction on a set message.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Create a reaction-based ticketing system.",
        "tags": ["tools", "utility"],
        "type": ""
      },
      "scanner": {
        "author": ["Neuro Assassin"],
        "description": "This cog will send a report to a channel with details of an image violating the set conditions, and will auto delete the message if set to.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Detects images being sent and checks whether they are inappropriate based on the set filters.",
        "tags": ["tools"],
        "type": ""
      },
      "simon": {
        "author": ["Neuro Assassin"],
        "description": "This cog allows a Discord User to play the game Simon inside of a text channel.\nWarning!  This cog uses a major portion of the bot's rate limits.  This may prevent the bot from sending messages, adding emojis or deleting messages in specific peroids of time.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Allows you to play Simon inside of Discord!\nWarning!  This cog uses a major portion of the bot's rate limits.",
        "tags": ["fun"],
        "type": ""
      },
      "sw": {
        "author": ["Neuro Assassin"],
        "description": "Get information about a bunch of different things in Star Wars.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Get information about a bunch of different things in Star Wars.",
        "tags": ["info", "fun"],
        "type": ""
      },
      "targeter": {
        "author": ["Neuro Assassin"],
        "description": "Returns a list of members in the current guild that meet the passed arguments.  Commands can take long times based upon the amount of members in the guild.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Targets users based upon the passed arguments",
        "tags": ["tools"],
        "type": ""
      },
      "twenty": {
        "author": ["Neuro Assassin"],
        "description": "This cog allows a Discord User to play 2048 inside of a text channel.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Allows you to play 2048 inside of Discord!",
        "tags": ["fun"],
        "type": ""
      },
      "updatechecker": {
        "author": ["Neuro Assassin"],
        "description": "This cog will tell when there is an update available for a repository you have added for your bot, and, depending on settings, will auto update or will just notify you.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["feedparser"],
        "short": "Notifies you when an update for a repo is available.",
        "tags": ["tools"],
        "type": ""
      }
    },
    "short": "Holds cogs made by Neuro Assassin."
  },
  "https://github.com/NoPlagiarism/PlusyCogs": {
    "author": ["Albrt#3043"],
    "description": "Some cogs for fun from NoPlagiarism",
    "name": "PlusyCogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "exists": {
        "author": ["Albrt#3043"],
        "description": "Compilation of generators a-like \"This {sth} does not exists\". ",
        "disabled": false,
        "end_user_data_statement": "Cog does not collect any info about users, but collects guild's blacklist and NSFW preference.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.0",
        "min_python_version": [3, 9, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "This x does not exists",
        "tags": ["generator", "thisdoesnotexists"],
        "type": "COG"
      },
      "ryd": {
        "author": ["Albrt#3043"],
        "description": "\"Return YouTube Dislike\" cog scans every message for YouTube links and replies with likes/dislikes count",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.0",
        "min_python_version": [3, 9, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["humanize"],
        "short": "Return YouTube Dislike",
        "tags": ["ryd", "youtube", "returnyoutubedislike"],
        "type": "COG"
      },
      "va11halla": {
        "author": ["Albrt#3043"],
        "description": "Random quotes from VN \"VA-11 HALL-A: Cyberpunk Bartender Action\"\nVN from quotes may include NSFW (18+) content\nLanguages available: Russian, English",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.0",
        "min_python_version": [3, 9, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Quotes from VA-11 HALL-A",
        "tags": ["quotes", "vn", "va11halla"],
        "type": "COG"
      }
    },
    "short": "Exists and Va-11 Hall-a"
  },
  "https://github.com/Obi-Wan3/OB13-Cogs": {
    "author": ["Obi-Wan3"],
    "description": "Assorted utility cogs for Red v3: custom emoji management, website status monitoring, public/private VC system creation, custom bot mentionhelp, and more!",
    "name": "OB13-Cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {},
    "short": "Utility Cogs for Red by Obi-Wan3"
  },
  "https://github.com/PhasecoreX/PCXCogs": {
    "author": ["PhasecoreX (PhasecoreX#0635)"],
    "description": "My cogs focus on automation, where the bot will automatically respond or perform actions when needed, even if commands are not used. There's also other stuff thrown in there for fun.",
    "name": "PCXCogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "autoroom": {
        "author": ["PhasecoreX (PhasecoreX#0635)"],
        "description": "This cog facilitates automatic voice channel creation. When a member joins an AutoRoom Source (voice channel), this cog will move them to a brand new AutoRoom that they have control over. Once everyone leaves the AutoRoom, it is automatically deleted.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 11, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pyparsing"],
        "short": "Automatic voice channel management.",
        "tags": [
          "audio",
          "auto",
          "automated",
          "automatic",
          "channel",
          "room",
          "voice"
        ],
        "type": ""
      },
      "bancheck": {
        "author": ["PhasecoreX (PhasecoreX#0635)"],
        "description": "This cog allows server admins to check their members against multiple external ban lists. It can also automatically check new members that join the server, and optionally ban them if they appear in a list.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 11, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Automatically check users against multiple global ban lists.",
        "tags": [
          "auto",
          "automated",
          "automatic",
          "ban",
          "check",
          "lookup",
          "moderation",
          "utility"
        ],
        "type": ""
      },
      "bansync": {
        "author": ["PhasecoreX (PhasecoreX#0635)"],
        "description": "This cog allows server admins to ban users on their server when they are banned on another server that the bot is in.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 11, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Automatically sync bans across servers.",
        "tags": [
          "auto",
          "automated",
          "automatic",
          "ban",
          "moderation",
          "pull",
          "sync",
          "utility"
        ],
        "type": ""
      },
      "decodebinary": {
        "author": ["PhasecoreX (PhasecoreX#0635)"],
        "description": "Automatically decodes binary strings to human readable ones when detected in chat.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 11, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Automatically decode binary strings in chat.",
        "tags": [
          "auto",
          "automated",
          "automatic",
          "binary",
          "convert",
          "decode"
        ],
        "type": ""
      },
      "dice": {
        "author": ["PhasecoreX (PhasecoreX#0635)"],
        "description": "This cog allows for rolling complex dice, such as 3d8+4 or (4d6+3)*2.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 11, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pyhedrals"],
        "short": "Perform complex dice rolling.",
        "tags": ["chance", "d20", "dnd", "random", "roll", "utility"],
        "type": ""
      },
      "heartbeat": {
        "author": ["PhasecoreX (PhasecoreX#0635)"],
        "description": "Monitor the uptime of your bot by having it send heartbeat pings to a configurable URL (healthchecks.io for instance).",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 11, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "A heartbeat uptime client.",
        "tags": [
          "auto",
          "automated",
          "automatic",
          "health",
          "healthcheck",
          "ping",
          "schedule",
          "uptime",
          "utility"
        ],
        "type": ""
      },
      "netspeed": {
        "author": ["PhasecoreX (PhasecoreX#0635)"],
        "description": "Runs an internet speedtest and prints the results. Only the owner can run this.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 11, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["speedtest-cli>=2.1.3"],
        "short": "Test your servers internet speed.",
        "tags": [
          "download",
          "latency",
          "network",
          "ping",
          "upload",
          "utility",
          "system",
          "test"
        ],
        "type": ""
      },
      "reactchannel": {
        "author": ["PhasecoreX (PhasecoreX#0635)"],
        "description": "Allows for channels to be set up to have reactions automatically added to messages. This can facilitate things such as an upvote/downvote system (with user karma), a checklist system (checked messages are deleted), or any custom emoji reaction systems (no actions performed).",
        "disabled": false,
        "end_user_data_statement": "This cog stores Discord IDs along with a karma value based on total upvotes and downvotes on the users messages. Users may reset/remove their own karma total by making a data removal request.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 11, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Per-channel automatic reaction tools.",
        "tags": [
          "auto",
          "automated",
          "automatic",
          "checklist",
          "downvote",
          "karma",
          "starboard",
          "upvote",
          "utility",
          "vote"
        ],
        "type": ""
      },
      "remindme": {
        "author": ["PhasecoreX (PhasecoreX#0635)"],
        "description": "Allows for users to set reminders for themselves.",
        "disabled": false,
        "end_user_data_statement": "This cog stores data provided by users for the express purpose of re-displaying. It does not store user data which was not provided through a command. Users may delete their own data with or without making a data request.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 11, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pyparsing", "python-dateutil"],
        "short": "Set reminders for yourself.",
        "tags": ["reminder", "schedule", "utility"],
        "type": ""
      },
      "updatenotify": {
        "author": ["PhasecoreX (PhasecoreX#0635)"],
        "description": "This cog will periodically check if there are updates to the Red-DiscordBot code. If you are using the phasecorex/red-discordbot Docker image, it will check for any updates to that as well.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 11, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Automatically check for updates to Red-DiscordBot.",
        "tags": [
          "auto",
          "automated",
          "automatic",
          "check",
          "update",
          "utility"
        ],
        "type": ""
      },
      "uwu": {
        "author": ["PhasecoreX (PhasecoreX#0635)"],
        "description": "Takes the pwevious mwessage and uwuizes it. Sowwy.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 11, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Uwuize messages.",
        "tags": ["fun", "utility"],
        "type": ""
      },
      "wikipedia": {
        "author": ["PhasecoreX (PhasecoreX#0635)"],
        "description": "Allows for looking up terms on Wikipedia, and having the results displayed in chat.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 11, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["python-dateutil"],
        "short": "Look up articles on Wikipedia.",
        "tags": [
          "information",
          "lookup",
          "reference",
          "search",
          "utility",
          "wiki"
        ],
        "type": ""
      }
    },
    "short": "PhasecoreX's Cogs for Red-DiscordBot."
  },
  "https://github.com/PredaaA/predacogs": {
    "author": ["Pred\u00e4"],
    "description": "Various cogs, for utility purposes, like Converters, WhoPlays, DblTools and ServerInfo, but also informational like SpaceX cog, and to finish, image purposes with my Nsfw cog.",
    "name": "predacogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "converters": {
        "author": ["Pred\u00e4"],
        "description": "Some utility converters, for temperatures, mass, but also dates to timestamps.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Some utility converters.",
        "tags": ["convert", "converters", "utility", "information"],
        "type": ""
      },
      "dbltools": {
        "author": ["Pred\u00e4"],
        "description": "Tools to get bots information from top.gg, post stats, set a daily reward for votes, or give a role to new users who voted.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["dblpy", "tabulate"],
        "short": "Tools to get bots information from top.gg.",
        "tags": ["top.gg", "botlist", "stats"],
        "type": ""
      },
      "dbltoolslite": {
        "author": ["Pred\u00e4"],
        "description": "Tools to get bots information from top.gg, like description, votes, published server count and more.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["dblpy", "tabulate"],
        "short": "Tools to get bots information from top.gg.",
        "tags": ["top.gg", "botlist", "stats"],
        "type": ""
      },
      "fivem": {
        "author": ["Pred\u00e4"],
        "description": "Tools for FiveM servers.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Tools for FiveM servers.",
        "tags": ["tools", "fivem", "status"],
        "type": ""
      },
      "grafana": {
        "author": ["Pred\u00e4", "Fixator10"],
        "description": "Grafana graphs in your Discord!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["tabulate"],
        "short": "Grafana graphs in your Discord!",
        "tags": ["graphs", "grafana", "stats", "statistics"],
        "type": ""
      },
      "martools": {
        "author": ["Pred\u00e4", "Draper"],
        "description": "Multiple tools that are originally used on Martine (https://martinebot.com).",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["databases", "databases[sqlite]", "babel"],
        "short": "Multiple tools that are originally used on Martine (https://martinebot.com).",
        "tags": ["tools", "utility", "information", "counters", "statistics"],
        "type": ""
      },
      "nsfw": {
        "author": ["Pred\u00e4", "aikaterna"],
        "description": "Send random NSFW images from random subreddits and Nekobot API in NSFW only channels.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Send random NSFW images from random subreddits and Nekobot API.",
        "tags": ["nsfw", "reddit", "images"],
        "type": ""
      },
      "onconnect": {
        "author": ["max", "PredaaA"],
        "description": "On connect is a shard event cog that shows on ready, disconnect and resume.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 8, 1],
        "permissions": ["embed_links", "add_reactions"],
        "required_cogs": {},
        "requirements": ["psutil"],
        "short": "Shard events cog that shows on ready, disconnect and resume.",
        "tags": ["shard", "reconnect", "disconnect", "on_ready"],
        "type": "COG"
      },
      "randimages": {
        "author": ["Pred\u00e4"],
        "description": "Send random images from different APIs. There's animals images, art, and more. There is also a `[p]subreddit` command with which you can send an images from a subreddit of your choice. (All commands using subreddits are checking for nsfw content, so if there's nsfw content and the invoked channel is not NSFW you will receive a message that say you to invoke it in a NSFW channel instead of the image)",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Send random images (animals, art ...) from different APIs.",
        "tags": ["animals", "reddit", "images", "art"],
        "type": ""
      },
      "spacex": {
        "author": ["Pred\u00e4"],
        "description": "Get multiple information about SpaceX using SpaceX-API. You can also use Space cog from kennnyshiwa (https://github.com/kennnyshiwa/kennnyshiwa-cogs) for more about space in general, space pics, Astronomy Picture of the Day from Nasa, ISS location ...",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Get multiple information about SpaceX using SpaceX-API.",
        "tags": ["spacex", "space", "information"],
        "type": ""
      },
      "whoplays": {
        "author": ["Stevy", "Pred\u00e4"],
        "description": "V3 Rewrite of: https://github.com/AznStevy/Maybe-Useful-Cogs/blob/master/whoplays/whoplays.py\nCheck who's playing certain games or who's playing what on your server.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "See who's playing what!",
        "tags": ["info", "utility", "stats"],
        "type": ""
      }
    },
    "short": "Various cogs."
  },
  "https://github.com/Redjumpman/Jumper-Plugins": {
    "author": ["Redjumpman (Redjumpman#1337)"],
    "description": "Contains several games for the community such has Casino, Heist, and Race. Also contains community tools like lottery and shop.",
    "name": "Jumper-Plugins",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {},
    "short": "Games and community development plugins."
  },
  "https://github.com/SharkyTheKing/Sharky": {
    "author": ["Sharky The King"],
    "description": "Tools and codes that I've made that I wanted on the repo.",
    "name": "Sharky",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "mailsystem": {
        "author": ["Sharky The King", "Kreusada"],
        "description": "**This is currently in testing.** A Mail System (ModMail) for multiple guilds.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Pre-released MailSystem",
        "tags": ["ModMail", "Mail", "Mod"],
        "type": "COG"
      },
      "sharkytools": {
        "author": ["Sharky The King"],
        "description": "Tools that Sharky built",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "sharkytools",
        "tags": [],
        "type": "COG"
      }
    },
    "short": "Cogs from Sharky"
  },
  "https://github.com/Skylark95/skylark95-cogs": {
    "author": ["Skylark95"],
    "description": "Cogs by Skylark95. A collection of my personal cogs for use with Red-DiscordBot.",
    "name": "skylark95-cogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "chatgpt": {
        "author": ["Skylark95"],
        "description": "Send messages to ChatGPT",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users. However, this cog does pass user data to an external API for the purposes of simulated conversation responses.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["openai"],
        "short": "Send messages to ChatGPT",
        "tags": ["chatgpt", "openai"],
        "type": "COG"
      },
      "dnd": {
        "author": ["Skylark95"],
        "description": "Interact with dnd5eapi.co",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Interact with dnd5eapi.co",
        "tags": ["dnd", "5e"],
        "type": "COG"
      },
      "wingspan": {
        "author": ["Skylark95"],
        "description": "Wingspan game related commands",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Wingspan game related commands",
        "tags": ["wingspan"],
        "type": "COG"
      }
    },
    "short": "Cogs by Skylark95."
  },
  "https://github.com/TheWyn/Wyn-RedV3Cogs": {
    "author": ["Wyn"],
    "description": "Cogs I've created or ported for personal use.  Look up song lyrics, search anime torrents and more.",
    "name": "Wyn-RedV3Cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {},
    "short": "Cogs by/edited Wyn"
  },
  "https://github.com/Tobotimus/Tobo-Cogs": {
    "author": ["Tobotimus"],
    "description": "Various cogs for bot management and customisation, server administration and moderation, and some fun stuff for users too. All cogs are made to be easy for anyone to use!",
    "name": "Tobo-Cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "docref": {
        "author": ["Tobotimus"],
        "description": "DocRef allows you to look up references on documentation webpages by their sphinx object names - this includes any documented python object! The documentation webpages must be added to the bot with a site name (of your own choice) and URL. The documentation webpages must be generated by sphinx (this includes almost every documentation page on ReadTheDocs).",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["sphinx"],
        "short": "Search for references on documentation webpages.",
        "tags": [
          "docs",
          "dev",
          "coding",
          "sphinx",
          "rtd",
          "rtfd",
          "rtfm",
          "readthedocs"
        ],
        "type": "COG"
      },
      "errorlogs": {
        "author": ["Tobotimus"],
        "description": "ErrorLogs automatically outputs tracebacks of command errors in any text channel(s) you specify. It includes per-channel settings to determine whether global or server-wide errors should be posted.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Log error tracebacks in text channels.",
        "tags": ["error", "debug", "log"],
        "type": "COG"
      },
      "reactkarma": {
        "author": ["Tobotimus"],
        "description": "ReactKarma is a cog for counting upvotes and downvotes of everyone the bot sees. The karma leaderboard is global, however the cog can be effectively enabled and disabled per-server.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Like Reddit Karma, but with discord reactions!",
        "tags": ["karma", "upvote", "downvote"],
        "type": "COG"
      },
      "sticky": {
        "author": ["Tobotimus"],
        "description": "Sticky is a cog for sticking a message at the bottom of a channel. When a user sends a message in that channel, the bot will delete its old message and repost it, so it 'sticks' to the bottom.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Sticky messages for your channels!",
        "tags": ["moderation", "channeltools"],
        "type": "COG"
      },
      "streamroles": {
        "author": ["Tobotimus"],
        "description": "StreamRoles is a cog for automatically assigning roles to users streaming on Twitch. The cog is also able to only assign a streaming role to users of a particular game. Specific users can also be blacklisted and whitelisted.\n\nDisclaimer: The first streamrole cog was made by tmerc, as some of you may know. This cog was written completely from the ground up by myself, and although I was unaware he had written a similar cog already, he should be given credit for coming up with the idea first.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Hoist users streaming on Twitch.",
        "tags": ["streamers", "hoist", "twitch"],
        "type": "COG"
      },
      "strikes": {
        "author": ["Tobotimus"],
        "description": "Strikes is a cog for helping moderation teams warn and keep track of misbehaving users. Strikes are filed with a reason and timestamp, and the cog is helpful for knowing how many times the user has misbehaved *recently*. ModLog integration is also available.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["tabulate[widechars]"],
        "short": "Strike misbehaving users.",
        "tags": ["warnings", "strikes", "reports", "mod"],
        "type": "COG"
      },
      "updatered": {
        "author": ["Tobotimus"],
        "description": "UpdateRed is a cog for updating your bot from within discord. When combined with the ability to restart the bot, updating Red becomes a easier than ever!\n\nYou can choose from multiple automatic versions, or specify a particular version you'd like to install.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "A command to update Red!",
        "tags": ["update"],
        "type": "COG"
      },
      "welcomecount": {
        "author": ["Tobotimus"],
        "description": "WelcomeCount is a cog for sending customisable and context-based welcome messages to new users. It's named after it's main feature - it counts how many members have joined each day, and this can be included in the welcome message.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Customisable welcome messages.",
        "tags": ["welcome", "joinmessage"],
        "type": "COG"
      }
    },
    "short": "Cogs made by Tobotimus."
  },
  "https://github.com/TrustyJAID/Trusty-cogs": {
    "author": ["TrustyJAID"],
    "description": "A plethora of potentially useful commands and functions for your bot. Create a starboard, trigger automatic responses, or even create your own fun badges.",
    "name": "Trusty-cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "addimage": {
        "author": ["TrustyJAID"],
        "description": "Add image for the bot to directly upload similar to alias.",
        "disabled": false,
        "end_user_data_statement": "This cog stores attachements uploaded by users for the purposes of creating custom commands to send uploaded attachments.\nUsers may delete their own data with or without making a data request.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["attach_files"],
        "required_cogs": {},
        "requirements": [],
        "short": "Add images for direct upload per guild and globally.",
        "tags": [],
        "type": "COG"
      },
      "adventurealert": {
        "author": ["TrustyJAID"],
        "description": "Receive notifications from adventure activities!",
        "disabled": false,
        "end_user_data_statement": "This cog stores discord User ID's for the purposes of mentioning the user on certain events.\nUsers may delete their own data with or without making a data request.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": [],
        "required_cogs": {
          "adventure": "https://github.com/aikaterna/gobcog/"
        },
        "requirements": [],
        "short": "Receive notifications from adventure activities!",
        "tags": ["fun", "adventure"],
        "type": "COG"
      },
      "apngfilter": {
        "author": ["TrustyJAID", "Sinbad", "Soulrift"],
        "description": "Automatically filter animated PNG's.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["manage_messages"],
        "required_cogs": {},
        "requirements": [],
        "short": "Automatically filter animated PNG's.",
        "tags": ["utility"],
        "type": "COG"
      },
      "badges": {
        "author": ["TrustyJAID"],
        "description": "Create your own badge with your discord info.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["attach_files"],
        "required_cogs": {},
        "requirements": ["pillow"],
        "short": "Create your own badge!",
        "tags": [],
        "type": "COG"
      },
      "bingo": {
        "author": ["TrustyJAID"],
        "description": "Generate a bingo card to play on your server!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users. This cog can store images uploaded by the user or provided for the purpose of generating bingo cards.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["attach_files"],
        "required_cogs": {},
        "requirements": ["pillow"],
        "short": "Play Bingo!",
        "tags": ["fun", "memes", "meme", "bingo"],
        "type": "COG"
      },
      "cah": {
        "author": ["TrustyJAID", "crhallberg", "Cards Against Humanity\u00ae"],
        "description": "Play Cards Against Humanity\u00ae!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 9, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pillow"],
        "short": "Cards Against Humanity\u00ae",
        "tags": ["cah", "cards against humanity", "fun", "game"],
        "type": "COG"
      },
      "cleverbot": {
        "author": ["Twentysix", "TrustyJAID"],
        "description": "Have your bot respond with cleverbot responses. Supports tweaks to customize the responses!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users. However, this cog does pass user data to an external API for the purposes of simulated conversation responses.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Talk with Cleverbot!",
        "tags": ["cleverbot"],
        "type": "COG"
      },
      "compliment": {
        "author": ["Airen", "JennJenn", "TrustyJAID"],
        "description": "Compliment people in a creative way",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Compliment people in a creative way",
        "tags": [],
        "type": "COG"
      },
      "conversions": {
        "author": ["TrustyJAID"],
        "description": "Conversions for currencies, crypto-currencies, and stocks.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": [],
        "short": "Conversions for currencies, crypto-currencies, and stocks.",
        "tags": [],
        "type": "COG"
      },
      "crabrave": {
        "author": ["DankMemer Team", "TrustyJAID", "thisisjvgrace"],
        "description": "Create your very own Crab Rave videos with custom text! This cog requires FFMPEG, moviepy (https://github.com/Zulko/moviepy), and imagemagick to work. This cog downloads a template video and font file which is then saved locally and generates crab rave videos from the template. Old videos are deleted after uploading. This cog may consume heavy resources rendering videos.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 8, 0],
        "permissions": ["attach_files"],
        "required_cogs": {},
        "requirements": ["moviepy", "yt-dlp"],
        "short": "Make Crab rave videos, in discord!",
        "tags": ["fun"],
        "type": "COG"
      },
      "destiny": {
        "author": ["TrustyJAID"],
        "description": "Show Information from the Destiny 2 API. Note: This cog requires downloading a ~160 MB manifest. You must acquire an API key from https://www.bungie.net/en/Application. Select **Create New App**. Choose **Confidential** OAuth client type. Select the scope you would like the bot to have access to. Set the redirect URL to https://localhost/. Users wishing to access commands after you have supplied the tokens will be asked to authorize their account on your app. Once they have approved it they will be granted access to use commands.",
        "disabled": false,
        "end_user_data_statement": "This cog stores User IDs linked to an external API token for the purposes of granting OAuth access and information about the external API for the user.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": ["tabulate"],
        "short": "Destiny 2 information",
        "tags": ["destiny", "gaming", "games"],
        "type": "COG"
      },
      "elements": {
        "author": ["TrustyJAID"],
        "description": "Get a plethora of information about elements on the periodic table.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": ["mendeleev"],
        "short": "Periodic table of elements",
        "tags": ["science", "elements"],
        "type": "COG"
      },
      "encoding": {
        "author": ["TrustyJAID"],
        "description": "Encode messages into various types of encoding. Encoding types include: DNA, binary, Caeser cipher, hex, base 64, character, and braille.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Encode messages into various types of encoding.",
        "tags": ["encoding", "rot", "caeser cipher"],
        "type": "COG"
      },
      "eventposter": {
        "author": ["TrustyJAID"],
        "description": "Allow users to setup and host events to be approved by admins.",
        "disabled": false,
        "end_user_data_statement": "This cog stores User ID's for the purposes of tracking user created events.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["embed_links", "add_reactions"],
        "required_cogs": {},
        "requirements": ["python-dateutil", "pytz"],
        "short": "Admin approved announcments/events",
        "tags": ["events"],
        "type": "COG"
      },
      "extendedmodlog": {
        "author": ["RePulsR", "TrustyJAID"],
        "description": "Log changes within the server using extended modlogs, an extension of RedBot cores modlog.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": [],
        "short": "ExtendedModLog, track changes made in the server.",
        "tags": ["mod", "logs", "modlogs"],
        "type": "COG"
      },
      "fenrir": {
        "author": ["TrustyJAID"],
        "description": "Create reaction messages to kick or ban users! https://tenor.com/view/order66-gif-9116581",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["ban_members", "kick_members"],
        "required_cogs": {},
        "requirements": [],
        "short": "Give users the option to kick, ban, or insult themselves via reactions.",
        "tags": [],
        "type": "COG"
      },
      "fun": {
        "author": ["Appu", "TrustyJAID"],
        "description": "All sorts of commands that users may find fun or useful",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["add_reactions"],
        "required_cogs": {},
        "requirements": [],
        "short": "Various fun commands like react, textflip, and regional",
        "tags": [],
        "type": "COG"
      },
      "hockey": {
        "author": ["TrustyJAID"],
        "description": "A cog to gather hockey scores, schedules, player data and more!",
        "disabled": false,
        "end_user_data_statement": "This cog stores User ID's for the purposes of tracking votes in pickems.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["embed_links", "manage_messages", "manage_channels"],
        "required_cogs": {},
        "requirements": ["pytz", "tabulate"],
        "short": "Hockey commands",
        "tags": ["hockey", "nhl"],
        "type": "COG"
      },
      "hue": {
        "author": ["TrustyJAID"],
        "description": "Lets you control your philips hue lights with redbot.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Control your philips hue lights with redbot!",
        "tags": [],
        "type": "COG"
      },
      "imagemaker": {
        "author": [
          "TrustyJAID",
          "Ivan Seidel (isnowillegal.com)",
          "Bruno Lemos (isnowillegal.com)",
          "Jo\u00e3o Pedro (isnowillegal.com)"
        ],
        "description": "Show how you really feel. Make someone beautiful. Make something illegal.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["attach_files"],
        "required_cogs": {},
        "requirements": ["pillow", "opencv-python", "numpy", "Unidecode"],
        "short": "Create your own feels!",
        "tags": ["fun", "memes", "meme"],
        "type": "COG"
      },
      "imgflip": {
        "author": ["Twentysix", "TrustyJAID"],
        "description": "Recreation of Red v1 meme generator",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Recreation of Red v1 meme generator",
        "tags": ["meme", "memes", "fun"],
        "type": "COG"
      },
      "insult": {
        "author": ["Airen", "JennJenn", "TrustyJAID"],
        "description": "Insult people in a creative way ![goteem](https://cdn.discordapp.com/emojis/350653489044652052.png?v=1)",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Insult people in a creative way",
        "tags": ["fun", "insults"],
        "type": "COG"
      },
      "inviteblocklist": {
        "author": ["TrustyJAID"],
        "description": "Automatically delete discord invite links from specific guilds or allow only specified guild invites to be posted.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 8, 0],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": [],
        "short": "Block or Allow invite links based on guild ID. Accepts invite links to extract guild ID's.",
        "tags": [],
        "type": "COG"
      },
      "loaddev": {
        "author": ["TrustyJAID"],
        "description": "Allow for cores dev module to be loaded after bot startup. Also allows replacing `[p]mock` with another alternative.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": true,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Developer commands",
        "tags": [],
        "type": "COG"
      },
      "mentionprefix": {
        "author": ["Draper", "TrustyJAID"],
        "description": "This cog allows ping the bot to see the prefixes available.",
        "disabled": false,
        "end_user_data_statement": "This cog allows ping the bot to see the prefixes available.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "This cog allows ping the bot to see the prefixes available.",
        "tags": ["help"],
        "type": "COG"
      },
      "mock": {
        "author": ["TrustyJAID"],
        "description": "Mock another user! If you need the core dev commands start the bot without the `--dev` flag and install the loaddev cog in my repo that allows you to replace `mock` with whatever you choose.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": [],
        "short": "Mock another user!",
        "tags": ["fun", "memes"],
        "type": "COG"
      },
      "nasa": {
        "author": ["TrustyJAID"],
        "description": "Get information from NASA's API",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": ["skyfield"],
        "short": "Cog for getting info from NASA's API",
        "tags": ["NASA", "Space"],
        "type": "COG"
      },
      "notsobot": {
        "author": ["NotSoSuper", "TrustyJAID"],
        "description": "Magick, trigger and manipulate images with many commands from NotSoSuper's NotSoBot. This cog has a lot of requirements, view the [cog README.md](https://github.com/TrustyJAID/Trusty-cogs/blob/master/notsobot/README.md) for details. ",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["attach_files"],
        "required_cogs": {},
        "requirements": [
          "pyfiglet",
          "numpy",
          "pillow",
          "git+https://github.com/Kareeeeem/jpglitch",
          "wand",
          "unidecode"
        ],
        "short": "Some working commands from NotSoBot",
        "tags": ["fun", "memes", "images"],
        "type": "COG"
      },
      "reddit": {
        "author": ["TrustyJAID"],
        "description": "Reddit commands for getting updates on specified subreddits.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "reactivepy>=1.9.0.dev0",
          "git+https://github.com/TrustyJAID/aPRAW@setup-fix"
        ],
        "short": "A cog to post updates from reddit.",
        "tags": ["reddit", "news"],
        "type": "COG"
      },
      "rekt": {
        "author": ["TrustyJAID"],
        "description": "Are you REKT?",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": [],
        "short": "Get REKT",
        "tags": ["rekt"],
        "type": "COG"
      },
      "retrigger": {
        "author": ["TrustyJAID"],
        "description": "Trigger events based on regex! Check out <https://regex101.com/> and <https://github.com/TrustyJAID/Trusty-cogs/blob/master/retrigger/README.md> for help setting up the cog. Note: This cog can become quite resource heavy. Optional features are available if the requirements are present such as pillow for image resizing and pytesseract to scan images for text (OCR).",
        "disabled": false,
        "end_user_data_statement": "This cog may store attachments and command information provided by Users for the purposes of performing actions.\nSome User ID's may be stored in the bots logging information.\nUsers may delete their own data with or without making a data request.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": [],
        "short": "Trigger events via Regular Expressions!",
        "tags": ["trigger", "reactions"],
        "type": "COG"
      },
      "roletools": {
        "author": ["TrustyJAID"],
        "description": "Various role utility commands. Including Reaction roles, Sticky roles, and Auto role.",
        "disabled": false,
        "end_user_data_statement": "This cog stores User ID's for the purposes of re-assigning roles when the user re-joins a server.\nUser ID's may be stored in the bots log information.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 0, 0],
        "permissions": ["manage_roles"],
        "required_cogs": {},
        "requirements": [],
        "short": "Various role related tools.",
        "tags": ["utility", "mod"],
        "type": "COG"
      },
      "runescape": {
        "author": ["TrustyJAID"],
        "description": "A cog to grab Runescape and OSRS stats and profile information.",
        "disabled": false,
        "end_user_data_statement": "This cog may store User ID's linked with an external API name for the purposes of simplifying command usage.\nUsers may clear this saved information at any time by command.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": ["tabulate", "pytz"],
        "short": "Show your Runescape stats in discord!",
        "tags": ["runescape", "games", "osrs"],
        "type": "COG"
      },
      "serverstats": {
        "author": ["TrustyJAID", "Preda"],
        "description": "A plethora of potentially useful commands for any bot owner. Includes a way to track the bot joining new servers, find cheaters on global economies, get user avatars and even larger emojis.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["read_message_history", "embed_links"],
        "required_cogs": {},
        "requirements": ["unidecode", "pytz", "python-dateutil", "rapidfuzz"],
        "short": "A plethora of potentially useful commands for any bot owner.",
        "tags": ["stats"],
        "type": "COG"
      },
      "spotify": {
        "author": ["TrustyJAID", "NeuroAssassin"],
        "description": "This cog allows you to control Spotify via OAuth through the bot on discord. Use `[p]spotify` to see available commands.",
        "disabled": false,
        "end_user_data_statement": "This cog stores OAuth tokens and refresh tokens for the purposes of interacting with the Spotify API with discord commands and reactions. This data can be deleted at any time either via revoking the authorization token on Spotify or through the `[p]mydata forgetme` command.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 8, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["tekore", "tabulate", "httpx>=0.15,<0.25"],
        "short": "Control Spotify through Discord!",
        "tags": ["spotify"],
        "type": "COG"
      },
      "starboard": {
        "author": ["TrustyJAID"],
        "description": "Create a starboard channel to save those amazing posts!",
        "disabled": false,
        "end_user_data_statement": "This stores message information from Users for the purposes of tracking reactions to the message.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": [],
        "short": "Starboard",
        "tags": ["starboard", "star"],
        "type": "COG"
      },
      "tarot": {
        "author": ["TrustyJAID"],
        "description": "Find your tarot reading, your life reading, or pull a random tarot card!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": [],
        "short": "General commands",
        "tags": ["fun", "mystery"],
        "type": "COG"
      },
      "translate": {
        "author": ["Aziz", "TrustyJAID"],
        "description": "Add flag emojis to messages to translate to that language or translate messages by command.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users. However, this cog does pass user data to an external API for the purposes of analyzing and translating languages.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Translate messages using google translate!",
        "tags": ["utility", "translation"],
        "type": "COG"
      },
      "tweets": {
        "author": ["palmtree5", "TrustyJAID"],
        "description": "Gets the latest Tweet from twitter accounts and posts them in the specified channels",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": ["tweepy[async]>=4.10.0"],
        "short": "Cog for getting info from Twitter",
        "tags": ["twitter", "tweets"],
        "type": "COG"
      },
      "twitch": {
        "author": ["TrustyJAID"],
        "description": "Get notified of new twitch followers and get basic profile info.",
        "disabled": false,
        "end_user_data_statement": "This cog stores User ID's linked to an external API name for the purposes of tracking information from the external API.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": [],
        "short": "Get basic twitch account information.",
        "tags": ["twitch", "streaming", "utility"],
        "type": "COG"
      },
      "weather": {
        "author": ["TrustyJAID"],
        "description": "Check the current weather in many cities around the world including in Kelvin.",
        "disabled": false,
        "end_user_data_statement": "This cog may store User ID's for the purposes of setting default preferred temperature units.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": [],
        "short": "Show the current weather in specified locations!",
        "tags": ["weather", "utility"],
        "type": "COG"
      },
      "welcome": {
        "author": ["irdumb", "TrustyJAID"],
        "description": "Welcome new users to the server or say goodbye when they leave.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 2],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Welcome new users to the server",
        "tags": ["welcome", "utility"],
        "type": "COG"
      }
    },
    "short": "Cogs by TrustyJAID inspired by many."
  },
  "https://github.com/Twentysix26/x26-Cogs": {
    "author": ["Twentysix (Twentysix#5252)"],
    "description": "General purpose cogs by Twentysix (Twentysix#5252)",
    "name": "x26-Cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "defender": {
        "author": ["Twentysix (Twentysix#5252)"],
        "description": "Protects your community with automod features and empowers the staff and users you trust with advanced moderation tools",
        "disabled": false,
        "end_user_data_statement": "This cog stores user IDs for the purpose of counting the messages a user sends and/or send the DM notifications the user has subscribed to.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev317",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "pyyaml~=5.4.1",
          "emoji~=1.6.3",
          "pydantic~=1.9.1",
          "regex==2022.4.24",
          "rapidfuzz==3.0.0"
        ],
        "short": "Protects your community with automod features and empowers the staff and users you trust with advanced moderation tools",
        "tags": ["automod", "antiraid", "moderation", "monitoring"],
        "type": "COG"
      },
      "index": {
        "author": ["Twentysix (Twentysix#5252)", "jack1142 (Jackenmen#6607)"],
        "description": "Browse, search and install repos / cogs from a Red-Index",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev317",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Easy cog discoverability with Red-Index",
        "tags": ["index", "discoverability", "cogs", "finder"],
        "type": "COG"
      },
      "sbansync": {
        "author": ["Twentysix (Twentysix#5252)"],
        "description": "A simple, no frills bansync cog.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0.dev317",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "A simple, no frills bansync cog.",
        "tags": ["bansync", "moderation", "admin"],
        "type": "COG"
      }
    },
    "short": "General purpose cogs by Twentysix (Twentysix#5252)"
  },
  "https://github.com/Vexed01/Vex-Cogs": {
    "author": ["Vexed (Vexed#0714)"],
    "description": "These cogs are stuff typically utility stuff that I wanted myself that might be useful to others.\nIt's mainly cogs for bot or server owners.\n\nIf you find anything that's wrong, feel free to make a GH issue or find me in the main Red server or the cog support server (https://discord.gg/GET4DVk). I'm Vexed#0714",
    "name": "Vex-Cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "aliases": {
        "author": ["Vexed (Vexed#0714)"],
        "description": "Get all the information you could ever need about a command's aliases. IF YOU ARE TRYING TO *MAKE* ALIASES, JUST USE THE CORE 'alias` COG.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Get all the information you could ever need about a command's aliases. IF YOU ARE TRYING TO *MAKE* ALIASES, JUST USE THE CORE 'alias` COG.",
        "tags": ["utility", "alias"],
        "type": ""
      },
      "anotherpingcog": {
        "author": ["Vexed (Vexed#0714)"],
        "description": "Replace the ping command with a rich embed that shows ping time and message time. It is colour coded: red, orange and green, and the bot owner can customise the colours and emojis for different latency levels, as well as force an embed.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["tabulate"],
        "short": "Just another ping cog... But this one has fancy colours in an embed the bot owner can customise!",
        "tags": ["utility", "ping", "pingtime"],
        "type": ""
      },
      "beautify": {
        "author": ["Vexed (Vexed#0714)"],
        "description": "Beautify and minify JSON. Supports attachments, codeblocks and replies.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Beautify and minify JSON. Supports attachments, codeblocks and replies.",
        "tags": ["utility", "json"],
        "type": ""
      },
      "betteruptime": {
        "author": ["Vexed (Vexed#0714)"],
        "description": "Replace the uptime command with a rich embed that shows the bot's percentage uptime (both time of the bot being on and time connected to Discord). There is also a new `downtime` command which shows when downtime happened. This cog writes to config every 60 seconds to prevent data loss. It is also very storage efficient, using under 150 bytes each day the cog runs.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pandas", "plotly", "kaleido"],
        "short": "A better uptime command that tracks the bot's uptime as a percentage over the last 30 days, and has a new `downtime` command that shows when downtime happened.",
        "tags": ["utility", "uptime", "meta"],
        "type": ""
      },
      "birthday": {
        "author": ["Vexed (Vexed#0714)"],
        "description": "Get users to add their birthday, then on their birthday they will get a special role. Server owners can set the time of day, announcement message and role.",
        "disabled": false,
        "end_user_data_statement": "This cog will associate a User ID with a birthday if the user explicitly sets it. This data is also associated with a specific guild ID. No other data or metadata about users is stored.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Birthday cog with customisable roles, messages and times.",
        "tags": ["birthday", "birthdays", "bday", "fun", "role"],
        "type": ""
      },
      "buttonpoll": {
        "author": ["Vexed (Vexed#3211)"],
        "description": "",
        "disabled": false,
        "end_user_data_statement": "This cog stores user IDs paired with guild IDs and how they voted if a user participated in a poll. This is to ensure no double voting can happen. This data is removed once a poll finishes. No other data or metadata about users is persistently stored. This cog respects data deletion requests.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["plotly", "kaleido", "pandas"],
        "short": "A poll in Discord, but with powered by buttons and with a pie chart at the end!",
        "tags": ["utility", "poll", "button"],
        "type": ""
      },
      "calc": {
        "author": ["Vexed (Vexed#0714)"],
        "description": "Calculate simple mathematical expressions, right in Discord with buttons.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["expr.py", "asyncache"],
        "short": "Calculate simple mathematical expressions, right in Discord with buttons.",
        "tags": ["utility", "calc", "math", "maths"],
        "type": ""
      },
      "caseinsensitive": {
        "author": ["Vexed (Vexed#0714)"],
        "description": "Make all prefixes and commands case insensitive (so that something like !Ping works). This will have a negative performance impact.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Make all commands case insensitive.",
        "tags": [
          "utility",
          "case",
          "commands",
          "case-insensitive",
          "caseinsensitive"
        ],
        "type": ""
      },
      "cmdlog": {
        "author": ["Vexed (Vexed#0714)"],
        "description": "Track who used what commands. All command usage is logged to the bot's console/log and also internally cached. You can view the activity of an individual user, server or command. Supports slash and text commands.",
        "disabled": false,
        "end_user_data_statement": "This cog may persistently store data or metadata about users. Operational data is temporarily collected and cached whenever a command is used and may be stored.\n\nWhen a command is used, the following data is collected: the message invoking the command, the user that invoked it, the server it was invoked in, and the channel it was invoked in. This includes application commands, as well as old-style text commands.\n\nThis cog does not support data deletion requests, as it handles operational data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Track who uses what commands, with the ability to search for a specific user, server command.",
        "tags": ["utility", "log", "logging"],
        "type": ""
      },
      "covidgraph": {
        "author": ["Vexed (Vexed#0714)"],
        "description": "This cog has been removed, please uninstall.",
        "disabled": true,
        "end_user_data_statement": "",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "This cog has been removed, please uninstall.",
        "tags": [],
        "type": ""
      },
      "fivemstatus": {
        "author": ["Vexed (Vexed#0714)"],
        "description": "View the live status of a FiveM server, in an auto updating Discord message.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "View the live status of a FiveM server, in an auto updating Discord message.",
        "tags": ["status", "live", "fivem"],
        "type": ""
      },
      "ghissues": {
        "author": ["Vexed (Vexed#0714)"],
        "description": "Create, comment, labelify and close GitHub issues, with partial PR support.\n\n",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["gidgethub>=5.0.0"],
        "short": "Create, comment, labelify and close GitHub issues.",
        "tags": ["utility", "github", "issues"],
        "type": ""
      },
      "github": {
        "author": ["Vexed (Vexed#0714)"],
        "description": "Create, comment, labelify and close GitHub issues, with partial PR support.",
        "disabled": true,
        "end_user_data_statement": "",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Create, comment, labelify and close GitHub issues.",
        "tags": [],
        "type": ""
      },
      "googletrends": {
        "author": ["Vexed (Vexed#0714)"],
        "description": "Find out what the world is searching, right from Discord. Includes charts.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["plotly", "kaleido", "pytrends"],
        "short": "Find out what the world is searching, right from Discord. Includes charts.",
        "tags": ["utility", "data", "google", "pytrends"],
        "type": ""
      },
      "madtranslate": {
        "author": ["Vexed (Vexed#0714)"],
        "description": "Translate something from English into a gazillion different languages then back to English. Uses an undocumented Google Translate API.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Translate something from English into a gazillion different languages then back to English. You'll get some funny responses! Uses an undocumented Google Translate API.",
        "tags": ["madtranslate", "translate", "google", "fun"],
        "type": ""
      },
      "roleplay": {
        "author": ["Vexed (Vexed#0714)"],
        "description": "Create a role play channel where users can contribute in secret, with some customisation options and logging for admins.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users. Messages sent in channels designated as role play channels by Administrators are not stored in memory by this cog, but they are re-sent from the bot with no association to the user. As such this cog does not directly store data, but data is posted to a Discord channel.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Create an anonymous role play in your sever.",
        "tags": ["secret", "radio", "transmission", "fun"],
        "type": ""
      },
      "stattrack": {
        "author": ["Vexed (Vexed#0714)"],
        "description": "Track your bot's statistics over time, including ping, members, guild and message/command counts.\n\nThis has a background process which could be intensive.\n\nThis stores data in Red's config which is not especially built for this cog's usage.",
        "disabled": false,
        "end_user_data_statement": "This cog permanently stores anonymised and aggregated data about users' statuses and counts messages sent, not including their content. This data cannot be traced back to individual users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "pandas>=1.1.0",
          "psutil",
          "plotly",
          "kaleido",
          "aiosqlite"
        ],
        "short": "Stat tracking cog including ping, member counts and counts of commands/messages. View the data in Discord.",
        "tags": ["utility", "timeseries", "tracking", "stats"],
        "type": ""
      },
      "status": {
        "author": ["Vexed (Vexed#0714)"],
        "description": "This cog can automatically send updates form various services including Discord, Cloudflare and GitHub. Members can also use a command to check incidents on-demand. Support all Statuspage.io which I have added.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["markdownify", "asyncache", "tabulate"],
        "short": "Get automatic status updates from various services, and check the latest incidents on-demand. Includes Discord, GitHub and Cloudflare.",
        "tags": ["utility", "statuspage", "trust"],
        "type": ""
      },
      "system": {
        "author": ["Vexed (Vexed#0714)"],
        "description": "Check system metrics on the host device, such as CPU or  RAM usage",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["psutil>=5.8.0", "tabulate"],
        "short": "Check system metrics on the host device.",
        "tags": ["utility", "system", "metrics", "top"],
        "type": ""
      },
      "tests": {
        "author": [],
        "description": "",
        "disabled": true,
        "end_user_data_statement": "",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Contrary to what downloader thinks, this isn't a cog!",
        "tags": [],
        "type": ""
      },
      "timechannel": {
        "author": ["Vexed (Vexed#0714)"],
        "description": "Get the time in different timezones in voice channels.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["rapidfuzz"],
        "short": "Get the time in different timezones in voice channels.",
        "tags": ["utility", "channel", "time", "timezone"],
        "type": ""
      },
      "uptimeresponder": {
        "author": ["Vexed"],
        "description": "A cog which starts up a simple webserver whenever the cog is loaded, which can then be used by uptime monitoring services such as UptimeRobot, Pingdom, Uptime.com, or self-hosted ones like UptimeKuma or Upptime.. If you are using an external monitor, you will need to configure port forwarding. Make sure you are aware of the security risks of exposing your machine to the internet. The cog responds with status code 200.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["asyncache"],
        "short": "A cog which starts up a simple webserver whenever the cog is loaded, which can then be used by uptime monitoring services such as UptimeRobot, Pingdom, Uptime.com, or self-hosted ones like Uptime Kuma or Upptime.",
        "tags": [
          "webserver",
          "server",
          "ping",
          "uptimerobot",
          "uptimekuma",
          "kuma",
          "upptime",
          "pingdom"
        ],
        "type": ""
      },
      "wol": {
        "author": ["Vexed (Vexed#0714)"],
        "description": "Use Wake on LAN from Discord! This cog sends magic packets on the local network. You'll need to have set up the computer beforehand to listen to these - just search how to set it up for your operating system.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.1",
        "min_python_version": [3, 8, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["wakeonlan", "tabulate"],
        "short": "Use Wake on LAN from Discord! This cog sends magic packets on the local network.",
        "tags": ["utility", "wakeonlan", "local"],
        "type": ""
      }
    },
    "short": "Mainly utility cogs."
  },
  "https://github.com/WildStriker/WildCogs": {
    "author": ["WildStriker (WildStriker#6222)"],
    "description": "Play chess with your friends in discord, if thats your thing. Other Cogs comming soon?",
    "name": "WildCogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "chessgame": {
        "author": ["WildStriker (WildStriker#6222)"],
        "description": "Play chess in discord using python-chess!",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "python-chess",
          "CairoSVG==1.0.22",
          "lxml",
          "tinycss",
          "cssselect",
          "jsonpickle"
        ],
        "short": "Chess in discord",
        "tags": ["games"],
        "type": ""
      }
    },
    "short": "Whatever I can think of, as long as its fun"
  },
  "https://github.com/aikaterna/aikaterna-cogs": {
    "author": ["aikaterna (aikaterna#1393)"],
    "description": "Cogs requested by others, personal cogs, or orphaned cogs.",
    "name": "aikaterna-cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "away": {
        "author": ["aikaterna", "Axas", "TrustyJAID"],
        "description": "Set and unset a user as being away. Originally by Paddo.",
        "disabled": false,
        "end_user_data_statement": "This cog stores data provided by users for the express purpose of redisplaying. It does not store user data which was not provided through a command. Users may remove their own content without making a data removal request. This cog does not support data requests, but will respect deletion requests.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Away message toggle for users",
        "tags": ["away", "afk"],
        "type": "COG"
      },
      "chatchart": {
        "author": ["aikaterna", "Redjumpman"],
        "description": "Generate a pie chart from the last 5000 messages in a channel to see who's been talking the most.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["matplotlib"],
        "short": "Generate a pie chart from the last 5000 messages",
        "tags": ["messages", "chart", "count", "activity"],
        "type": "COG"
      },
      "dadjokes": {
        "author": ["UltimatePancake"],
        "description": "Gets a random dad joke from icanhazdadjoke.com",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Random dad jokes",
        "tags": ["jokes", "dad", "dadjokes"],
        "type": "COG"
      },
      "dictionary": {
        "author": ["UltimatePancake", "aikaterna"],
        "description": "Gets definitions, antonyms, or synonyms for given words",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["beautifulsoup4"],
        "short": "Gets definitions, antonyms, or synonyms for given words",
        "tags": ["dictionary", "synonym", "antonym"],
        "type": "COG"
      },
      "embedpeek": {
        "author": ["aikaterna"],
        "description": "Dev tool to display the content of an embed.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Dev tool to display the content of an embed.",
        "tags": ["embed"],
        "type": "COG"
      },
      "icyparser": {
        "author": ["aikaterna"],
        "description": "Audio addon cog for dislaying icecast/shoutcast info.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Audio addon cog for dislaying icecast/shoutcast info",
        "tags": ["audio", "icecast", "shoutcast"],
        "type": "COG"
      },
      "inspirobot": {
        "author": ["aikaterna"],
        "description": "Fetch a random 'inspiring' message from http://inspirobot.me",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": [],
        "short": "Fetch 'inspiring' messages.",
        "tags": ["inspire", "inspirobot"],
        "type": "COG"
      },
      "invites": {
        "author": ["aikaterna"],
        "description": "Invite count display and leaderboard.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": ["administrator", "embed_links"],
        "required_cogs": {},
        "requirements": [],
        "short": "Invite count display and leaderboard.",
        "tags": ["invites"],
        "type": "COG"
      },
      "latex": {
        "author": ["aikaterna", "Stevy"],
        "description": "Generates an image for a LaTeX expression.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pillow"],
        "short": "Generates an image for a LaTeX expression.",
        "tags": ["latex"],
        "type": "COG"
      },
      "luigipoker": {
        "author": ["aikaterna", "themario30"],
        "description": "Play the Luigi Poker minigame from New Super Mario Brothers.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "A Luigi poker minigame.",
        "tags": ["poker", "game"],
        "type": "COG"
      },
      "otherbot": {
        "author": ["aikaterna", "Pred\u00e4"],
        "description": "Alerts a role when bot(s) go offline.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store end user data. This cog does store Discord IDs as needed for operation.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": ["manage_roles"],
        "required_cogs": {},
        "requirements": [],
        "short": "Alerts a role when bot(s) go offline.",
        "tags": ["bot", "offline", "uptime"],
        "type": "COG"
      },
      "partycrash": {
        "author": ["aikaterna", "Will (tekulvw)"],
        "description": "Posts invites to servers, if the bot is allowed to view them. Does not generate new invites.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": ["manage_guild"],
        "required_cogs": {},
        "requirements": [],
        "short": "Post server invites.",
        "tags": ["invite"],
        "type": "COG"
      },
      "pingtime": {
        "author": ["aikaterna"],
        "description": "It's ping... with latency. Shows all shards.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Ping pong.",
        "tags": ["ping", "pingtime", "latency"],
        "type": "COG"
      },
      "pressf": {
        "author": ["aikaterna"],
        "description": "Pay respects to a thing or user by pressing f.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Press f to pay respects.",
        "tags": ["f", "pressf", "respects"],
        "type": "COG"
      },
      "quiz": {
        "author": ["Keane", "aikaterna"],
        "description": "Play a kahoot-like trivia game.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Play a kahoot-like trivia game.",
        "tags": ["trivia", "quiz"],
        "type": "COG"
      },
      "reminder": {
        "author": ["ZeLarpMaster#0818", "aikaterna"],
        "description": "Lets users tell the bot to remind them about anything they want. Originally by ZeLarpMaster.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": [],
        "short": "Allows users to remind themselves about anything they want.",
        "tags": ["remind", "reminder", "remindme"],
        "type": ""
      },
      "rndstatus": {
        "author": ["aikaterna", "Twentysix"],
        "description": "Random statuses with an optional bot stats mode. Ported from Twentysix's v2 cog.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Random bot statuses",
        "tags": ["status"],
        "type": "COG"
      },
      "rss": {
        "author": ["aikaterna"],
        "description": "Read RSS feeds.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": [
          "bs4",
          "feedparser>=6.0.0",
          "webcolors==1.3",
          "filetype"
        ],
        "short": "Read RSS feeds.",
        "tags": ["rss"],
        "type": ""
      },
      "seen": {
        "author": ["aikaterna"],
        "description": "Check when the user was last active on a server. Originally made by Paddo.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store end user data. This cog does store discord IDs and last seen timestamp as needed for operation.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Check when the user was last active on a server.",
        "tags": ["seen", "activity"],
        "type": "COG"
      },
      "snacktime": {
        "author": ["irdumb", "aikaterna"],
        "description": "snackburr will come around every-so-often if you've asked him to.\nI hear snackburr likes to come around more often when people are partyin.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "\u0295 \u2022\u1d25\u2022\u0294 < It's snacktime, who wants snacks?",
        "tags": ["snack", "snacktime", "snackburr", "party", "party time"],
        "type": ""
      },
      "timezone": {
        "author": ["aikaterna", "fishyfing"],
        "description": "Check timezones, user times, or times in specific places. Originally made by Fishyfing.",
        "disabled": false,
        "end_user_data_statement": "This cog stores data provided by users for the express purpose of redisplaying. It does not store user data which was not provided through a command. Users may remove their own content without making a data removal request. This cog does not support data requests, but will respect deletion requests.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["fuzzywuzzy", "pytz"],
        "short": "Check times for users and places.",
        "tags": ["time", "timezone"],
        "type": "COG"
      },
      "tools": {
        "author": ["aikaterna", "sitryk"],
        "description": "Mod and admin tools.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": ["ban_members", "manage_channels"],
        "required_cogs": {},
        "requirements": ["tabulate", "unidecode"],
        "short": "Mod and admin tools.",
        "tags": ["tools"],
        "type": "COG"
      },
      "trackdecoder": {
        "author": ["aikaterna", "devoxin#0001"],
        "description": "Utility cog for decoding b64 encoded Lavalink Track strings.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Utility cog for decoding b64 encoded Lavalink Track strings.",
        "tags": ["lavalink"],
        "type": "COG"
      },
      "trickortreat": {
        "author": ["aikaterna"],
        "description": "Trick or treating for your server.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store end user data. This cog does store discord IDs as needed for operation. This cog does store user stats for the cog such as their score. Users may remove their own content without making a data removal request. This cog does not support data requests, but will respect deletion requests.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Trick or treat.",
        "tags": ["trick or treat", "candy", "pick", "halloween"],
        "type": "COG"
      },
      "ttt": {
        "author": ["aikaterna", "HizkiFW"],
        "description": "Tic Tac Toe",
        "disabled": false,
        "end_user_data_statement": "This cog does store temporarily (in memory) data about users, which is cleared after the game is done.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": ["add_reactions"],
        "required_cogs": {},
        "requirements": [],
        "short": "Tic Tac Toe",
        "tags": ["game", "games", "tic tac toe", "ttt"],
        "type": "COG"
      },
      "urlfetch": {
        "author": ["aikaterna"],
        "description": "Fetch text from a URL.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Fetch text from a URL.",
        "tags": ["api"],
        "type": ""
      },
      "voicelogs": {
        "author": ["ZeLarpMaster#0818", "aikaterna"],
        "description": "Allows moderators to access users' and channels' voice activity with timestamps and duration.",
        "disabled": false,
        "end_user_data_statement": "This cog stores discord IDs as needed for operation. This cog stores voice channel connection time per-user when toggled on in a server. This cog does not support data requests, but will respect deletion requests.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Voice activity logs",
        "tags": ["voice", "activity", "logs"],
        "type": "COG"
      },
      "wolfram": {
        "author": ["aikaterna"],
        "description": "Query Wolfram|Alpha for answers. Requires a free API key. Originally by Paddo.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pillow"],
        "short": "Query Wolfram|Alpha for answers.",
        "tags": ["wolfram"],
        "type": "COG"
      },
      "youtube": {
        "author": ["aikaterna", "Paddo"],
        "description": "Search youtube for videos, originally by Paddo. This version also includes a ytsearch command to look through multiple results.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Search youtube for videos.",
        "tags": ["youtube"],
        "type": "COG"
      }
    },
    "short": "Utility and fun cogs"
  },
  "https://github.com/bobloy/Fox-V3": {
    "author": ["Bobloy"],
    "description": "Cogs for RED Discord Bot by Bobloy",
    "name": "Fox-V3",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "coglint": {
        "author": ["Bobloy"],
        "description": "Lint python code posted in chat",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "3.3.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pylint"],
        "short": "Python cog linter",
        "tags": ["bobloy", "utils", "tools"],
        "type": ""
      },
      "sayurl": {
        "author": ["Bobloy"],
        "description": "Convert any website into text and post it in chat",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "3.3.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["html2text"],
        "short": "Convert URL to text",
        "tags": ["bobloy", "tools"],
        "type": ""
      }
    },
    "short": "Cogs by Bobloy"
  },
  "https://github.com/burnacid/Botc-Red-Cogs": {
    "author": ["Burnacid"],
    "description": "Playing Blood on the Clocktower via Discord. Then these Cogs are a must",
    "name": "Botc-Red-Cogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "botc": {
        "author": ["Burnacid"],
        "description": "The ideal cog for playing Blood on the Clocktower",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["datetime", "asyncio"],
        "short": "Cog for Blood on the Clocktower",
        "tags": ["move", "role", "blood on the clocktower"],
        "type": "COG"
      },
      "follow": {
        "author": ["Burnacid"],
        "description": "This cog lets a member follow another member through voice channels. Ideal for playing games like Blood on the Clocktower",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Follow",
        "tags": ["utility", "game", "follow", "blood on the clocktower"],
        "type": "COG"
      }
    },
    "short": "Blood on the Clocktower Red Cogs"
  },
  "https://github.com/coffeebank/coffee-cogs": {
    "author": ["coffeebank"],
    "description": "Special cogs offering deeper Discord integrations and convenience through features, services, and webhooks",
    "name": "coffee-cogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "bartender": {
        "author": ["coffeebank"],
        "description": "Serve some yummy drinks to your fellow server members!",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Serve some yummy drinks!",
        "tags": ["bar", "drinks", "soda", "cocktail", "cafe", "coffee"],
        "type": ""
      },
      "coffeetime": {
        "author": ["coffeebank", "aikaterna", "fishyfing"],
        "description": "Check timezones, user times, or times in specific places. Forked from aikaterna's improvements, cog originally by Fishyfing.",
        "disabled": false,
        "end_user_data_statement": "This cog stores data provided by users for the express purpose of redisplaying. It does not store user data which was not provided through a command. Users may remove their own content without making a data removal request. This cog does not support data requests, but will respect deletion requests.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pytz"],
        "short": "Check times for users and places.",
        "tags": ["time", "timezone"],
        "type": "COG"
      },
      "coffeetools": {
        "author": ["coffeebank"],
        "description": "Replacement for 'General' cog, since it needs to be disabled to override certain commands. Changes 'choose' to use | divider.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Replacement for 'General' cog, with some common tools",
        "tags": ["tools", "choose", "choice"],
        "type": ""
      },
      "dmreply": {
        "author": ["coffeebank"],
        "description": "Replacing the built-in DM feature to be more customizable. Allows users specified as mods to send a customized DM embed to users via a User ID. Made with the goal of helping support teams responding to queries via DM, when used in conjunction with a cog that forwards received DMs to a server channel. Uses global settings, so only use this feature on bots hosted for a single server.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Replacing the built-in DM feature to be more customizable",
        "tags": [
          "dm",
          "reply",
          "direct",
          "message",
          "autoreply",
          "autorespond"
        ],
        "type": ""
      },
      "emotes": {
        "author": ["coffeebank"],
        "description": "Custom emote solution for non-nitro users. Use animated emotes in your server, even without Nitro. Make your own emote storage spreadsheet and generate emote-like image links for use in DMs and elsewhere.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["asyncio", "aiohttp"],
        "short": "Custom emote solution for non-nitro users",
        "tags": [
          "emoji",
          "emote",
          "animated",
          "nitro",
          "info",
          "google sheets",
          "api"
        ],
        "type": ""
      },
      "hellohook": {
        "author": ["coffeebank"],
        "description": "Create your own welcome bot with a custom profile picture! Set the welcome message to be regular text and/or an embed. Comes with usernames, user avatars, pings/mentions, server member counts, and leave messages.\n\nSend different welcome messsages based on the invite url! Create different 'bots' using webhooks.\n\nUpdated for Red 3.5",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Create your own welcome bot with a custom profile picture!",
        "tags": ["welcome", "invites", "goodbye", "webhook"],
        "type": ""
      },
      "jsonrequest": {
        "author": ["coffeebank"],
        "description": "Send and receive a json request from Discord. Includes domain whitelisting by server.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Send and receive a json request from Discord",
        "tags": ["json"],
        "type": ""
      },
      "kyarutail": {
        "author": ["coffeebank"],
        "description": "Convert your messages into a message written with emotes of Kyaru's tail. Kyaru (aka. Karyl) is a character from Princess Connect! Re:Dive.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["asyncio", "aiohttp"],
        "short": "Convert your messages into a message written with Kyaru's tail.",
        "tags": ["priconne", "emote", "emoji"],
        "type": ""
      },
      "loveplay": {
        "author": ["coffeebank"],
        "description": "Send love to other members of the server with reaction gifs from Purrbot API. Does not require a user @mention (say '=hug server' all you like!). Includes: blush, cuddle, dance, hug, kiss, lick, neko, nom, pat, poke, slap. Also includes a custom reaction gif builder that works for any gif type from the Purrbot API.\n\nTo replace built-in hug command, unload 'General' cog and install 'coffeetools' cog.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["requests"],
        "short": "Send love to other members of the server with hugs, kisses, etc.",
        "tags": ["love", "hug", "kiss", "catgirls"],
        "type": ""
      },
      "msgmover": {
        "author": ["coffeebank"],
        "description": "Make moving messages between channels/servers easy and integrated, using webhooks.\n\nmsgcopy: Copy messages from one channel to another. Move whole conversations, or merge channels easily with re-uploaded attachments, bot messages, and usernames/profiles replicated in full. Includes timestamp spacers.\n\nmsgrelay: Relay messages from one channel to another channel/server. Supports usernames/profile pics, replies, attachments (files/images/video), and embeds (bot command replies). Supports edited/deleted messages. Supports forwarding to multiple webhooks/channels.\n\nUpdated for Red 3.5",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["aiohttp", "requests"],
        "short": "Move messages across channels and servers",
        "tags": [
          "relays",
          "move",
          "messages",
          "forwarding",
          "link",
          "channels",
          "server",
          "pictures"
        ],
        "type": ""
      },
      "pinboard": {
        "author": ["coffeebank"],
        "description": "Make a bulletin board pinned message! Users can add/remove their own content to/from a shared, \"bulletin board\" style pinned message.",
        "disabled": false,
        "end_user_data_statement": "This cog stores the data you submit into a pinned message, in order to keep pinned messages updated.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Make bulletin board style pinned messages! Let people add/remove their own blurbs in a pinned message.",
        "tags": ["pins", "pinned", "messages", "board"],
        "type": ""
      },
      "quarantine": {
        "author": ["coffeebank"],
        "description": "Quarantine a user easily. Set a muterole and mod log channel, and any users specified will have their roles removed and replaced with the muterole.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Quarantine a user",
        "tags": ["moderation", "roles", "mute", "mod"],
        "type": ""
      },
      "sendhook": {
        "author": ["coffeebank"],
        "description": "The comprehensive webhooks cog, with sending, listing, and creating of webhooks. Comes with support for webhook aliases and sending messages as your username/avatar. Perfect for users stuck on mobile Discord.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["requests"],
        "short": "The comprehensive webhooks cog, with sending, listing, and creating of webhooks",
        "tags": ["webhook"],
        "type": ""
      },
      "spotifyembed": {
        "author": ["coffeebank"],
        "description": "Automatically send a reply to Spotify links with a link to the embed preview. Convenient for mobile users who can finally listen to music samples from Discord, without needing an account.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Automatically send replies to Spotify links with the embed preview, for mobile users",
        "tags": ["spotify", "music", "preview", "embed"],
        "type": ""
      },
      "websearch": {
        "author": ["coffeebank"],
        "description": "A simple Discord bot feature that returns links to search engines like Google without needing to copy-paste a search term into a website/app separately. Comes preset with search strings for Google, Bing, Ecosia, and DuckDuckGo. Custom search strings can be added. Works similarly to LMGTFY, but without the passive aggressiveness.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Search for stuff on the web",
        "tags": ["search", "search engine"],
        "type": ""
      },
      "zidian": {
        "author": ["coffeebank"],
        "description": "Chinese dictionary bot. Can search Chinese characters, Pinyin, and English. Fetches results locally from saved dictionaries. Uses CC-CEDICT.\n\nInspired by Pleco and Jisho.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["asyncio", "aiohttp"],
        "short": "Chinese dictionary bot",
        "tags": [
          "dictionary",
          "chinese",
          "zhongwen",
          "\u4e2d\u6587",
          "\u6c49\u8bed",
          "\u5b57\u5178",
          "\u8bcd\u5178"
        ],
        "type": ""
      }
    },
    "short": "Special cogs offering deeper Discord integrations and convenience"
  },
  "https://github.com/crossedfall/crossed-cogs": {
    "author": ["Crossedfall (Crossedfall#1001)"],
    "description": "Notes and Status cogs for SS13 servers",
    "name": "crossed-cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "cclookup": {
        "author": ["Crossedfall (Crossedfall#1001)"],
        "description": "Checks through the CentCom ban database for any entries relating to a given user",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": ["Manage Messages", "Embed Links"],
        "required_cogs": {},
        "requirements": ["httpx>=0.14.1"],
        "short": "References the CentCom ban database for any entries for a given user",
        "tags": [
          "Space Station 13",
          "Game",
          "Administration",
          "Utility",
          "SS13"
        ],
        "type": ""
      },
      "dmcompile": {
        "author": ["Crossedfall (Crossedfall#1001)"],
        "description": "Compile and test DM code from Discord!",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": ["Manage Messages", "Embed Links"],
        "required_cogs": {},
        "requirements": ["httpx"],
        "short": "",
        "tags": [],
        "type": ""
      },
      "getnotes": {
        "author": ["Crossedfall (Crossedfall#1001)"],
        "description": "Pulls player notes from your database. TG Scheme required",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": ["Manage Messages", "Embed Links"],
        "required_cogs": {},
        "requirements": ["aiomysql>=0.0.20"],
        "short": "Obtains player notes and posts them into discord on command!",
        "tags": [
          "Space Station 13",
          "Game",
          "Administration",
          "Utility",
          "SS13"
        ],
        "type": ""
      },
      "status": {
        "author": ["Crossedfall (Crossedfall#1001)"],
        "description": "Checks the current status of an SS13 round and pulls information about the number of players, the game-mode, and round duration.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": ["Manage Messages", "Embed Links", "Mention Everyone"],
        "required_cogs": {},
        "requirements": [],
        "short": "Pulls information from the current SS13 round",
        "tags": [
          "Space Station 13",
          "Game",
          "Administration",
          "Utility",
          "SS13"
        ],
        "type": ""
      },
      "verifyckey": {
        "author": ["Crossedfall (Crossedfall#1001)"],
        "description": "Allows users to link their CKEY to their Discord account and obtain roles for doing so. Used as a form of Discord user verification.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": ["Manage Messages", "Embed Links", "Manage Roles"],
        "required_cogs": {},
        "requirements": [],
        "short": "Verify ckeys in discord!",
        "tags": [
          "Space Station 13",
          "Game",
          "Administration",
          "Utility",
          "SS13"
        ],
        "type": ""
      }
    },
    "short": "SS13 cogs"
  },
  "https://github.com/designbyadrian/CogsByAdrian": {
    "author": ["ThinkAdrian"],
    "description": "A few fun cogs for your repo and your general desire to abuse your moderator powers",
    "name": "CogsByAdrian",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "crier": {
        "author": ["DesignByAdrian (ThinkAdrian#1186)"],
        "install_msg": "Hear ye! This cog enables anyone to post a message to any channel! Please use the Permissions cog to change this behaviour. Enjoy!",
        "name": "Crier",
        "disabled": false,
        "short": "Announce messages in different channels",
        "description": "Have the bot say or shout in a target channel",
        "tags": ["say", "shout", "message", "announcements"],
        "hidden": false,
        "min_python_version": [3, 6, 0],
        "min_bot_version": "3.5.0"
      },
      "insult": {
        "author": ["DesignByAdrian (ThinkAdrian#1186)"],
        "description": "Usage: [p]insult <user>\n",
        "short": "Insult a user creatively.",
        "name": "Insult",
        "tags": ["fun"],
        "min_bot_version": "3.5.0"
      },
      "killer": {
        "author": ["DesignByAdrian (ThinkAdrian#1186)"],
        "install_msg": "Bang bang, you're dead! Caution: some of the commands have violent and/or sexual responses!",
        "name": "Killer",
        "disabled": false,
        "short": "Do bad things to other users",
        "description": "Slap, punch, stab unsuspecting neighbours!",
        "tags": ["fun"],
        "hidden": false,
        "min_python_version": [3, 6, 0],
        "min_bot_version": "3.5.0"
      },
      "penis": {
        "author": ["Twentysix", "DesignByAdrian (ThinkAdrian#1186)"],
        "DESCRIPTION": "Usage: [p]penis <user>\nThis is 100% accurate.",
        "SHORT": "Detects users' penis size with maximum accuracy.",
        "NAME": "Penis",
        "TAGS": ["fun"],
        "min_bot_version": "3.5.0"
      }
    },
    "short": "Cogs by ThinkAdrian inspired by many."
  },
  "https://github.com/dualmoon/Cogs.v3": {
    "author": ["luna"],
    "description": "Cogs for RED Discord Bot by luna",
    "name": "Cogs.v3",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "bandname": {
        "author": ["luna"],
        "description": "Randomly creates names for made up bands by scanning messages 2-5 words in length and applying them to bands of a randomly chosen genre.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": [3, 7, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Randomly creates names for made up bands.",
        "tags": [],
        "type": ""
      },
      "webthing": {
        "author": ["luna"],
        "description": "Testing running a web server as a cog",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": [3, 7, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Testing running a web server as a cog",
        "tags": [],
        "type": ""
      }
    },
    "short": "Cogs by luna"
  },
  "https://github.com/elijabesu/SauriCogs": {
    "author": ["saurichable"],
    "description": "Just some cogs that I was searching for but couldn't find so I made my own.",
    "name": "SauriCogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {},
    "short": "Just some cogs for Red Discord Bot"
  },
  "https://github.com/fixator10/Fixator10-Cogs": {
    "author": ["Fixator10"],
    "description": "Cogs for Red-DiscordBot. Including port of V2 leveler by Stevy.",
    "name": "Fixator10-Cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "massthings": {
        "author": ["Fixator10"],
        "description": "\u26a0Cog for doing things in bulk.\u26a0\n\u26a0\ufe0f This cog may contain commands that may (or may not) be against Discord API terms. Use this at your own risk, cog author is not responsible for anything that happens during usage of this cog.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": true,
        "max_bot_version": "3.4.99",
        "min_bot_version": "3.0.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["tabulate"],
        "short": "\u26a0Cog for doing things in bulk.\u26a0",
        "tags": [],
        "type": ""
      }
    },
    "short": "Cogs for Red-DiscordBot."
  },
  "https://github.com/flapjax/FlapJack-Cogs": {
    "author": ["FlapJack"],
    "description": "Thanks for using FlapJack Cogs. If you have any issues, please join the Cog Support server and post in the support_flapjack-cogs channel: <https://discord.gg/k5xbRqG> or open an issue on the repo.",
    "name": "FlapJack-Cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "blizzard": {
        "author": ["FlapJack"],
        "description": "Player information and latest Blizzard game patch notes in chat. Now with cool paginated patch notes you can navigate with reactions! And, Pandoc is no longer required!\n\nGames supported:\nOverwatch - Stats, patch notes\nDiablo3 - Stats, patch notes\nHearthstone - patch notes\nHeroes of the Storm - patch notes\nStarcraft2 - patch notes\nWorld of Warcraft - patch notes, token prices\n\nDependencies:\nBeautifulSoup4 :: https://www.crummy.com/software/BeautifulSoup/bs4/doc/\nBleach :: https://pypi.python.org/pypi/bleach",
        "disabled": true,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["beautifulsoup4", "bleach"],
        "short": "Utilities for Blizzard games",
        "tags": [
          "blizzard",
          "patch",
          "notes",
          "games",
          "overwatch",
          "starcraft",
          "diablo",
          "warcraft",
          "hearthstone"
        ],
        "type": ""
      },
      "cryptoprice": {
        "author": ["FlapJack"],
        "description": "Fetches cryptocurrency price data.\n\nDependencies:\nBeautifulSoup4 :: https://www.crummy.com/software/BeautifulSoup/bs4/doc/\nTabulate :: https://github.com/gregbanks/python-tabulate",
        "disabled": true,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["bs4", "tabulate"],
        "short": "Fetches cryptocurrency price data",
        "tags": ["crypto", "currency", "price", "bitcoin"],
        "type": ""
      }
    },
    "short": "Cogs by FlapJack"
  },
  "https://github.com/flaree/Flare-Cogs": {
    "author": ["flare (flare#0001)"],
    "description": "Assortment of cogs written by flare.",
    "name": "Flare-Cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "antispam": {
        "author": ["flare(flare#0001)"],
        "description": "Block users who spam commands for a defined period of time..",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Block users who spam commands for a defined period of time.",
        "tags": ["blacklist", "antispam"],
        "type": ""
      },
      "apitools": {
        "author": ["flare(flare#0001)"],
        "description": "Simple GET/POST requests via the bot.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Simple GET/POST requests via the bot.",
        "tags": ["http", "api", "api requests", "get", "post"],
        "type": ""
      },
      "botlistspost": {
        "author": ["flare(flare#0001)"],
        "description": "Post server count to various discord bot lists.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Post server count to various discord bot lists.",
        "tags": ["botlist"],
        "type": ""
      },
      "cashdrop": {
        "author": ["flare(flare#0001)"],
        "description": "Random credits drop, where people can answer questions or pick them up!",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Random credits drop, where people can answer questions or pick them up!",
        "tags": [
          "maths",
          "drop",
          "credits",
          "questions",
          "random",
          "random-drop",
          "random-credits",
          "random-questions",
          "economy"
        ],
        "type": ""
      },
      "commandstats": {
        "author": ["flare(flare#0001)"],
        "description": "Track all commands used globally, guild wise and during the current session.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["tabulate", "pandas"],
        "short": "Track all commands used.",
        "tags": ["commandstats"],
        "type": ""
      },
      "covid": {
        "author": ["flare(flare#0001)"],
        "description": "List stats of Covid-19 (Novel Coronavirus), global or countrywise!",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["validators"],
        "short": "Show Covid-19 (Novel Coronavirus) Statistics.",
        "tags": ["covid", "coronavirus"],
        "type": ""
      },
      "crypto": {
        "author": ["flare(flare#0001)", "Flame", "TrustyJAID"],
        "description": "Buy and sell cryptocurrencies with Red economy.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["tabulate"],
        "short": "Buy and sell cyrptocurrencies with Red economy.",
        "tags": ["crypto"],
        "type": ""
      },
      "dankmemer": {
        "author": ["flare(flare#0001)"],
        "description": "DankMemer's image generation commands.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "3.4.99",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["validators"],
        "short": "DankMemer image generator.",
        "tags": ["memes", "image gen"],
        "type": ""
      },
      "dminvites": {
        "author": ["flare(flare#0001)"],
        "description": "Respond with the bots invite link if the bot recieves a message containing a server invite.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Respond with the bot invite link when DM'd a server invite link.",
        "tags": ["dminvite", "invites"],
        "type": ""
      },
      "emailverify": {
        "author": ["flare(flare#0001)"],
        "description": "Secure your server by making users verify their account with an email.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["aiosmtplib"],
        "short": "Secure your server by making users verify their account with an email.",
        "tags": ["email verification", "email", "verification"],
        "type": ""
      },
      "f1": {
        "author": ["flare(flare#0001)"],
        "description": "F1 data, races, drivers, constructors etc.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["tabulate"],
        "short": "Data related to F1.",
        "tags": ["F1", "formula one", "racing", "forumla", "one"],
        "type": ""
      },
      "faceit": {
        "author": ["flare(flare#0001)"],
        "description": "List stats of faceit users, game history or specific games and even ongoing games!",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "List stats of faceit users, game history or specific games and even ongoing games!",
        "tags": ["faceit", "csgo", "games"],
        "type": ""
      },
      "forward": {
        "author": ["flare(flare#0001)", "Aikaterna"],
        "description": "Forward messages sent to the bot to the bot owner or in a specified channel.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Forward messages sent to the bot to the bot owner or in a specified channel.",
        "tags": ["forward", "forwarding"],
        "type": ""
      },
      "giveaways": {
        "author": ["flare(flare#0001)"],
        "description": "Giveaway cog with features such duration or end timing, multipliers, role only acces, bank integration etc.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["dateparser"],
        "short": "Giveaway cog with features such duration or end timing, multipliers, role only acces, bank integration etc.",
        "tags": ["giveaway", "giveaways", "raffle"],
        "type": ""
      },
      "highlight": {
        "author": ["flare(flare#0001)"],
        "description": "Highlight certain words to be notified of if said in a certain channel.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["tabulate"],
        "short": "Highlight certain words to be notified of if said in a certain channel.",
        "tags": ["highlight"],
        "type": ""
      },
      "joinmessage": {
        "author": ["flare (flare#0001)"],
        "description": "Send a message to a guilds general chat, system channel or first available channel.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Send a message to a guilds general chat, system channel or first available channel.",
        "tags": ["Join Message"],
        "type": ""
      },
      "jsk": {
        "author": ["flare(flare#0001)"],
        "description": "Jishaku ported to Red.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["git+https://github.com/flaree/jishaku"],
        "short": "Jishaku ported to Red.",
        "tags": ["jsk"],
        "type": ""
      },
      "mod": {
        "author": ["flare(flare#0001)"],
        "description": "Core mod with the inclusion of custom messages for banning, kicking and unbanning.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Mod with custom messages.",
        "tags": ["mod"],
        "type": ""
      },
      "news": {
        "author": ["flare(flare#0001)"],
        "description": "Grab breaking headline around the world!",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["validators", "iso8601"],
        "short": "Grab the latest headlines, nationally or globally.",
        "tags": ["news", "information"],
        "type": ""
      },
      "palette": {
        "author": ["flare(flare#0001)"],
        "description": "Show colour palette of images, avatars, emojis etc",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pillow", "colorgram.py"],
        "short": "Show colour palette of images, avatars etc.",
        "tags": [
          "colours",
          "palette",
          "colour",
          "color",
          "image",
          "avatar",
          "emoji"
        ],
        "type": ""
      },
      "permchecker": {
        "author": ["flare(flare#0001)"],
        "description": "This cog is a basic permission checker, used to check if a user/role/channel has a set permission.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "This cog is a basic permission checker, used to check if a user/role/channel has a set permission.",
        "tags": [
          "permissions",
          "checker",
          "permissionchecker",
          "permchecker",
          "perm",
          "perms"
        ],
        "type": ""
      },
      "r6": {
        "author": ["flare(flare#0001)"],
        "description": "List R6 Statistics from seasons, individual operators, all operators and more!",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pillow", "r6statsapi"],
        "short": "Show R6 Statistics.",
        "tags": ["r6", "stats", "operators"],
        "type": ""
      },
      "redditpost": {
        "author": ["flare(flare#0001)"],
        "description": "Reddit Autoposting of new content.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["validators", "tabulate", "asyncpraw"],
        "short": "Reddit Autoposting of new content.",
        "tags": ["reddit", "autoposting"],
        "type": ""
      },
      "rolehistory": {
        "author": ["flare(flare#0001)"],
        "description": "Visualize the history of a user's roles.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Visualize the history of a user's roles.",
        "tags": ["roles", "history", "rolehistory"],
        "type": ""
      },
      "simleague": {
        "author": ["flare(flare#0001)", "Stevy"],
        "description": "Simulation League for discord based on reds leveler level.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {
          "leveler": "https://github.com/fixator10/Fixator10-Cogs"
        },
        "requirements": ["tabulate", "motor", "pillow", "validators"],
        "short": "Football simulation league for discord - utilizing leveler as a way to determine performances.",
        "tags": ["sim league"],
        "type": ""
      },
      "snipe": {
        "author": ["flare(flare#0001)"],
        "description": "Snipe command converted to Red, get the last message deleted in a channel.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Snipe the last message deleted in a channel.",
        "tags": ["snipe"],
        "type": ""
      },
      "stickbugged": {
        "author": ["flare(flare#0001)"],
        "description": "Get stickbugged.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["get-stick-bugged-lol"],
        "short": "Get stickbugged.",
        "tags": ["stickbugged"],
        "type": ""
      },
      "threadbumper": {
        "author": ["flare(flare#0001)"],
        "description": "Bump threads to keep them alive forever..",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Bump threads to keep them alive forever.",
        "tags": ["threads", "bump", "thread bumping"],
        "type": ""
      },
      "tips": {
        "author": ["flare(flare#0001)"],
        "description": "Randomly apply a tip message to a bot message randomly.",
        "disabled": true,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Append a message to a bot message.",
        "tags": ["tips"],
        "type": ""
      },
      "trigger": {
        "author": ["flare(flare#0001)"],
        "description": "Allow for the creation of triggers to respond to keywords in messages.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Allow for the creation of triggers to respond to keywords in messages.",
        "tags": ["trigger"],
        "type": ""
      },
      "unbelievaboat": {
        "author": ["flare(flare#0001)"],
        "description": "Unbelievaboat economy commands converted for Red use..",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["tabulate"],
        "short": "Unbelievaboat economy commands converted for Red use.",
        "tags": ["economy", "unbelievaboat", "rob", "work"],
        "type": ""
      },
      "userinfo": {
        "author": ["flare(flare#0001)"],
        "description": "Show a users normal userinfo + their badges and shared servers and bank stuff.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Userinfo with user badges and economy details.",
        "tags": ["userinfo"],
        "type": ""
      },
      "voicetracker": {
        "author": ["flare(flare#0001)"],
        "description": "Track the voice chat of yourself or those in your server.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Track the voice chat of yourself or those in your server.",
        "tags": [
          "voice tracking",
          "voice chat",
          "voice",
          "tracking",
          "voice chat"
        ],
        "type": ""
      }
    },
    "short": "Assortment of cogs written by flare."
  },
  "https://github.com/flaree/lastfm-red": {
    "author": ["flare(flare#0001)", "joinem (Miso Bot)", "fixator10", "alec"],
    "description": "Port of Miso Bots LastFM functionality with slight changed, additions and removals.",
    "name": "lastfm-red",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "lastfm": {
        "author": ["flare(flare#0001)", "joinem", "fixator10", "ryan"],
        "description": "Port of Miso Bot's LastFM Cog,",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["humanize", "bs4", "tabulate", "wordcloud", "arrow"],
        "short": "Port of Miso Bot's LastFM Cog",
        "tags": ["LastFM", "scrobbler", "music"],
        "type": ""
      }
    },
    "short": "MisoBot LastFM port to Red."
  },
  "https://github.com/flaree/pokecord-red": {
    "author": ["flare (flare#0001)"],
    "description": "Pokecord, rewritten to be compatible with Red.",
    "name": "pokecord-red",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "pokecord": {
        "author": ["flare(flare#0001)"],
        "description": "Pokecord for Red.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["tabulate", "databases", "databases[sqlite]"],
        "short": "Pokecord for Red.",
        "tags": ["pokemon", "pokecord"],
        "type": ""
      }
    },
    "short": "Pokecord, rewritten for Red."
  },
  "https://github.com/goonstation/gooncogs": {
    "author": ["pali (pali#0439)"],
    "description": "Goonstation cogs",
    "name": "gooncogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "betterreports": {
        "author": ["RedBot development team", "pali (pali#0439)"],
        "description": "Fork of built-in Reports module which improves functionality. Lets users send (anonymous or non-anonymous) reports to the server administrators.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Send reports to server administrators.",
        "tags": ["administration", "reports"],
        "type": ""
      },
      "byondcom": {
        "author": ["pali (pali#0439)"],
        "description": "TODO",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["aiohttp", "bs4"],
        "short": "TODO",
        "tags": [],
        "type": ""
      },
      "dmref": {
        "author": ["pali (pali#0439)"],
        "description": "TODO",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["aiohttp"],
        "short": "TODO",
        "tags": [],
        "type": ""
      },
      "editableposts": {
        "author": ["pali (pali#0439)"],
        "description": "Lets administrators create and edit posts via the bot. For example for a rules post etc.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Lets administrators create and edit posts via the bot.",
        "tags": ["administration"],
        "type": ""
      },
      "emojieverywhere": {
        "author": ["pali (pali#0439)"],
        "description": "Keeps track of used emoji and lets people use them using a slash command.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Keeps track of used emoji and lets people use them using a slash command.",
        "tags": ["emoji"],
        "type": ""
      },
      "generalapi": {
        "author": ["pali (pali#0439)"],
        "description": "TODO",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["uvicorn", "fastapi", "aiofiles"],
        "short": "TODO",
        "tags": ["library", "http", "api"],
        "type": ""
      },
      "githubendpoint": {
        "author": ["pali (pali#0439)"],
        "description": "TODO",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "TODO",
        "tags": ["github"],
        "type": ""
      },
      "githubstuff": {
        "author": ["pali (pali#0439)"],
        "description": "Various GitHub-related useful things. TODO better description.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pygithub", "requests"],
        "short": "Various GitHub-related useful things. TODO better description.",
        "tags": ["git", "github"],
        "type": ""
      },
      "givepoints": {
        "author": ["pali (pali#0439)"],
        "description": "Let people give points to each other.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Let people give points to each other.",
        "tags": ["fun", "misc"],
        "type": ""
      },
      "goonartgallery": {
        "author": ["pali (pali#0439)"],
        "description": "TODO",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "TODO",
        "tags": ["ss13", "byond"],
        "type": ""
      },
      "goonhub": {
        "author": ["pali (pali#0439)"],
        "description": "TODO",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "aiohttp",
          "python-geoip-python3",
          "python-geoip-geolite2"
        ],
        "short": "TODO",
        "tags": [],
        "type": ""
      },
      "goonmisc": {
        "author": ["pali (pali#0439)"],
        "description": "Stuff specific to Goonstation that didn't fit elsewhere.",
        "disabled": false,
        "end_user_data_statement": "This cog doesn't store anything about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "githubpy",
          "requests",
          "pillow",
          "aiohttp",
          "cairosvg"
        ],
        "short": "Misc/fun stuff for Goonstation servers.",
        "tags": ["fun", "misc"],
        "type": ""
      },
      "goonservers": {
        "author": ["pali (pali#0439)"],
        "description": "Cog to store list of Goonstation servers and query their status.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Cog to store list of Goonstation servers and query their status.",
        "tags": ["ss13", "byond"],
        "type": ""
      },
      "inlinecommands": {
        "author": ["pali (pali#0439)"],
        "description": "Lets people use commands in-line in messages by putting them in square brackets.",
        "disabled": false,
        "end_user_data_statement": "This cog doesn't store anything at all.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Lets people use commands in-line in messages using [command].",
        "tags": ["qol", "commands"],
        "type": ""
      },
      "ipinfo": {
        "author": ["pali (pali#0439)"],
        "description": "TODO",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["aiohttp"],
        "short": "TODO",
        "tags": [],
        "type": ""
      },
      "listthreads": {
        "author": ["pali (pali#0439)"],
        "description": "",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Commands that let people list threads they have access to",
        "tags": ["threads"],
        "type": ""
      },
      "loudvideos": {
        "author": ["pali (pali#0439)"],
        "description": "Sends a warning message when a video is too loud.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["yt_dlp"],
        "short": "Sends a warning message when a video is too loud.",
        "tags": ["video"],
        "type": ""
      },
      "messagecounter": {
        "author": ["pali (pali#0439)"],
        "description": "",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "",
        "tags": [],
        "type": ""
      },
      "mybbnotif": {
        "author": ["pali (pali#0439)"],
        "description": "TODO",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["aiohttp", "markdownify"],
        "short": "TODO",
        "tags": ["forum"],
        "type": ""
      },
      "nightshadewhitelist": {
        "author": ["pali (pali#0439)"],
        "description": "TODO",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "TODO",
        "tags": ["ss13", "byond"],
        "type": ""
      },
      "norolenoinvite": {
        "author": ["pali (pali#0439)"],
        "description": "Deletes server invite messages from users without roles.",
        "disabled": false,
        "end_user_data_statement": "This cog doesn't store anything at all.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Deletes invite messages from roleless users.",
        "tags": ["administration"],
        "type": ""
      },
      "notifyonline": {
        "author": ["pali (pali#0439)"],
        "description": "TODO",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "TODO",
        "tags": ["administration"],
        "type": ""
      },
      "pendingappeals": {
        "author": ["pali (pali#0439)"],
        "description": "TODO",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["aiohttp", "bs4"],
        "short": "TODO",
        "tags": ["forum"],
        "type": ""
      },
      "pinorder": {
        "author": ["pali (pali#0439)"],
        "description": "Cog that lets you set some pins to be always on top of the pin list.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Cog that lets you set some pins to be always on top of the pin list.",
        "tags": ["pins"],
        "type": ""
      },
      "rolestuff": {
        "author": ["pali (pali#0439)"],
        "description": "Role management for Goonstation server. This is pretty much hardcoded and very specific. Don't install this elsewhere please.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Role management for Goonstation server.",
        "tags": ["administration", "roles"],
        "type": ""
      },
      "roundreminder": {
        "author": ["pali (pali#0439)"],
        "description": "Lets people set reminders for when a next Goonstation round is starting.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Lets people set reminders for when a next Goonstation round is starting.",
        "tags": ["ss13", "reminder"],
        "type": ""
      },
      "spacebeecentcom": {
        "author": ["pali (pali#0439)"],
        "description": "TODO",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "TODO",
        "tags": ["ss13", "byond"],
        "type": ""
      },
      "spacebeecommands": {
        "author": ["pali (pali#0439)"],
        "description": "TODO",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["yt-dlp"],
        "short": "TODO",
        "tags": ["ss13", "byond"],
        "type": ""
      },
      "stopnitroscams": {
        "author": ["pali (pali#0439)"],
        "description": "Deletes messages and bans users trying to scam people.",
        "disabled": false,
        "end_user_data_statement": "This cog doesn't store anything at all.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Deletes messages and bans users trying to scam people.",
        "tags": ["administration"],
        "type": ""
      },
      "tgs": {
        "author": ["pali (pali#0439)"],
        "description": "Cog to manage Space Station 13 running on TGS.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["aiohttp"],
        "short": "Cog to manage Space Station 13 running on TGS.",
        "tags": ["ss13", "byond"],
        "type": ""
      },
      "timeoutself": {
        "author": ["pali (pali#0439)"],
        "description": "",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Command that lets people timeout themselves.",
        "tags": ["timeout", "fun"],
        "type": ""
      },
      "timestamp": {
        "author": ["pali (pali#0439)"],
        "description": "Lets people generate discord smart timestamps from human readable time description.",
        "disabled": false,
        "end_user_data_statement": "This cog doesn't store anything at all.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["dateparser"],
        "short": "Lets people generate discord smart timestamps from human readable time description.",
        "tags": ["time", "utility"],
        "type": ""
      },
      "wikiss13": {
        "author": ["PhasecoreX (PhasecoreX#0635)", "pali (pali#0439)"],
        "description": "Allows for looking up terms on Goonstation Wiki, and having the results displayed in chat. Fork of https://github.com/PhasecoreX/PCXCogs/tree/master/wikipedia that has been mutilated to work with a different wiki.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["python-dateutil", "Levenshtein"],
        "short": "Look up articles on Goonstation Wiki.",
        "tags": ["utility", "wiki", "ss13"],
        "type": ""
      },
      "wireciendpoint": {
        "author": ["pali (pali#0439)"],
        "description": "TODO",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "TODO",
        "tags": ["ci"],
        "type": ""
      },
      "worldtopic": {
        "author": ["pali (pali#0439)"],
        "description": "Library cog to send messages to BYOND servers' /world/Topic() procedure.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Library cog to send messages to BYOND servers' /world/Topic() procedure.",
        "tags": ["ss13", "byond", "library"],
        "type": ""
      }
    },
    "short": "gooncogs"
  },
  "https://github.com/grayconcaves/FanCogs": {
    "author": ["Chris/Gai (tagape#3232)"],
    "description": "Random selection of fandom cogs, especially for MXTX fans",
    "name": "FanCogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {},
    "short": "Random fandom cogs"
  },
  "https://github.com/i-am-zaidali/cray-cogs": {
    "author": ["crayyy_zee"],
    "description": "Utility and fun cogs made by crayyy_zee. (Mostly targeted towards a dank memer audience).",
    "name": "cray-cogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "hitormiss": {
        "author": ["crayyy_zee"],
        "description": "A cog based off of discord's snowball bot with many changes (no slash commands tho unfortunately).",
        "disabled": false,
        "end_user_data_statement": "This cog stores End User Data when storing the items of a user. If a user requests data-deletion, all their data will be removed from the bot.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["emoji==1.6.3"],
        "short": "Throw items at other users bought from the shop through the bot's currency.",
        "tags": ["snow", "christmas", "economy", "currency", "shop"],
        "type": "COG"
      },
      "joinping": {
        "author": ["crayyy_zee"],
        "description": "Ghost ping users in channels to alert them when they join.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/phenom4n4n/TagScript.git@dpy2"
        ],
        "short": "Ping members on join in specific channels.",
        "tags": ["joinping", "member join", "join", "welcome", "mentions"],
        "type": "COG"
      },
      "keywordpoints": {
        "author": ["crayyy_zee"],
        "description": "Set keywords that allow users to gain points when detected in their messages.",
        "disabled": false,
        "end_user_data_statement": "This cog stores user and guild ids to keep track of points and keywords.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Add keywords to assign points to users when they use them.",
        "tags": ["points", "rewards", "kwywords", "level", "utility"],
        "type": "COG"
      },
      "notes": {
        "author": ["crayyy_zee"],
        "description": "Stores notes on users per guild.",
        "disabled": false,
        "end_user_data_statement": "This cog stores user ids to link them to their notes.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["tabulate"],
        "short": "Store notes on users.",
        "tags": ["notes", "note", "utility"],
        "type": "COG"
      },
      "tickchanger": {
        "author": ["crayyy_zee"],
        "description": "Change the emoji that gets reacted with when `ctx.tick()` is called.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store End User Data.",
        "hidden": false,
        "max_bot_version": "3.4.14",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["emoji"],
        "short": "Change `ctx.tick()`'s emoji.",
        "tags": ["tick", "ctx", "emoji", "change", "monkeypatch"],
        "type": "COG"
      },
      "timer": {
        "author": ["crayyy_zee"],
        "description": "Start countdowns and wait for them to end.",
        "disabled": false,
        "end_user_data_statement": "This cog stores End User Data when storing a timer. If a user requests data-deletion, all their data will be removed from the bot.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["emoji==1.6.3"],
        "short": "Start countdowns and wait for them to end.",
        "tags": [],
        "type": "COG"
      }
    },
    "short": "Badly coded but awesome cogs."
  },
  "https://github.com/jakehlee/JDG-Cogs-V3": {
    "author": ["JDG"],
    "description": "Simple cogs made by JDG",
    "name": "JDG-Cogs-V3",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "wordle": {
        "author": ["JDG"],
        "description": "Track your Wordle statistics and compete with your friends.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "A Wordle companion cog.",
        "tags": ["game", "wordle"],
        "type": ""
      }
    },
    "short": "Cogs made by JDG"
  },
  "https://github.com/japandotorg/Seina-Cogs": {
    "author": ["inthedark.org#0666"],
    "description": "Fun cogs developed by inthedark.org.",
    "name": "Seina-Cogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "calculator": {
        "author": ["inthedark.org#0666"],
        "description": "Math stuff",
        "disabled": false,
        "end_user_data_statement": "This cog does not store End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Math stuff",
        "tags": ["utility", "calulator"],
        "type": "COG"
      },
      "chemistry": {
        "author": ["inthedark.org#0666"],
        "description": "Calculate molecular mass directly from discord.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["molmass==2021.6.18"],
        "short": "Chemistry stuff",
        "tags": ["utility", "chemistry", "molarmass", "chem"],
        "type": "COG"
      },
      "codeforces": {
        "author": ["inthedark.org#0666"],
        "description": "Search users on CodeForces.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Search users on CodeForces.",
        "tags": ["codeforces"],
        "type": "COG"
      },
      "epicgames": {
        "author": ["inthedark.org#0666"],
        "description": "Get free games info from epic games store.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "A simple epic games related cog.",
        "tags": ["utility", "epicgames"],
        "type": "COG"
      },
      "firstmessage": {
        "author": ["inthedark.org#0666"],
        "description": "A simple cog for jump to first message of a channel.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "A simple cog for jump to first message of a channel.",
        "tags": ["utility", "tools"],
        "type": "COG"
      },
      "maplestory": {
        "author": ["inthedark.org#0666"],
        "description": "Get user info from the maple story API.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "A simple maple story related cog.",
        "tags": ["utility", "maplestory"],
        "type": "COG"
      },
      "massunban": {
        "author": ["aikaterna", "inthedark.org#0666"],
        "description": "Mass unban users by the ban reason used.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Mass unban users.",
        "tags": ["unban"],
        "type": "COG"
      },
      "msgutils": {
        "author": ["inthedark.org#0666"],
        "description": "Useful message utilities.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "dump stuff",
        "tags": ["utility"],
        "type": "COG"
      },
      "rainbowrole": {
        "author": ["inthedark.org#0666"],
        "description": "Creates a rainbow role in your server which loops into the 7 rainbow roles every 90 seconds.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "A simple cog for setting up a rainbow role.",
        "tags": ["utility", "tools", "rainbow", "role"],
        "type": "COG"
      },
      "seinatools": {
        "author": ["inthedark.org#0666"],
        "description": "Some cool tools for the bot owners.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "tabulate",
          "emoji==1.6.3",
          "pygicord==1.1.0",
          "playwright==1.30.0",
          "git+https://github.com/JeyyGit/jeyyapi.git"
        ],
        "short": "A simple tools cog for the bot owners.",
        "tags": ["utility", "tools"],
        "type": "COG"
      },
      "shazam": {
        "author": ["inthedark.org#0666"],
        "description": "Search songs using Shazam.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["shazamio"],
        "short": "Search songs using Shazam.",
        "tags": ["songs", "audio", "shazam"],
        "type": "COG"
      },
      "statuscodes": {
        "author": ["inthedark.org#0666"],
        "description": "Find the meaning behind various status codes.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Find the meaning behind various status codes.",
        "tags": ["utility", "info"],
        "type": "COG"
      },
      "statusrole": {
        "author": ["Obi-Wan3", "inthedark.org#0666"],
        "description": "Assign roles to users for the duration in which they have certain custom statuses.",
        "disabled": false,
        "end_user_data_statement": "This cog stores provided server settings (i.e. custom status to watch for, the respective roles to assign, and an optional log channel).",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 10, 1],
        "permissions": ["manage_roles"],
        "required_cogs": {},
        "requirements": [],
        "short": "Roles for Certain Custom Statuses",
        "tags": ["utility", "custom status", "roles"],
        "type": "COG"
      }
    },
    "short": "Just some tools for red."
  },
  "https://github.com/jmesfo0/jmes-cogs": {
    "author": ["James (jmes#1396)"],
    "description": "jmes cogs are various cogs for Red-DiscordBot",
    "name": "jmes-cogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "lounge": {
        "author": ["jmes"],
        "description": "this is a custom cog for THE_LOUNGE discord",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "a custom cog for THE_LOUNGE",
        "tags": [],
        "type": "COG"
      },
      "obfuscator": {
        "author": ["jmes"],
        "description": "Lua Obfuscator for Red-DiscordBot, features 5 different types of obfuscation for Roblox/FiveM scripts, requires lua5.1, nodejs16, and dotnet-runtime-6.0 to be installed on the system.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.1.8",
        "min_python_version": [3, 7, 9],
        "permissions": ["attach_files"],
        "required_cogs": {},
        "requirements": [],
        "short": "Lua Obfuscator",
        "tags": [
          "lua",
          "obfuscator",
          "obfuscate",
          "obfuscation",
          "luaseel",
          "menprotect",
          "prometheus",
          "bytecode",
          "roblox",
          "fivem"
        ],
        "type": "COG"
      },
      "pexels": {
        "author": ["jmes"],
        "description": "Displays pictures from Pexels API using PyPexels",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.1.8",
        "min_python_version": [3, 7, 2],
        "permissions": ["embed_links", "add_reactions"],
        "required_cogs": {},
        "requirements": ["pypexels>=1.0.0rc1"],
        "short": "Cog for getting pictures from Pexels.com",
        "tags": ["pexels", "pypexels"],
        "type": "COG"
      },
      "scriptmanager": {
        "author": ["jmes"],
        "description": "A simple cog to manage .lua script loadstrings for Roblox and/or FiveM.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.1.8",
        "min_python_version": [3, 7, 2],
        "permissions": ["embed_links", "attach_files"],
        "required_cogs": {},
        "requirements": ["requests", "json"],
        "short": "Script Manager",
        "tags": ["roblox", "fivem", "lua"],
        "type": "COG"
      },
      "tacoshack": {
        "author": ["jmes"],
        "description": "You are in charge of running your taco shack! You will get hourly income to pay for things. You can increase your income by purchasing upgrades or hiring employees! You yourself can also work every 10 minutes, and collect tips every 5 minutes to make some cash. Become the most sucessful taco shack around by reaching the top of the leaderboard! Either top the Most Tacos Sold or the Richest leaderboard for bragging rights.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["aioschedule"],
        "short": "TacoShack Classic for Red DiscordBot",
        "tags": [
          "tacoshack",
          "shack",
          "taco",
          "tacos",
          "tacoshack classic",
          "rpg"
        ],
        "type": "COG"
      },
      "welcome": {
        "author": ["irdumb", "TrustyJAID", "jmes"],
        "description": "Welcome new users to the server or say goodbye when they leave.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "0.0.0",
        "min_bot_version": "3.1.8",
        "min_python_version": [3, 7, 2],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Welcome new users to the server",
        "tags": ["welcome", "utility"],
        "type": "COG"
      }
    },
    "short": "jmes cogs"
  },
  "https://github.com/karlsbjorn/karlo-cogs": {
    "author": ["Karlo"],
    "description": "Cogs for WoW and other stuff.",
    "name": "karlo-cogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "autoplay": {
        "author": ["Karlo"],
        "description": "Automatically play music that a guild member is listening to on Spotify.\nThis cog REQUIRES a fully set up PyLav and will not work without it.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "3.5.99",
        "min_bot_version": "3.5.0.dev306",
        "min_python_version": [3, 11, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["Py-Lav>=1.10.10"],
        "short": "Automatically play music that a guild member is listening to on Spotify.",
        "tags": ["music", "spotify"],
        "type": "COG"
      },
      "battlenetauth": {
        "author": ["Karlo"],
        "description": "Battle.net authenticator in Discord.",
        "disabled": false,
        "end_user_data_statement": "This cog stores a Discord user's Battle.net authenticator details like the secret, serial and recovery keys. Users may delete their own data by making a data removal request.",
        "hidden": false,
        "max_bot_version": "3.5.99",
        "min_bot_version": "3.5.0.dev306",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["bna"],
        "short": "Battle.net authenticator in Discord.",
        "tags": [
          "battlenet",
          "battle.net",
          "bnet",
          "totp",
          "authenticator",
          "2fa"
        ],
        "type": "COG"
      },
      "discordstreams": {
        "author": ["Karlo"],
        "description": "Display a stream alert in a channel when a member of a guild starts a Go Live stream.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "3.5.99",
        "min_bot_version": "3.5.0.dev0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["colorgram.py"],
        "short": "Display a Go Live stream alert.",
        "tags": [
          "discord",
          "live",
          "go live",
          "screenshare",
          "stream",
          "livestream"
        ],
        "type": "COG"
      },
      "silentreplier": {
        "author": ["Karlo"],
        "description": "Have the bot silently respond to commands which have been prefixed with @silent",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "3.6.0.dev0",
        "min_bot_version": "3.5.0.dev329",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Have the bot silently respond to commands which have been prefixed with @silent",
        "tags": ["utility"],
        "type": "COG"
      },
      "warcraftlogsretail": {
        "author": ["aikaterna", "Kowlin", "Karlo"],
        "description": "Check WarcraftLogs for data on players of retail World of Warcraft. Fork of aikaterna's original WarcraftLogs cog.",
        "disabled": false,
        "end_user_data_statement": "This cog stores data provided by users for the express purpose of redisplaying. It does not store user data which was not provided through a command. Users may remove their own content without making a data removal request. This cog does not support data requests, but will respect deletion requests.",
        "hidden": false,
        "max_bot_version": "3.6.0.dev0",
        "min_bot_version": "3.5.0.dev307",
        "min_python_version": "",
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": ["pillow", "beautifultable"],
        "short": "WarcraftLogs data for World of Warcraft players.",
        "tags": ["warcraft"],
        "type": "COG"
      },
      "wikiarena": {
        "author": ["Karlo"],
        "description": "Each round pits two random Wikipedia articles against each other by their title, an intro section excerpt and an image (if available).\n\nYour task: Guess which article is longer or gets more views.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "3.5.99",
        "min_bot_version": "3.5.0.dev0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "git+https://github.com/Gelbpunkt/aiowiki",
          "tabulate"
        ],
        "short": "Guess which wikipedia article is longer or gets more views.",
        "tags": ["wiki", "wikipedia", "game"],
        "type": "COG"
      },
      "wowtools": {
        "author": ["Karlo"],
        "description": "Cog for interacting with World of Warcraft",
        "disabled": false,
        "end_user_data_statement": "This cog can store the name, realm and region of a Discord user's World of Warcraft character. This data is used to fetch information about the character from the Blizzard and Raider.io APIs.",
        "hidden": false,
        "max_bot_version": "3.6.0.dev0",
        "min_bot_version": "3.5.0.dev307",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "tabulate",
          "aiolimiter",
          "Pillow",
          "aiowowapi==2.1.4",
          "git+https://github.com/karlsbjorn/raiderio-async.git@v1.1.1",
          "dictdiffer",
          "rapidfuzz"
        ],
        "short": "Cog for interacting with World of Warcraft",
        "tags": ["warcraft", "world of warcraft"],
        "type": "COG"
      }
    },
    "short": "Cogs for WoW and other stuff."
  },
  "https://github.com/kennnyshiwa/kennnyshiwa-cogs": {
    "author": ["Kennnyshiwa, Beryju, preda"],
    "description": "A bunch of general purpose cogs for stuff like intel cpu data lookup, space pictures and more.",
    "name": "kennnyshiwa-cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {},
    "short": "General purpose cogs"
  },
  "https://github.com/kreusada/Kreusada-Cogs": {
    "author": ["Kreusada"],
    "description": "Cogs by Kreusada for Red-DiscordBot V3.",
    "name": "Kreusada-Cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "blackformatter": {
        "author": ["Kreusada"],
        "description": "Run black on files with custom line lengths.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["black"],
        "short": "Run black on files with custom line lengths.",
        "tags": ["Black", "Code", "File"],
        "type": "COG"
      },
      "cogpaths": {
        "author": ["Kreusada"],
        "description": "Get various paths for a cog.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Get various paths for a cog.",
        "tags": ["Paths", "Cogs"],
        "type": "COG"
      },
      "consoleclearer": {
        "author": ["Kreusada"],
        "description": "Clear your Red console.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Completely clear your Red console.",
        "tags": ["Console", "Clear"],
        "type": "COG"
      },
      "embedcreator": {
        "author": ["Kreusada"],
        "description": "Create embeds using buttons, modals and dropdowns!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Create embeds using buttons and modals!",
        "tags": [
          "Embeds",
          "Create",
          "Buttons",
          "Modals",
          "Dropdowns",
          "Selects"
        ],
        "type": "COG"
      },
      "flags": {
        "author": ["Kreusada"],
        "description": "Get the flag for a country, with information about alpha and numeric codes.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pycountry"],
        "short": "Get the flag for a country, with information about alpha and numeric codes.",
        "tags": ["Flags", "World", "Country", "Countries"],
        "type": "COG"
      },
      "minifier": {
        "author": ["Kreusada"],
        "description": "Minify python code!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["python_minifier"],
        "short": "Minify python code.",
        "tags": ["Minifier", "Code", "File"],
        "type": "COG"
      },
      "onthisday": {
        "author": ["Kreusada"],
        "description": "Find out what happened today, in multiple different years in history.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["dateparser"],
        "short": "Find out what happened today, in multiple different years in history.",
        "tags": ["On This Day", "History", "Year", "Time", "Date"],
        "type": "COG"
      },
      "pypi": {
        "author": ["Kreusada", "OofChair"],
        "description": "Get information about a package available on PyPi.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Get information about a package available on PyPi.",
        "tags": ["Python", "Modules", "Library", "Libraries", "Index"],
        "type": "COG"
      },
      "qr": {
        "author": ["Kreusada"],
        "description": "[Beta] Generate QR codes.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["qrcode"],
        "short": "[Beta] Generate QR codes.",
        "tags": ["Codes", "Images", "PIL", "Pillow", "QR"],
        "type": "COG"
      },
      "quotes": {
        "author": ["Kreusada"],
        "description": "Get a random quote.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Get a random quote.",
        "tags": ["Quotes", "QOTD"],
        "type": "COG"
      },
      "roleboards": {
        "author": ["Kreusada"],
        "description": "Get 'leaderboards' about guild roles, such as the users with the most roles, the roles with the most users, and a full list of all the roles.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Get 'leaderboards' about guild roles.",
        "tags": ["Roles", "List", "Users", "Most", "Leaderboards"],
        "type": "COG"
      },
      "sendcards": {
        "author": ["Kreusada"],
        "description": "Send cards to other users (Christmas, birthday, get well soon, etc...)",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Send cards to other users",
        "tags": [
          "Cards",
          "Christmas",
          "Birthday",
          "Halloween",
          "Message",
          "DMs"
        ],
        "type": "COG"
      },
      "termino": {
        "author": ["Kreusada", "Jojo#7791"],
        "description": "Customize restart and shutdown messages with your own text, and predicates.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Customize restart and shutdown messages with your own text, and predicates.",
        "tags": ["Shutdown", "Restart", "Custom"],
        "type": "COG"
      },
      "texteditor": {
        "author": ["Kreusada"],
        "description": "Edit and manipulate with text.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Edit text.",
        "tags": ["Text", "Editor", "Format"],
        "type": "COG"
      },
      "timestamps": {
        "author": ["Kreusada"],
        "description": "Produce Discord timestamps.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["dateparser"],
        "short": "Produce Discord timestamps.",
        "tags": ["Timestamps", "Date", "Time"],
        "type": "COG"
      },
      "wordbase": {
        "author": ["Kreusada"],
        "description": "Generate rhymes, use a reverse dictionary, and more word related generators.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Generate rhymes, use a reverse dictionary, and more word related generators.",
        "tags": [
          "Reverse Dictionary",
          "Rhyme",
          "Rhyming",
          "Consonants",
          "Homophones",
          "Triggers"
        ],
        "type": "COG"
      }
    },
    "short": "Cogs by Kreusada for Red-DiscordBot V3."
  },
  "https://github.com/ltzmax/maxcogs": {
    "author": ["MAX"],
    "description": "Cogs for Red-DiscordBot V3.",
    "name": "maxcogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "autopublisher": {
        "author": ["max"],
        "description": "Automatically publish messages from a news channel.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 9, 0],
        "permissions": ["manage_messages"],
        "required_cogs": {},
        "requirements": [],
        "short": "Automatically publish messages from a news channel.",
        "tags": ["news", "auto publish"],
        "type": "COG"
      },
      "nekosbest": {
        "author": ["max"],
        "description": "Cog that sends random nekos, kitsune, husbando and waifu images from nekos.best",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 8, 5],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": [],
        "short": "Sending random kitsune, waifue, husbando and nekos images.",
        "tags": ["images", "waifu", "nekos", "anime", "kitsune", "husbando"],
        "type": "COG"
      },
      "nospoiler": {
        "author": ["max"],
        "description": "Disallow spoilers in your server.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 9, 0],
        "permissions": ["embed_links", "manage_messages"],
        "required_cogs": {},
        "requirements": [],
        "short": "Disallow spoilers in your server.",
        "tags": ["spoiler", "nospoiler"],
        "type": "COG"
      },
      "roleplaycog": {
        "author": ["max"],
        "description": "Roleplay cog with alot of fun to have with your members. This is with help of nekos.best.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.19",
        "min_python_version": [3, 8, 1],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": [],
        "short": "Roleplay cog. With help of nekos.best.",
        "tags": ["roleplay"],
        "type": "COG"
      },
      "tcgcard": {
        "author": ["<@306810730055729152>", "ltzmax (MAX#1000)"],
        "description": "Fetch Pok\u00e9mon cards based on Pok\u00e9mon Trading Card Game (a.k.a Pok\u00e9mon TCG)",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Fetch Pok\u00e9mon cards based on Pok\u00e9mon Trading Card Game.",
        "tags": ["pokemon", "pokemontcg", "tcgcard"],
        "type": "COG"
      },
      "whosthatpokemon": {
        "author": [
          "<@306810730055729152>",
          "ltzmax (MAX#1000)",
          "Flame (Flame#2941)"
        ],
        "description": "Play a game of Who's That Pok\u00e9mon.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pillow"],
        "short": "Play a game of Who's That Pok\u00e9mon.",
        "tags": ["pokemon", "whosthatpokemon", "whos that pokemon"],
        "type": "COG"
      }
    },
    "short": "Cogs for Red-DiscordBot V3."
  },
  "https://github.com/nmbook/FalcomBot-cogs": {
    "author": ["Ribose#1243"],
    "description": "Useful utilities I created for the Falcom discord, generalized for any Red V3 bots.",
    "name": "FalcomBot-cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {},
    "short": "General utilities for Falcom discord"
  },
  "https://github.com/npc203/npc-cogs": {
    "author": ["epic guy#0715"],
    "description": "A simple set of cogs that I wrote for people to enjoy",
    "name": "npc-cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "menubuttons": {
        "author": ["epic guy"],
        "description": "Converts red menus to buttons and also enables support for custom default menu emojis",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "red menus to buttons + support for custom menu emojis",
        "tags": ["fun", "utility"],
        "type": "COG"
      },
      "simpleweb": {
        "author": ["epic guy"],
        "description": "Simple Dashboard for a quick overview of the bot",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["aiohttp_jinja2"],
        "short": "A simple webpage dashboard",
        "tags": ["fun", "utility", "web"],
        "type": "COG"
      }
    },
    "short": "A decent bunch of cogs aimed for having fun"
  },
  "https://github.com/orchidalloy/crab-cogs": {
    "author": ["hollowstrawberry"],
    "description": "Fun/useful/curious cogs originally created for a friend group called Crab.",
    "name": "crab-cogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "autoreact": {
        "author": ["OrchidAlloy"],
        "description": "Lets you configure emojis that will be added to any message containing text matching a regex.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["emoji"],
        "short": "Reacts to specific messages with emojis.",
        "tags": ["crab", "fun", "emoji", "react", "auto", "reaction"],
        "type": ""
      },
      "draw": {
        "author": ["OrchidAlloy"],
        "description": "A couple fun image filters for your friends' avatars. Also includes an avatar context menu.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["Pillow", "opencv_python_headless"],
        "short": "Fun image filters and an avatar context menu.",
        "tags": ["crab", "fun", "image", "draw", "filter", "avatar"],
        "type": ""
      },
      "easytranslate": {
        "author": ["OrchidAlloy"],
        "description": "Translate messages using Google Translate for free. Supports context menu commands.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["googletrans==3.1.0-alpha"],
        "short": "Translate messages using Google Translate for free.",
        "tags": [
          "crab",
          "useful",
          "translate",
          "translation",
          "slash",
          "message",
          "context",
          "menu"
        ],
        "type": ""
      },
      "emojisteal": {
        "author": ["OrchidAlloy"],
        "description": "Steals emojis and stickers sent by other people and optionally uploads them to your own server. Supports context menu commands. Can also upload stickers from mobile.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Steals emojis and stickers sent by other people.",
        "tags": [
          "crab",
          "emoji",
          "sticker",
          "steal",
          "image",
          "slash",
          "message",
          "context",
          "menu"
        ],
        "type": ""
      },
      "gamealert": {
        "author": ["OrchidAlloy"],
        "description": "Sends a configured message when a user has been playing a specific game for some time.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Send a message when someone is playing a game for some time.",
        "tags": [
          "crab",
          "fun",
          "game",
          "alert",
          "notification",
          "joke",
          "health"
        ],
        "type": ""
      },
      "genshin": {
        "author": ["OrchidAlloy"],
        "description": "Simulates Genshin Impact gacha pulls.",
        "disabled": false,
        "end_user_data_statement": "This cog stores user IDs to keep track of your inventory.",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Simulates Genshin Impact gacha pulls.",
        "tags": ["crab", "fun", "game", "gacha", "genshin", "impact", "random"],
        "type": ""
      },
      "imagelog": {
        "author": ["OrchidAlloy"],
        "description": "Logs deleted images for moderation purposes.\n\u26a0\ufe0f Usage warning: You may or may not be liable for keeping content that breaks Discord TOS.",
        "disabled": false,
        "end_user_data_statement": "This cog stores images sent by users into a moderation channel until they are manually removed. You may or may not be liable for their content if they break Discord TOS.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Logs deleted images for moderation purposes.",
        "tags": ["crab", "message", "scan", "log", "image", "moderation"],
        "type": ""
      },
      "imagescanner": {
        "author": ["OrchidAlloy"],
        "description": "Scans images for AI parameters and other metadata. Supports context menus.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["Pillow"],
        "short": "Scans images for AI parameters and other metadata.",
        "tags": ["crab", "message", "scan", "ai", "image"],
        "type": ""
      },
      "logs": {
        "author": ["OrchidAlloy"],
        "description": "Owner cog to show the latest logs.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Owner cog to show the latest logs.",
        "tags": ["crab", "logs", "dev", "owner", "debug"],
        "type": ""
      },
      "randomness": {
        "author": ["OrchidAlloy"],
        "description": "A few fun commands involving randomness: [p]rate, [p]pp, [p]donut",
        "disabled": false,
        "end_user_data_statement": "This cog stores user IDs to keep track of your donut score.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "A few fun commands involving randomness.",
        "tags": ["crab", "fun", "random", "misc"],
        "type": ""
      },
      "simulator": {
        "author": ["OrchidAlloy"],
        "description": "Designates a channel that will send automated messages mimicking your friends using Markov chains. They will have your friends' avatars and nicknames too! Inspired by /r/SubredditSimulator and similar concepts.\n\n\ud83e\udde0 It will learn from new messages sent in configured channels, and only from users with the configured role. Will only support a single guild.\n\n\u2699 The bot owner must configure it with [p]simulator set, then they may manually feed past messages using [p]simulator feed [days]. This may take 1 minute per 5000 messages, so be patient!\n\n\ud83d\udd04 While the simulator is running, simulated conversations will randomly occur. Trying to type in the output channel will delete the message and trigger a conversation.\n\n\ud83d\udc64 A user may permanently exclude themselves from their messages being read and analyzed by using the [p]dontsimulateme command. This will also delete all their data.",
        "disabled": false,
        "end_user_data_statement": "This cog will locally store and analyze past and future messages sent by participating users, in order to generate new messages in an owner-configured output channel.\nYou may opt out completely and delete your simulator data with the [p]dontsimulateme command.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["aiosqlite"],
        "short": "Simulates messages from your friend group.",
        "tags": ["crab", "fun", "simulator", "markov", "friends"],
        "type": ""
      },
      "voicelog": {
        "author": ["OrchidAlloy"],
        "description": "Logs users joining and leaving a VC, inside the VC chat itself.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Logs users joining and leaving a VC, inside the VC chat itself.",
        "tags": ["crab", "voice", "log", "moderation"],
        "type": ""
      }
    },
    "short": "crab-cogs"
  },
  "https://github.com/palmtree5/palmtree5-cogs": {
    "author": ["palmtree5"],
    "description": "Cogs created by palmtree5 for varying purposes, some related to Minecraft",
    "name": "palmtree5-cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "banrole": {
        "author": ["palmtree5"],
        "description": "Ban/unban by role. Keeps track of all users banned via `[p]banrole`",
        "disabled": false,
        "end_user_data_statement": "This extension stores a mapping of role ids to a list of banned user ids. This data is necessary for the functionality allowing the unbanning of a previously banned role, but a user id can be removed if the account is deleted or the owner specifically requests the deletion not on behalf of a user.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Ban/unban by role.",
        "tags": ["moderation", "banrole"],
        "type": ""
      },
      "eventmaker": {
        "author": ["palmtree5"],
        "description": "Allows for creating and joining events and provides a notification at the start time",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Event manager utility",
        "tags": ["events", "utilities"],
        "type": ""
      },
      "hpapi": {
        "author": ["palmtree5"],
        "description": "Gets data from the Hypixel API including player stats, guild info, and active boosters",
        "disabled": false,
        "end_user_data_statement": "This extension does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": [3, 6, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["aiopixel==0.2.15"],
        "short": "Cog for getting info from the Hypixel API",
        "tags": ["minecraft", "utility", "gaming"],
        "type": ""
      },
      "lockdown": {
        "author": ["palmtree5"],
        "description": "Locks down a server using roles to affect users below the lockdown role",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Cog for locking down a server in the event of a raid",
        "tags": ["antiraid", "utility", "lockdown"],
        "type": ""
      },
      "mcsvr": {
        "author": ["palmtree5"],
        "description": "Gets the status of a Minecraft Server (specifically version and player count)",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["mcstatus==10.0.1", "validators"],
        "short": "Cog for getting Minecraft server status",
        "tags": ["minecraft", "utility", "gaming"],
        "type": ""
      },
      "messagepinner": {
        "author": ["palmtree5"],
        "description": "Pins messages containing configured pin trigger text",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Pins messages containing specific text",
        "tags": ["pins", "utility"],
        "type": ""
      },
      "reddit": {
        "author": ["palmtree5"],
        "description": "Gets posts, user info, etc from Reddit's API",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Cog for getting stuff from Reddit",
        "tags": ["reddit", "web", "utility"],
        "type": ""
      },
      "slowmode": {
        "author": ["palmtree5"],
        "description": "Enforces a limit of one message per set time on non-exempt users",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Slow mode in Discord",
        "tags": ["slowmode", "moderation"],
        "type": ""
      },
      "srrecords": {
        "author": ["palmtree5"],
        "description": "Gets world records for the specified game from speedrun.com",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Cog for getting world records for various games",
        "tags": ["speedrun", "gaming"],
        "type": ""
      }
    },
    "short": "Various cogs"
  },
  "https://github.com/phenom4n4n/phen-cogs": {
    "author": ["PhenoM4n4n"],
    "description": "Utility and fun cogs developed by PhenoM4n4n.",
    "name": "phen-cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "aki": {
        "author": ["PhenoM4n4n"],
        "description": "Play Akinator in Discord!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["akinator[fast_async]==1.0.3"],
        "short": "Play Akinator in Discord!",
        "tags": ["fun"],
        "type": "COG"
      },
      "altdentifier": {
        "author": ["PhenoM4n4n"],
        "description": "Check users with AltDentifier API",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["unidecode", "rapidfuzz"],
        "short": "Check users with AltDentifier API",
        "tags": [],
        "type": ""
      },
      "antihonde": {
        "author": ["PhenoM4n4n", "TrustyJAID"],
        "description": "Automatically ban H0nde alts.",
        "disabled": false,
        "end_user_data_statement": "This cog stores a list of every H0nde it bans.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Automatically ban H0nde alts.",
        "tags": ["moderation"],
        "type": "COG"
      },
      "banchart": {
        "author": ["PhenoM4n4n", "Aikaterna"],
        "description": "Display a chart of ban moderators.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Display a chart of ban moderators.",
        "tags": [],
        "type": "COG"
      },
      "baron": {
        "author": ["PhenoM4n4n", "DragDev Studios", "KableKompany"],
        "description": "Tools for managing guild joins and leaves.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["matplotlib"],
        "short": "Tools for managing guild joins and leaves.",
        "tags": ["utility", "guild"],
        "type": "COG"
      },
      "connect4": {
        "author": ["Benjamin Mintz", "flare", "PhenoM4n4n"],
        "description": "Play Connect 4 in Discord!",
        "disabled": false,
        "end_user_data_statement": "This cog stores data on users' wins, losses, and draws per server while playing Connect 4.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Play Connect 4 in Discord!",
        "tags": ["fun"],
        "type": "COG"
      },
      "customping": {
        "author": ["PhenoM4n4n"],
        "description": "Creates a custom ping embed to display latency statistics.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["speedtest-cli"],
        "short": "Creates a custom ping embed to display latency statistics.",
        "tags": ["ping"],
        "type": ""
      },
      "disboardreminder": {
        "author": ["PhenoM4n4n"],
        "description": "Set a reminder to bump on Disboard.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["unidecode", "rapidfuzz", "TagScript"],
        "short": "Set a reminder to bump on Disboard.",
        "tags": ["Disboard", "Reminder"],
        "type": ""
      },
      "embedutils": {
        "author": ["PhenoM4n4n"],
        "description": "Create, post, and store embeds.",
        "disabled": false,
        "end_user_data_statement": "This cog stores End User Data when storing the author of an embed. If a user requests data-deletion, all their embeds will be removed from the bot.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Create, post, and store embeds",
        "tags": ["embed"],
        "type": ""
      },
      "forcemention": {
        "author": ["Bobloy", "PhenoM4n4n"],
        "description": "Mentions roles that are unmentionable",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Mention unmentionables",
        "tags": ["bobloy", "utils"],
        "type": ""
      },
      "linkquoter": {
        "author": ["PhenoM4n4n"],
        "description": "Quote Discord message links.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Quote Discord message links.",
        "tags": [],
        "type": ""
      },
      "lock": {
        "author": ["PhenoM4n4n"],
        "description": "Lock channels or the whole server",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["unidecode", "rapidfuzz"],
        "short": "Lock channels",
        "tags": ["utility", "server"],
        "type": "COG"
      },
      "permissionslocker": {
        "author": ["PhenoM4n4n"],
        "description": "Lock bot commands to a certain permissions set.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Force permissions for the bot.",
        "tags": ["permissions"],
        "type": "COG"
      },
      "petpet": {
        "author": ["PhenoM4n4n"],
        "description": "Make petpet gifs!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["Pillow"],
        "short": "Make petpet gifs!",
        "tags": ["fun", "image"],
        "type": "COG"
      },
      "pfpimgen": {
        "author": ["PhenoM4n4n"],
        "description": "Make images from avatars!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["Pillow", "unidecode", "rapidfuzz"],
        "short": "Make images from avatars!",
        "tags": ["image"],
        "type": "COG"
      },
      "phenutils": {
        "author": ["PhenoM4n4n"],
        "description": "Various developer utilities.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Various developer utilities.",
        "tags": ["utility"],
        "type": "COG"
      },
      "plaguegame": {
        "author": ["PhenoM4n4n"],
        "description": "Plague game with a doctor and plaguebearer.",
        "disabled": false,
        "end_user_data_statement": "This cog stores data on users based off their interactions within the game. Examples of such data are their 'health state' (healthy or infected) or their 'game role' (user, doctor, plaguebearer).",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["unidecode", "rapidfuzz"],
        "short": "Infect users with the plague!",
        "tags": ["fun", "plague"],
        "type": ""
      },
      "prefix": {
        "author": ["PhenoM4n4n"],
        "description": "Manage guild prefixes more extensively.",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Manage guild prefixes.",
        "tags": ["server", "prefix"],
        "type": ""
      },
      "ratings": {
        "author": ["PhenoM4n4n"],
        "description": "Rate yourself on many things.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Find out how (simp/sane/smart) you are.",
        "tags": [],
        "type": "COG"
      },
      "roleutils": {
        "author": ["PhenoM4n4n", "Bobloy", "TrustyJaid", "Neuro Assassin"],
        "description": "Reaction roles, massroling, and role targeting!.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["unidecode", "rapidfuzz", "TagScript"],
        "short": "Reaction roles, massroling, and role targeting!.",
        "tags": ["utility", "server", "roles"],
        "type": "COG"
      },
      "simplecalculator": {
        "author": ["PhenoM4n4n"],
        "description": "Calculate stuff",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any End User Data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["TagScript"],
        "short": "Calculate stuff",
        "tags": ["utility", "calculator"],
        "type": ""
      },
      "slashtags": {
        "author": ["PhenoM4n4n"],
        "description": "Create custom slash commands.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.6",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["TagScript==2.6.2", "tabulate"],
        "short": "Create custom slash commands.",
        "tags": ["tags", "slashcommands"],
        "type": "COG"
      },
      "tags": {
        "author": ["PhenoM4n4n", "sravan", "npc203"],
        "description": "Create and use tags.",
        "disabled": false,
        "end_user_data_statement": "This cog stores End User Data when storing the author of a tag. If a user requests data-deletion, all their tags will be removed from the bot.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["TagScript==2.6.4", "tabulate", "rapidfuzz"],
        "short": "Create and use tags.",
        "tags": ["tags"],
        "type": "COG"
      },
      "typeracer": {
        "author": ["Cats3153", "PhenoM4n4n"],
        "description": "Race to see who can type the fastest!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["Pillow"],
        "short": "Race to see who can type the fastest!",
        "tags": ["fun", "game", "type"],
        "type": "COG"
      },
      "webhook": {
        "author": ["PhenoM4n4n"],
        "description": "Various webhook commands to create and send messages along webhooks.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Webhook related commands.",
        "tags": ["webhook"],
        "type": "COG"
      }
    },
    "short": "General bot cogs."
  },
  "https://github.com/raidensakura/raiden-cogs": {
    "author": ["raidensakura"],
    "description": "Contains cogs that I made for fun in the process of learning Python.",
    "name": "raiden-cogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "choose": {
        "author": ["raidensakura"],
        "description": "A better replacement for core `choose` command.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.12",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Choose between multiple options",
        "tags": ["choose"],
        "type": "COG"
      },
      "longcat": {
        "author": ["raidensakura", "Aioxas"],
        "description": "Send a looooongcat based on how long you typed the command.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.12",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["Pillow"],
        "short": "All hail Longcat. Improved from Aioxas' Longcat cog.",
        "tags": ["fun"],
        "type": "COG"
      },
      "throw": {
        "author": ["raidensakura", "ow0x"],
        "description": "A cog to throw random things at your friends that may or may not upset them. Originally a roleplay cog by owo-cogs, modified by raidensakura.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any PII data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.12",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["tabulate"],
        "short": "Throw random stuff at your Discord friends",
        "tags": ["throw"],
        "type": "COG"
      }
    },
    "short": "Cogs made by Raiden for Red Discord bot."
  },
  "https://github.com/retke/Laggrons-Dumb-Cogs": {
    "author": ["El Laggron"],
    "description": "A buch of utility and quality cogs that brings unique features for your server. Made by Laggron.",
    "name": "Laggrons-Dumb-Cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {},
    "short": "Utility cogs for your server."
  },
  "https://github.com/skeith/MayuYukirin": {
    "author": ["Yukirin (Yukirin#0048)"],
    "description": "48G/46G related cogs and miscellaneous..",
    "name": "MayuYukirin",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "animal": {
        "author": ["Eslyium (Eslyium#1949)", "Yukirin (Yukirin#0048)"],
        "description": "Post animal pics from API sites",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Post animal pics",
        "tags": ["animal", "image", "picture", "cat", "dog", "fox", "pug"],
        "type": ""
      },
      "avatar": {
        "author": ["Yukirin (Yukirin#0048)"],
        "description": "Simply return user's avatar url",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Get user's Avatar URL",
        "tags": ["avatar", "Utility"],
        "type": ""
      },
      "doujin": {
        "author": ["Eslyium (Eslyium#1949)", "Yukirin (Yukirin#0048)"],
        "description": "Post random doujin (NSFW) from selected site",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Post random doujin (NSFW)",
        "tags": ["nsfw", "doujin", "image"],
        "type": ""
      },
      "pda": {
        "author": ["Yukirin (Yukirin#0048)"],
        "description": "Show your affection to other member. Current version only allow you to pat other member",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Show your affection to other member",
        "tags": ["love", "affection", "pat"],
        "type": ""
      }
    },
    "short": "48G/46G related cogs and miscellaneous."
  },
  "https://github.com/sravan1946/sravan-cogs": {
    "author": ["sravan"],
    "description": "Just some cogs which I made for fun.",
    "name": "sravan-cogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "acromania": {
        "author": ["sravan"],
        "description": "Acronym game is a fun and engaging word game where players take turns creating a phrase or sentence from a series of letters, with each letter representing a word in the phrase.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Acronym game.",
        "tags": ["game", "fun"],
        "type": "COG"
      },
      "devlogs": {
        "author": ["sravan"],
        "description": "Logs all the Dev commands in a channel",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Keep a log of all that evals and debugs",
        "tags": ["dev"],
        "type": "COG"
      },
      "dps": {
        "author": ["sravan"],
        "description": "Punish the users who ping others with a certain role",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Take actions on users who ping",
        "tags": [],
        "type": "COG"
      },
      "gtn": {
        "author": ["sravan"],
        "description": "a guess the number game which you can play in discord",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "a simple gtn game",
        "tags": ["fun", "game"],
        "type": "COG"
      },
      "hideping": {
        "author": ["sravan"],
        "description": "Mentions the user in a hidden ping",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Hidden mentions",
        "tags": ["fun"],
        "type": ""
      },
      "perform": {
        "author": ["Ari (Onii-chan#3920), sravan (sravan#0001)"],
        "description": "The perform cog facilitates immersive roleplay experiences with commands for hugging, kissing, poking, kicking, and more, allowing users to engage in diverse interactive actions and expressions.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["tabulate"],
        "short": "Perform Actions like kiss, cuddle etc.",
        "tags": [],
        "type": ""
      },
      "poll": {
        "author": ["sravan"],
        "description": "simple command to start poll using reactions",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "make polls",
        "tags": ["poll"],
        "type": "COG"
      },
      "session": {
        "author": ["aikaterna", "sravan"],
        "description": "aikaterna's rndstatus edited to display the number of commands used in a session as the status",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.6",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Command usage statuses",
        "tags": ["status"],
        "type": "COG"
      },
      "timeout": {
        "author": ["sravan"],
        "description": "add or remove cooldown from users",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.3.10",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["humanize"],
        "short": "manage cooldowns",
        "tags": ["mod", "timeout"],
        "type": "COG"
      }
    },
    "short": "General cogs."
  },
  "https://github.com/synrg/dronefly": {
    "author": ["SyntheticBee"],
    "description": "Red V3 Cogs for naturalists by SyntheticBee",
    "name": "dronefly",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "ebirdcog": {
        "author": ["SyntheticBee"],
        "description": "Commands using the eBird API 2.0 (https://api.ebird.org/v2).",
        "disabled": false,
        "end_user_data_statement": "This cog does not store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.1",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["ebird-api"],
        "short": "Commands using the eBird API 2.0.",
        "tags": ["ebird", "bird", "birder", "naturalist", "nature"],
        "type": ""
      },
      "inatcog": {
        "author": ["SyntheticBee"],
        "description": "Commands using the iNat API v1 (https://api.inaturalist.org/v1).",
        "disabled": false,
        "end_user_data_statement": "This cog stores user ids linked to corresponding external API user ids for the purpose of fetching their information from the API, and user preferences for the cog.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "html2markdown>=0.1.7,<0.2.0",
          "inflect>=5.3.0,<6.0.0",
          "timeago>=1.0.15,<2.0.0",
          "aiolimiter>=1.0.0,<2.0.0",
          "aiohttp-retry>=2.4.5,<3.0.0",
          "dronefly-core>=0.3.6.dev1,<0.5.0",
          "dronefly-discord>=0.1.1.dev1,<0.3.0",
          "pyinaturalist>=0.19.0.dev2,<0.20.0",
          "dateparser>=1.0.0,<2.0.0"
        ],
        "short": "Commands using the iNat API v1.",
        "tags": ["inaturalist", "naturalist", "nature"],
        "type": ""
      }
    },
    "short": "Red V3 Cogs for naturalists by SyntheticBee"
  },
  "https://github.com/thedataleek/eris-cogs": {
    "author": ["Eris"],
    "description": "Thanks for adding my repo! I hope you enjoy what's here, please don't hesitate to reach out on my [github](https://github.com/TheDataLeek/Eris-Cogs) or [discord](http://discord.gg/ee3NyDq) if you run into issues!",
    "name": "eris-cogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "alot": {
        "author": ["Eris"],
        "description": "Automatically posts an alot whenever a user says 'alot of things' instead of 'a lot of things'",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {
          "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
        },
        "requirements": [],
        "short": "Posts an alot",
        "tags": [],
        "type": ""
      },
      "autoreact": {
        "author": ["Eris"],
        "description": "Auto reacts to posts. Similar to wiggly",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Adds reactions to posts!",
        "tags": [],
        "type": ""
      },
      "battle": {
        "author": ["Eris"],
        "description": "Battle with your users\nUsages:\n[p]attack <member> - Starts a battle\n[p]protect <member>\n[p]status <member> - Displays user's stats\n[p]set_attribute <member> <attribute> <value> - Sets a user's stat. Requires owner permissions.\n[p]elevate <member> - Levels up a user. Requires owner permissions.\n[p]full_heal_user <member> - Fully heals a user. Requires owner permissions.\n[p]heal_user <member> - Heals a user. Requires owner permissions.\n[p]reload_user <member> - Reloads a user's stats. Requires owner permissions.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Battle with your users",
        "tags": [],
        "type": ""
      },
      "big_name": {
        "author": ["Eris", "Maddie"],
        "description": "Change someone's name - who cares about permissions. Usage: `[p]big_name [User] [new name]`",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Change a user's name regardless of permissions",
        "tags": [],
        "type": ""
      },
      "big_text": {
        "author": ["Maddie"],
        "description": "Usage: [p]big_text [ASCII message]",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Make your message big and emoji-fied",
        "tags": [],
        "type": ""
      },
      "clone": {
        "author": ["Eris", "Maddie"],
        "description": "The bot takes on a specified user's name and avatar. Users take 1d10 confusion damage, half as much on a successful save. Usage: [p]clone [User]",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "The bot takes on a user's name and avatar",
        "tags": [],
        "type": ""
      },
      "dice": {
        "author": ["Eris"],
        "description": "Improved dice roller, can support arbitrary dice. Usage regex: [p]dice #d#(v#)?",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Improved dice roller.",
        "tags": [],
        "type": ""
      },
      "dm_role": {
        "author": ["Eris"],
        "description": "DMs everyone with a specific role based on fuzzy role name",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["fuzzywuzzy"],
        "short": "DM everyone with certain role",
        "tags": [],
        "type": ""
      },
      "dragon": {
        "author": ["Eris"],
        "description": "Replies with giant ascii dragons",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {
          "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
        },
        "requirements": [],
        "short": "Dragons!",
        "tags": [],
        "type": ""
      },
      "emojsplosion": {
        "author": ["Eris"],
        "description": "EMOJSPLOSION",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "EMOJSPLOSION",
        "tags": [],
        "type": ""
      },
      "event_config": {
        "author": ["Eris"],
        "description": "Configure `on_message` events, specifically which servers they appear in, which channels, etc. for Eris Cogs. By default, global events are on, guild-events are off. You'll need to run `[p]econf enable` in the guild you want events to run in.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Configure `on_message` events",
        "tags": [],
        "type": ""
      },
      "events": {
        "author": ["Eris"],
        "description": "A bunch of silly events",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {
          "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
        },
        "requirements": [],
        "short": "Silly bot behavior not activated by explicit commands",
        "tags": [],
        "type": ""
      },
      "export_emoji": {
        "author": ["Eris"],
        "description": "Bulk exports emoji for slack",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["aiohttp"],
        "short": "Bulk Emoji Export",
        "tags": [],
        "type": ""
      },
      "facts": {
        "author": ["Eris"],
        "description": "Provides bear or snake facts based on user input or randomly.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Provide random facts",
        "tags": [],
        "type": ""
      },
      "fires": {
        "author": ["Eris"],
        "description": "Show US Firemap",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "US Firemap",
        "tags": [],
        "type": ""
      },
      "goodbot": {
        "author": ["Eris"],
        "description": "Good Bot Emoji Tracker - tracks all emoji reactions (that the bot has access to) for all users in your server! Upon reaching a vote-threshold, replies to the original message and compliments the user!",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {
          "whois": "http://github.com/TheDataLeek/Eris-Cogs"
        },
        "requirements": [],
        "short": "Good Bot Emoji Tracker",
        "tags": [],
        "type": ""
      },
      "grammar": {
        "author": ["Eris"],
        "description": "Grammar Module - insult your illiterate friends.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Checks grammar of your users - load at your own risk",
        "tags": [],
        "type": ""
      },
      "haiku": {
        "author": ["Eris"],
        "description": "Determines haikus!",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {
          "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
        },
        "requirements": ["nltk", "syllables"],
        "short": "Haiku",
        "tags": [],
        "type": ""
      },
      "hotel_california": {
        "author": ["Eris"],
        "description": "Role based \"punishment\". Allows users to punish via assigning roles.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Role-based \"punishment\" for infractions on moderator whim.",
        "tags": [],
        "type": ""
      },
      "im_dad": {
        "author": ["Eris"],
        "description": "Replies with Hi _ I'm Dad when someone says that they're _",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {
          "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
        },
        "requirements": [],
        "short": "Replies Hi _ I'm Dad",
        "tags": [],
        "type": ""
      },
      "imdb_lookup": {
        "author": ["Eris"],
        "description": "IMDB Lookup",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["imdbpy"],
        "short": "IMDB",
        "tags": [],
        "type": ""
      },
      "insult": {
        "author": ["Eris"],
        "description": "Insults users via tagging.\nUsage: `[p]insult user`\n Includes NSFW insults",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["aiohttp"],
        "short": "Insult users",
        "tags": [],
        "type": ""
      },
      "isnt_december_the_best": {
        "author": ["Eris"],
        "description": "Isn't december the best",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Isn't December the Best",
        "tags": [],
        "type": ""
      },
      "just_met_her": {
        "author": ["Eris"],
        "description": "Replies with '_______________, I just met her!'",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {
          "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
        },
        "requirements": [],
        "short": "Just Met Her",
        "tags": [],
        "type": ""
      },
      "lifslastcall": {
        "author": ["Eris"],
        "description": "Lifs Last Call flowchart",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Lif's",
        "tags": [],
        "type": ""
      },
      "minesweeper": {
        "author": ["Eris"],
        "description": "Generates guaranteed solvable minesweeper boards using emojis and spoilers.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Generate solvable minesweeper boards.",
        "tags": [],
        "type": ""
      },
      "move": {
        "author": ["Eris"],
        "description": "Moves message to another channel for easy moderation.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Move message to another channel",
        "tags": [],
        "type": ""
      },
      "nick_prefix": {
        "author": ["Eris"],
        "description": "Theme your nickname, some include NSFW language and themes.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Adds themed prefix to names",
        "tags": [],
        "type": ""
      },
      "no_fuck_you": {
        "author": ["Eris"],
        "description": "Replies with 'no fuck you' if someone says 'fuck you'",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {
          "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
        },
        "requirements": [],
        "short": "Replies 'no fuck you'",
        "tags": [],
        "type": ""
      },
      "notify": {
        "author": ["Eris"],
        "description": "Twilio Notifications for @everyone tags",
        "disabled": true,
        "end_user_data_statement": "",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "",
        "tags": [],
        "type": ""
      },
      "out_of_context": {
        "author": ["Eris"],
        "description": "Archives a channel of out of context quotes. Posts quotes randomly or in response to commands. Quotes must be in quotation marks to be archived. Usage: [p]penny",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {
          "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
        },
        "requirements": [],
        "short": "Archives a channel of out of context quotes and then posts them randomly during conversation.",
        "tags": [],
        "type": ""
      },
      "partition": {
        "author": ["Eris"],
        "description": "Partitions users into teams",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Partition Teams",
        "tags": [],
        "type": ""
      },
      "quotes": {
        "author": ["Eris"],
        "description": "Generates fun short stories between users. Usage: `[p]quote users` - all credit to https://incorrect-quotes-generator.neocities.org/",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {
          "whois": "http://github.com/TheDataLeek/Eris-Cogs"
        },
        "requirements": [],
        "short": "Incorrect Quotes by ScatterPatter",
        "tags": [],
        "type": ""
      },
      "rock_and_stone": {
        "author": ["Eris"],
        "description": "Shouts various rock and stone quotes from Deep Rock Galactic",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {
          "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
        },
        "requirements": [],
        "short": "Deep Rock Galactic shouting",
        "tags": [],
        "type": ""
      },
      "rolerequest": {
        "author": ["Eris"],
        "description": "Emoji-based role request for user roles.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Emoji-based Role Request",
        "tags": [],
        "type": ""
      },
      "sarcasm": {
        "author": ["Eris"],
        "description": "Sarcasm Module - randomly mocks users",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {
          "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
        },
        "requirements": [],
        "short": "Randomly mocks users",
        "tags": [],
        "type": ""
      },
      "say": {
        "author": ["Eris"],
        "description": "Users with mod status can command the bot to say anything in a certain channel.\nUsage `[p]say guild channel ...message`",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["fuzzywuzzy"],
        "short": "Send messages as the bot",
        "tags": [],
        "type": ""
      },
      "search": {
        "author": ["Eris"],
        "description": "Search the internet for useful info. Currently only wikipedia supported.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["aiohttp"],
        "short": "Search the internet!",
        "tags": [],
        "type": ""
      },
      "spoop": {
        "author": ["Eris"],
        "description": "Sneakily spoops a user randomly or on mod prompting. NSFW spoops!",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {
          "event_config": "http://github.com/TheDataLeek/Eris-Cogs",
          "whois": "http://github.com/TheDataLeek/Eris-Cogs"
        },
        "requirements": [],
        "short": "Sneakily spoops users",
        "tags": [],
        "type": ""
      },
      "steve": {
        "author": ["Eris"],
        "description": "If users ask variations on \"Where's Steve?\" the bot will post several LARGE pictures of steve. Small chance for these photos to be in a random order.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {
          "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
        },
        "requirements": [],
        "short": "Provides LARGE pictures of Steve when asked",
        "tags": [],
        "type": ""
      },
      "stonks": {
        "author": ["Eris"],
        "description": "Displays current and historical stock information using the yahoo finance API",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["yfinance", "mplfinance", "matplotlib"],
        "short": "A stock tracker using yahoofinance",
        "tags": [],
        "type": ""
      },
      "sudo": {
        "author": ["Eris"],
        "description": "Replies in a channel if someone tries to use sudo - i.e. just uses the letters 'sudo'",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {
          "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
        },
        "requirements": [],
        "short": "Warns when users say sudo",
        "tags": [],
        "type": ""
      },
      "suggestion": {
        "author": ["Eris"],
        "description": "Suggest a change, provides ez access urls",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Suggest",
        "tags": [],
        "type": ""
      },
      "timezone": {
        "author": ["Eris"],
        "description": "Timezone converter! Switch between multiple US timezones easily",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["fuzzywuzzy", "aiohttp", "pytz"],
        "short": "US Timezone converter",
        "tags": [],
        "type": ""
      },
      "venmo": {
        "author": ["Eris"],
        "description": "Posts my cashapp link",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {
          "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
        },
        "requirements": [],
        "short": "Venmo Replacement",
        "tags": [],
        "type": ""
      },
      "weave": {
        "author": ["Eris", "Maddie"],
        "description": "Create a mosaic of alternating specified emoji. Emojis may be animated or still. Usage: [p]weave emoji emoji width=5 height=3",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Create a mosaic of alternating emoji",
        "tags": [],
        "type": ""
      },
      "whois": {
        "author": ["Eris"],
        "description": "Whois for server members. Set, update, and look up names to keep track of who is who. \nUsages: \n`[p]avatar member` - Posts a full resolution image of a specified user's profile picture\n`[p]emoji emoji` - Posts a full resolution image of a specified emoji\n`[p]whois member` - Look up name\n`[p]theyare member name` - Set name \n`[p]iswho name` - Look up a username given their whois name \n`[p]iseveryone` - Lists all members of the server (without pinging!) and their whois names\n`[p]import_whois` - privileged users can export a whois database. File to import should be attached to the command message.\n`[p]export_whois` - Privileged users can export the whois DB to file",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Whois for discord",
        "tags": [],
        "type": ""
      },
      "wiggler": {
        "author": ["Eris"],
        "description": "Adds random reactions to posts! User configurable.\nUsage:\n`[p]wiggle set emojis...` - set list of random emoji to choose from.\n`[p]wiggle show` - show your registered emoji\n`[p]wiggle showall` - show all registered emoji (requires mod access)",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Adds random reactions to posts!",
        "tags": [],
        "type": ""
      },
      "zalgo": {
        "author": ["Eris"],
        "description": "Memes the provided message and deletes the original.\nUsage:\n`[p]zalgo message` - [zalgo](https://knowyourmeme.com/memes/zalgo)\n`[p]uwu message` - [uwu](https://knowyourmeme.com/memes/uwu)\n`[p]oob message` - [oob](https://www.pinterest.com/pin/415879346839911237/)\n`[p]spoilerify message` - spoilers every other word",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {
          "event_config": "http://github.com/TheDataLeek/Eris-Cogs"
        },
        "requirements": [],
        "short": "Memes and replaces text.",
        "tags": [],
        "type": ""
      }
    },
    "short": "Eris' cogs for Red-DiscordBot"
  },
  "https://github.com/tmercswims/tmerc-cogs": {
    "author": ["tmerc"],
    "description": "Utilities, community tools, and goofy commands, all in one place.",
    "name": "tmerc-cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "catfact": {
        "author": ["tmerc"],
        "description": "Gets a random cat fact.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Gets a random cat fact.",
        "tags": ["catfact", "cat", "animals", "random", "fun"],
        "type": ""
      },
      "lenny": {
        "author": ["tmerc"],
        "description": "\u4e41(-\u30ed-)\u310f",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)",
        "tags": ["lenny", "emoji", "donger", "kaomoji", "fun"],
        "type": ""
      },
      "massdm": {
        "author": ["tmerc"],
        "description": "Send a direct message to all members of the specified Role. Personalize the message for each person.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "DM a Role.",
        "tags": ["tools", "utility", "moderation", "dm"],
        "type": ""
      },
      "nestedcommands": {
        "author": ["tmerc"],
        "description": "Experimental cog that allows you to use the output of one command as the input of another.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Nest commands together.",
        "tags": ["subcommand", "experimental", "tools", "utility"],
        "type": ""
      },
      "randimals": {
        "author": ["tmerc"],
        "description": "Displays random images of some animals.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Get some random animal images.",
        "tags": ["animal", "random", "fun"],
        "type": ""
      },
      "streamrole": {
        "author": ["tmerc"],
        "description": "Assign a configurable role to anyone who is streaming.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Streamers get a role.",
        "tags": ["stream", "role", "tools", "utility"],
        "type": ""
      },
      "welcome": {
        "author": ["tmerc"],
        "description": "Announces members joining, leaving, getting banned, and getting unbanned, in a customizable text channel and with customizable messages.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Announces membership events.",
        "tags": ["welcome", "greetings", "leave", "ban", "utility"],
        "type": ""
      }
    },
    "short": "B\u0336o\u0336d\u0336y\u0336 Cogs by tmerc."
  },
  "https://github.com/vertyco/vrt-cogs": {
    "author": ["Vertyco"],
    "description": "Various utility cogs for Red, with a few other random/fun cogs sprinkled in.",
    "name": "vrt-cogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "assistant": {
        "author": ["Vertyco"],
        "description": "Full featured Chat GPT assistant(or chat) cog with configurable prompt injection, dynamic embeddings, and custom function calling",
        "disabled": false,
        "end_user_data_statement": "This cog stores prompts and OpenAI API keys on a per server basis. If enabled, conversations with the bot are also persistently stored",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 9, 1],
        "permissions": ["read_messages", "send_messages"],
        "required_cogs": {},
        "requirements": [
          "openai>=0.27.8",
          "aiocache",
          "ujson",
          "msgpack",
          "aiohttp",
          "pydantic",
          "orjson",
          "json5",
          "tiktoken",
          "scipy",
          "scikit-learn",
          "tenacity",
          "matplotlib",
          "plotly",
          "pandas",
          "rapidfuzz",
          "pytz"
        ],
        "short": "Another GPT Cog",
        "tags": [
          "utility",
          "assistant",
          "gpt",
          "ai",
          "chat",
          "chatgpt",
          "chat-gpt"
        ],
        "type": "COG"
      },
      "autodocs": {
        "author": ["Vertyco"],
        "description": "Generate documentation for your cogs automatically",
        "disabled": false,
        "end_user_data_statement": "This cog does not store data about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 9, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["ujson", "msgpack", "pandas"],
        "short": "EZ Cog Doc Generation",
        "tags": ["utility", "docs", "documentation", "automatic", "autodocs"],
        "type": "COG"
      },
      "economytrack": {
        "author": ["Vertyco"],
        "description": "Track your economy's total balance over time",
        "disabled": false,
        "end_user_data_statement": "This cog does not store data about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.0",
        "min_python_version": [3, 9, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": ["pandas", "plotly", "kaleido", "rapidfuzz"],
        "short": "Economy tracker",
        "tags": ["utility", "economy", "bank", "tracking", "stats"],
        "type": "COG"
      },
      "emojitracker": {
        "author": ["Vertyco"],
        "description": "A simple guild emoji tracker",
        "disabled": false,
        "end_user_data_statement": "This cog stores Discord ID's",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.0",
        "min_python_version": [3, 9, 1],
        "permissions": ["read_messages"],
        "required_cogs": {},
        "requirements": ["tabulate"],
        "short": "Emoji tracker",
        "tags": ["emoji", "tracker", "stats"],
        "type": "COG"
      },
      "events": {
        "author": ["Vertyco"],
        "description": "Host and manage events in your server with a variety of customizable entry options",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.0",
        "min_python_version": [3, 9, 1],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": ["ujson", "msgpack"],
        "short": "Host and manage events in your server",
        "tags": ["event", "events", "submissions", "event manager"],
        "type": "COG"
      },
      "fluent": {
        "author": ["Vertyco"],
        "description": "Seamless translation between two languages in one channel.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data about users. This cog uses google and flowery's translator APIs",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 9, 1],
        "permissions": ["embed_links"],
        "required_cogs": {},
        "requirements": [
          "googletrans==3.1.0a0",
          "aiocache",
          "aiohttp",
          "ujson",
          "msgpack"
        ],
        "short": "Auto translation between two languages.",
        "tags": ["utility", "translate", "translator", "autotranslate"],
        "type": "COG"
      },
      "guildlog": {
        "author": ["Vertyco"],
        "description": "Log the bot joining and leaving guilds.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.0",
        "min_python_version": [3, 9, 1],
        "permissions": ["send_messages"],
        "required_cogs": {},
        "requirements": [],
        "short": "Log bot guild joins/leaves",
        "tags": ["utility", "logging", "logs", "guildlog"],
        "type": "COG"
      },
      "hunting": {
        "author": ["aikaterna", "Paddo"],
        "description": "Hunting, it hunts birds and things that fly.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store end user data. This cog does store discord IDs as needed for operation. This cog does store user stats for the cog such as their score. Users may remove their own content without making a data removal request. This cog does not support data requests, but will respect deletion requests.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": [3, 9, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "A bird hunting game.",
        "tags": ["hunting", "hunt", "game"],
        "type": "COG"
      },
      "levelup": {
        "author": ["Vertyco"],
        "description": "A local discord leveling system",
        "disabled": false,
        "end_user_data_statement": "This cog records Discord ID's and messages sent for each user",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.0",
        "min_python_version": [3, 9, 1],
        "permissions": [
          "read_messages",
          "send_messages",
          "manage_roles",
          "attach_files",
          "embed_links"
        ],
        "required_cogs": {},
        "requirements": [
          "matplotlib",
          "requests",
          "pillow",
          "validators",
          "tabulate",
          "colorgram.py",
          "emoji",
          "aiocache",
          "ujson",
          "msgpack"
        ],
        "short": "Leveling System",
        "tags": ["utility", "leveler", "level", "levelup", "leveling"],
        "type": "COG"
      },
      "meow": {
        "author": ["Vertyco"],
        "description": "Meow",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data about users right meow.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.0",
        "min_python_version": [3, 9, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Meow",
        "tags": ["meow", "cat", "cats"],
        "type": "COG"
      },
      "nobot": {
        "author": ["Vertyco"],
        "description": "Filter certain messages from other bots",
        "disabled": false,
        "end_user_data_statement": "This cog only listens for other bots, it is probably not a good idea to use this on large or public bots.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.0",
        "min_python_version": [3, 9, 1],
        "permissions": ["manage_messages", "send_messages", "add_reactions"],
        "required_cogs": {},
        "requirements": [],
        "short": "Filter bot messages",
        "tags": ["utility", "nobot"],
        "type": "COG"
      },
      "nonuke": {
        "author": ["Vertyco"],
        "description": "Anti-Nuke functions",
        "disabled": false,
        "end_user_data_statement": "This cog does not store data about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.0",
        "min_python_version": [3, 9, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Anti-Nuke Cog",
        "tags": ["nuke", "antinuke", "anti-nuke", "nonuke"],
        "type": "COG"
      },
      "pixl": {
        "author": ["Vertyco"],
        "description": "Guess pictures before anyone else as sections of it are slowly revealed.",
        "disabled": false,
        "end_user_data_statement": "This cog only stores user IDs for its leaderboard.\n\nThis cog can cause rate limiting on larger bots due to it deleting and re-sending updated images frequently.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.17",
        "min_python_version": [3, 9, 1],
        "permissions": [
          "read_messages",
          "send_messages",
          "manage_messages",
          "embed_links"
        ],
        "required_cogs": {},
        "requirements": [
          "Pillow",
          "aiohttp",
          "aiocache",
          "tabulate",
          "rapidfuzz"
        ],
        "short": "Image guessing game!",
        "tags": [
          "fun",
          "picture",
          "game",
          "games",
          "pictures",
          "image",
          "images",
          "guessing"
        ],
        "type": "COG"
      },
      "pupper": {
        "author": ["aikaterna", "vertyco"],
        "description": "Pupper is a configurable pet that can hand out credits.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "",
        "min_python_version": [3, 9, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Pet the dog.",
        "tags": ["pets"],
        "type": "COG"
      },
      "tickets": {
        "author": ["Vertyco"],
        "description": "Multi-Panel Discord support ticket system with buttons!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 9, 1],
        "permissions": [
          "read_messages",
          "send_messages",
          "manage_messages",
          "manage_permissions",
          "manage_roles",
          "attach_files",
          "embed_links",
          "manage_channels"
        ],
        "required_cogs": {},
        "requirements": ["numpy"],
        "short": "Advanced support ticket system",
        "tags": ["utility", "tickets", "ticket", "support", "support system"],
        "type": "COG"
      },
      "upgradechat": {
        "author": ["Vertyco"],
        "description": "Upgrade.Chat integration for purchasing economy credits directly",
        "disabled": false,
        "end_user_data_statement": "This cog does not store any personal data of users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.4.0",
        "min_python_version": [3, 9, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Upgrade.Chat API Economy Integration",
        "tags": [
          "utility",
          "upgrade",
          "chat",
          "upgrade.chat",
          "economy",
          "supporter",
          "donate",
          "donations",
          "bank"
        ],
        "type": "COG"
      },
      "vrtutils": {
        "author": ["Vertyco"],
        "description": "Random utility commands for viewing bot stats and users",
        "disabled": false,
        "end_user_data_statement": "This cog does not store data about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 9, 1],
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "psutil",
          "py-cpuinfo",
          "speedtest-cli>=2.1.3",
          "dislash.py"
        ],
        "short": "Random utility commands",
        "tags": ["utility"],
        "type": "COG"
      },
      "xtools": {
        "author": ["Vertyco"],
        "description": "View your Xbox profile, friends, game clips, achievements and more!",
        "disabled": false,
        "end_user_data_statement": "This cog uses Microsofts XSAPI endpoints to pull data. It stores your (the bot owner's) client ID and secret for the Azure application for authorization.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 9, 1],
        "permissions": [
          "read_messages",
          "send_messages",
          "manage_messages",
          "embed_links",
          "add_reactions",
          "manage_reactions"
        ],
        "required_cogs": {},
        "requirements": [
          "xmltojson",
          "xbox-webapi",
          "utils",
          "tabulate",
          "pytz"
        ],
        "short": "Get Xbox Live Info and Player Stats.",
        "tags": ["fun", "tools", "utility", "xbox", "microsoft", "xsapi"],
        "type": "COG"
      }
    },
    "short": "Utility & Game Server cogs by Vertyco"
  },
  "https://github.com/yamikaitou/YamiCogs": {
    "author": ["YamiKaitou#8975"],
    "description": "Just some random cogs that I wrote/ported/modified and want to share back to the public",
    "name": "YamiCogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "Tube": {
        "author": ["CrunchBangDev", "YamiKaitou#8975"],
        "description": "Posts in a channel every time a new video is added to a YouTube channel.",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["feedparser"],
        "short": "Subscribe to channels on the 'tube",
        "tags": [],
        "type": "COG"
      },
      "collectcards": {
        "author": ["YamiKaitou#8975"],
        "description": "Collect 'cards' (emoji) to complete sets for points",
        "disabled": true,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": true,
        "max_bot_version": "3.4.26",
        "min_bot_version": "3.4.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "A 'card' (emoji) collecting game",
        "tags": [],
        "type": "COG"
      },
      "economytrickle": {
        "author": ["YamiKaitou#8975"],
        "description": "Automatically trickle some credits into your bot's economy",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store end user data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["tabulate"],
        "short": "Trickle credits into your economy",
        "tags": ["economy", "trickle"],
        "type": ""
      },
      "kill": {
        "author": ["YamiKaitou#8975", "Paddolicious#8880"],
        "description": "Add kill methods and kill people with them! Originally made for v2 by Paddo",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Have you always wanted to kill someone? If so, do it in a creative way!",
        "tags": ["kill", "fun"],
        "type": ""
      },
      "lottery": {
        "author": ["YamiKaitou#8975"],
        "description": "Play a Lucky3 'scratcher', a Daily Drawing, or a Weekly Drawing",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users.",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Play some Lottery games",
        "tags": ["economy", "fun"],
        "type": ""
      },
      "payday": {
        "author": ["YamiKaitou#8975"],
        "description": "Give bonus credits for daily and other times",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store end user data. This cog does store Discord UserIDs as needed for operation.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["tabulate"],
        "short": "More PayDay options",
        "tags": ["utility", "economy", "daily", "payday", "freecredits"],
        "type": ""
      },
      "rolenotify": {
        "author": ["YamiKaitou#8975"],
        "description": "Send a user a DM or post in a channel when they have a Role added or removed from them",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Notify a user when they have a Role added or removed from them",
        "tags": ["role", "notify"],
        "type": "COG"
      },
      "rps": {
        "author": ["YamiKaitou#8975"],
        "description": "Play a game of Rock, Paper, Scissors (Lizard, Spock); but with Buttons!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Rock, Paper, Scissors (Lizard, Spock)",
        "tags": ["game", "fun", "rps", "rpsls", "fun", "buttons"],
        "type": "COG"
      },
      "slots": {
        "author": ["YamiKaitou#8975"],
        "description": "Various Slot Machine games",
        "disabled": true,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": true,
        "max_bot_version": "3.4.26",
        "min_bot_version": "3.4.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["dislash.py==1.0.16"],
        "short": "Various Slot Machine games",
        "tags": [],
        "type": "COG"
      }
    },
    "short": "A random group of cogs"
  },
  "https://github.com/zephyrkul/FluffyCogs": {
    "author": ["Zephyrkul (Zephyrkul#1089)"],
    "description": "My cogs for utility, requests, or proof-of-concepts. Or memes, as is the case with the skyrim cog.",
    "name": "FluffyCogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {
      "act": {
        "author": ["Zephyrkul (Zephyrkul#1089)"],
        "description": "Lets you command the bot to perform an action on someone else.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["inflection"],
        "short": "Command the bot to perform an action on a fellow user.",
        "tags": ["fun"],
        "type": ""
      },
      "anticrashvid": {
        "author": ["Zephyrkul (Zephyrkul#1089)"],
        "description": "Automatically delete and log malicious videos that attempt to crash Discord clients.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["youtube-dl"],
        "short": "Automatically delete and log malicious videos that attempt to crash Discord clients.",
        "tags": ["moderation", "security"],
        "type": ""
      },
      "antigifv": {
        "author": ["Zephyrkul (Zephyrkul#1089)"],
        "description": "Automatically suppress any GifV embeds. Useful if your system cannot handle the anticrashvid cog.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Automatically suppress any GifV embeds. Useful if your system cannot handle the anticrashvid cog.",
        "tags": ["moderation", "security"],
        "type": ""
      },
      "autodisconnect": {
        "author": ["Zephyrkul (Zephyrkul#1089)"],
        "description": "Automatically disconnect inactive VC users. Requires a set AFK channel.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Automatically disconnect inactive VC users. Requires a set AFK channel.",
        "tags": ["voice", "utility"],
        "type": ""
      },
      "clocks": {
        "author": ["Zephyrkul (Zephyrkul#1089)"],
        "description": "Track projects with clocks. Mainly used for Forged in the Dark tabletop RPGs.",
        "disabled": false,
        "end_user_data_statement": "This cog stores data provided via command by users for the express purpose of redisplaying. Users may remove this data via data request or via command.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Track FitD projects with clocks.",
        "tags": ["utility"],
        "type": ""
      },
      "cmdreplier": {
        "author": ["Zephyrkul (Zephyrkul#1089)"],
        "description": "Let command responses reply to the same message the command message replies to.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Let command responses reply to the same message the command message replies to.",
        "tags": ["utility"],
        "type": ""
      },
      "invoice": {
        "author": ["Zephyrkul (Zephyrkul#1089)", "Paddo"],
        "description": "Create and manage microphoneless / nomic text channels for VC users with no microphone.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["git+https://github.com/zephyrkul/proxyembed"],
        "short": "Create and manage microphoneless / nomic text channels for VC users with no microphone.",
        "tags": ["voice", "utility"],
        "type": ""
      },
      "logsfrom": {
        "author": ["Zephyrkul (Zephyrkul#1089)"],
        "description": "Log a specified channel to a markdown file.",
        "disabled": false,
        "end_user_data_statement": "This cog enables logging messages for bot owners and admins. The bot itself does not persistently store this data.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": [3, 7, 0],
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Log a specified channel to a markdown file.",
        "tags": ["logging", "utility"],
        "type": ""
      },
      "nationstates": {
        "author": ["Zephyrkul (Zephyrkul#1089)"],
        "description": "Access information from NationStates.net.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [
          "sans>=1.2.0,<2.0.0",
          "git+https://github.com/zephyrkul/proxyembed"
        ],
        "short": "Access information from NationStates.net.",
        "tags": ["utility"],
        "type": ""
      },
      "onedit": {
        "author": ["Zephyrkul (Zephyrkul#1089)"],
        "description": "Allow users to run bot commands with edited messages, with a specified timeout.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Allow users to run bot commands with edited messages, with a specified timeout.",
        "tags": ["utility"],
        "type": ""
      },
      "onetrueslash": {
        "author": ["Zephyrkul (Zephyrkul#1089)"],
        "description": "Add the one and only slash command you will ever need to your bot!",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["rapidfuzz"],
        "short": "Add the one and only slash command you will ever need to your bot!",
        "tags": ["slash", "dpy2", "utility"],
        "type": ""
      },
      "rift": {
        "author": [
          "Zephyrkul (Zephyrkul#1089)",
          "Twentysix26 (Twentysix#5252)"
        ],
        "description": "Communicate with other servers through Red! Works to and from DMs as well.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users. This cog does store user IDs necessary for anti-abuse measures, i.e. blocklists.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Allows cross-server communication through Red",
        "tags": [
          "cross-server",
          "communication",
          "fun",
          "trolling",
          "impersonation"
        ],
        "type": ""
      },
      "rtfs": {
        "author": ["Zephyrkul (Zephyrkul#1089)"],
        "description": "Allows users to read the source of publicly-sourced commands. The bot owner can also read the source of any Python object if developer mode is enabled.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Read The Source",
        "tags": ["dev", "utilities"],
        "type": ""
      },
      "secureinv": {
        "author": ["Zephyrkul (Zephyrkul#1089)"],
        "description": "Set up secure invites.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Set up secure invites.",
        "tags": ["utility"],
        "type": ""
      },
      "skyrim": {
        "author": ["Zephyrkul (Zephyrkul#1089)"],
        "description": "Say a random line from Skyrim\nWARNING: SPOILERS FOR SKYRIM.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Say a random line from Skyrim. WARNING: Spoilers for Skyrim.",
        "tags": ["skyrim", "gaming", "fun"],
        "type": ""
      },
      "spoilerer": {
        "author": ["Zephyrkul (Zephyrkul#1089)"],
        "description": "Add a spoiler command and a spoiler button for use by mobile users, who lack the ability to spoiler images.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Add a spoiler command and a spoiler button for use by mobile users, who lack the ability to spoiler images.",
        "tags": ["utilities"],
        "type": ""
      },
      "theme": {
        "author": ["Zephyrkul (Zephyrkul #1089)"],
        "description": "Allows you to set themes to easily play accross all servers.",
        "disabled": false,
        "end_user_data_statement": "This cog stores data provided via command by users for the purposes of replaying.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Allows you to set themes to easily play accross all servers.",
        "tags": ["music", "audio", "fun"],
        "type": ""
      },
      "turn": {
        "author": ["Zephyrkul (Zephyrkul#1089)"],
        "description": "Track turns for posting in a channel, and bugs the next person in line until they start typing.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store any data or metadata about users.",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Track turns for posting in a channel.",
        "tags": ["utility"],
        "type": ""
      }
    },
    "short": "Only the fluffiest of cogs go here."
  },
  "https://github.com/zhaobenny/bz-cogs": {
    "author": ["zhaobenny"],
    "description": "random, niche, non-user friendly, and duct taped together cogs",
    "name": "bz-cogs",
    "rx_branch": "",
    "rx_category": "unapproved",
    "rx_cogs": {
      "ai_user": {
        "author": ["zhaobenny"],
        "description": "Utilize OpenAI to reply to messages and images in approved channels.",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users, but recent chat messages may be sent to OpenAI to generate responses. Please refer to: <https://openai.com/policies/privacy-policy>. Images, if enabled for scanning, may be sent to ai-horde. Please refer to: <https://stablehorde.net/privacy> ",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["openai", "tenacity", "tiktoken", "Pillow"],
        "short": "Human-like user behavior powered by OpenAI.",
        "tags": ["openai", "chatgpt", "chatbot"],
        "type": ""
      },
      "aiemote": {
        "author": ["zhaobenny"],
        "description": "Utilize OpenAI to select the 'best' react for a message",
        "disabled": false,
        "end_user_data_statement": "This cog does not persistently store data or metadata about users, but chat messages be sent to OpenAI to generate an emoji selection. Please refer to: <https://openai.com/policies/privacy-policy>. ",
        "hidden": false,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": ["openai", "tenacity", "tiktoken", "emoji"],
        "short": "OpenAI-powered reacts",
        "tags": ["openai", "chatgpt", "react"],
        "type": ""
      },
      "lifx_light": {
        "author": ["zhaobenny"],
        "description": "Control a single Lifx light",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Control a single Lifx light",
        "tags": [],
        "type": ""
      },
      "oneletteronly": {
        "author": ["zhaobenny"],
        "description": "Change new user's nickname to the first initals of their username",
        "disabled": false,
        "end_user_data_statement": "",
        "hidden": true,
        "max_bot_version": "",
        "min_bot_version": "3.5.0",
        "min_python_version": "",
        "permissions": [],
        "required_cogs": {},
        "requirements": [],
        "short": "Set new user's nicknames to initals of their username",
        "tags": [],
        "type": ""
      }
    },
    "short": "random niche cogs"
  },
  "https://gitlab.com/CrunchBangDev/cbd-cogs": {
    "author": ["CrunchBangDev"],
    "description": "Put this in your bot and smoke it",
    "name": "cbd-cogs",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {},
    "short": "Got cogs?"
  },
  "https://gitlab.com/Eragon5779/TechCogsV3": {
    "author": ["Eragon5779"],
    "description": "A collection of cogs for gathering information about technology, and other tech utility commands.\nThis repo is for V3 only!",
    "name": "TechCogsV3",
    "rx_branch": "",
    "rx_category": "approved",
    "rx_cogs": {},
    "short": "A collection of cogs for technology purposes"
  }
}
